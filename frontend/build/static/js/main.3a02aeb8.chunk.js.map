{"version":3,"sources":["styles/ExamStyle.js","components/QuestionList.jsx","styles/CommonStyle.js","components/CreateQuestion.jsx","components/CreateExam.jsx","helpers/validations.js","components/EditProfile.jsx","components/ExamDetail.jsx","components/ExamList.jsx","components/ExamListTeacher.jsx","components/Navbar.jsx","styles/ResponseStyle.js","components/ResponsesList.jsx","components/ResultHistory.jsx","components/StudentsResultList.jsx","components/ChatWindow.jsx","components/ExamWindowTeacher.jsx","components/ContentArea.jsx","components/ExamWindow.jsx","components/Home.jsx","components/Register.jsx","components/MainLayout.jsx","App.js","reportWebVitals.js","index.js"],"names":["examDetailsStyles","makeStyles","root","padding","textAlign","height","backgroundColor","overflow","box","boxShadow","heading1","fontSize","marginBottom","fontWeight","heading2","paddingTop","paddingBottom","paddingLeft","paddingRight","formElement","display","justifyContent","margin","instructionsBox","marginTop","typo","createExamStyles","gridOuter","gridOuter2","questionList","paragraph","color","flexBox1","flexDirection","width","flexBox2","examWindowStyles","questionGrid","questionBox","summary","typo1","typo2","typo3","err","examDetailsBox","headBox","examName","typo4","err2","buttonGrid","examListStyles","borderRadius","noexam","alignItems","noexamTypo","examWindowTeacherStyles","chatBox","outerBox","questionStyles","btn","buttonBox","noQuestion","accordion","formatAnswer","answerArray","ans","forEach","ele","ind","String","fromCharCode","formatMarkedAnswer","responseString","responseArr","split","map","QuestionList","props","classes","Box","questions","length","curQuestion","Accordion","className","AccordionSummary","expandIcon","id","Grid","container","spacing","item","xs","sm","md","lg","xl","Typography","questionName","marks","AccordionDetails","problemStatement","Divider","light","option_A","option_B","option_C","option_D","answer","responses","recordedAnswers","explanation","role","page","Button","variant","onClick","deleteQuestion","commonStyles","card","alignContent","marginleft","marginRight","headingLeft","marginLeft","subHeadingCenter","normalParaRight","loading","chatWindowStyles","msgBox","homeStyle","head","para","link","cursor","textDecoration","registerStyle","navbarStyle","navHead","navItem","btnGrp","editProfileStyle","head1","CreateQuestion","classes1","TextField","fullWidth","label","name","value","question","onChange","handleQuestionChange","size","multiline","minRows","maxRows","FormLabel","FormControlLabel","control","Checkbox","checked","e","handleOptionChecked","select","subject","userDetails","expertise","option","MenuItem","difficulty","type","CreateExam","isEditing","editExamDetails","prevExam","initialExam","createdBy","_id","startTime","endTime","passingMarks","totalMarks","activityThreshold","initialQuestion","useState","open","setOpen","exam","setExam","setQuestionList","totalQuestionList","setTotalQuestionList","pickedQuestion","setPickedQuestion","selectedQuestions","setSelectedQuestions","setTotalMarks","duration","setDuration","date","setDate","setQuestion","setErr","handleClose","fetchQuestions","axios","get","headers","Authorization","token","params","then","res","data","message","result","toast","catch","console","log","setLayout","useEffect","filteredQuestion","filter","handleChange","target","Date","startDatetimeUTC","moment","utc","format","add","toDate","endDatetimeUTC","reqBody","url","post","setEditExamDetails","setCurrPage","helperText","style","disabled","newtotal","updatedQuestions","index","Dialog","onClose","DialogTitle","DialogContentText","DialogContent","newAnswer","key","DialogActions","reduce","count","finally","validateEmail","email","test","validateMobile","phone","validateExpertise","subjects","EditProfile","errMsg","setErrMsg","intialState","user","setUser","Avatar","sx","bgcolor","required","contact","class","rollNo","institute","address","password","localStorage","getItem","setUserDetails","ExamDetail","expiryTimestamp","selectedExam","isDisable","setIsDisable","useTimer","onExpire","seconds","minutes","hours","days","newResponses","examId","studentId","m1","diff","getDuration","completed","setResponsesId","document","documentElement","requestFullscreen","ExamList","examList","setExamList","curExam","setSelectedExam","setLoading","displayExam","setDisplayExam","setChecked","prev","fetchExams","remainingExams","expiredExams","Switch","Stack","direction","IconButton","delete","setResponseHistory","window","scrollTo","top","CircularProgress","content","Navbar","toggleDrawer","event","Drawer","anchor","removeItem","studentResultStyles","table","responseListStyles","resultHistoryStyles","flexBox","ResponsesList","responsesList","setResponsesList","TableContainer","maxHeight","component","Paper","Table","stickyHeader","TableHead","TableRow","TableCell","align","TableBody","row","border","scope","finishTime","passed","setCurResponses","ResultHistory","selectedResponses","curResponses","myData","x","y","scoresObtained","padAngle","datum","colorScale","StudentsResultList","responseHistory","ChatWindow","classes2","input","setInput","messages","setMessages","socket","setSocket","io","emit","on","userName","msg","oldMessages","close","ExamWindowTeacher","startExam","setStartExam","examDetails","setExamDetails","expiryTimestamp1","expiryTimestamp2","endTimer","handleExamEnd","ContentArea","currPage","setUsername","layout","ExamListTeacher","responsesId","ExamWindow","selectedExamDetails","setSelectedExamDetails","JSON","parse","answers","setAnswers","setCount","handleSubmit","onfocus","ev","onblur","onChangeAnswers","questionNumber","checkedOption","singleAns","optionNo","savedAnswers","boolAnswerString","toString","fullscreenElement","setItem","stringify","sum","username","Home","preventDefault","Register","Card","CardContent","MainLayout","initialPage","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3a02aeb8.chunk.js","sourcesContent":["import { makeStyles } from \"@mui/styles\";\r\nexport const examDetailsStyles = makeStyles({\r\n  root: {\r\n    padding: \"20px\",\r\n    textAlign: \"left\",\r\n    height: \"100vh\",\r\n    backgroundColor: \"#f5f0e1\",\r\n    overflow: \"auto\",\r\n  },\r\n  box: {\r\n    padding: \"10px\",\r\n    backgroundColor: \"white\",\r\n    boxShadow: \"0 4px 8px 0 rgb(0 0 0 / 20%)\",\r\n  },\r\n  heading1: {\r\n    fontSize: \"28px !important\",\r\n    marginBottom: \"10px !important\",\r\n    padding: \"5px !important\",\r\n    fontWeight: \"bold !important\",\r\n    textAlign: \"center\",\r\n  },\r\n  heading2: {\r\n    fontSize: \"24px !important\",\r\n    paddingTop: \"10px !important\",\r\n    paddingBottom: \"10px !important\",\r\n    paddingLeft: \"20px !important\",\r\n    paddingRight: \"20px !important\",\r\n    fontWeight: \"bold !important\",\r\n  },\r\n  formElement: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    margin: \"10px !important\",\r\n    fontSize: \"16px !important\",\r\n    \"& span\": {\r\n      fontSize: \"16px !important\",\r\n      fontWeight: \"bold !important\",\r\n    },\r\n  },\r\n  instructionsBox: {\r\n    marginTop: \"10px\",\r\n    padding: \"10px\",\r\n    height: \"400px\",\r\n    overflow: \"auto\",\r\n  },\r\n  typo: {\r\n    marginBottom: \"10px !important\",\r\n  },\r\n});\r\n\r\nexport const createExamStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"#f5f0e1\",\r\n    height: \"100vh\",\r\n    padding: \"20px\",\r\n    overflow: \"auto\",\r\n  },\r\n  gridOuter: {\r\n    backgroundColor: \"white\",\r\n    padding: \"20px\",\r\n    boxShadow: \"0 4px 8px 0 rgb(0 0 0 / 20%)\",\r\n  },\r\n  gridOuter2: {\r\n    backgroundColor: \"#ffc13b\",\r\n    padding: \"20px\",\r\n    boxShadow: \"0 4px 8px 0 rgb(0 0 0 / 20%)\",\r\n  },\r\n  questionList: {\r\n    height: \"400px\",\r\n    overflow: \"auto\",\r\n    padding: \"10px\",\r\n  },\r\n\r\n  paragraph: {\r\n    padding: \"5px\",\r\n    \"& span\": {\r\n      color: \"black\",\r\n      fontSize: \"18px\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  flexBox1: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"40%\",\r\n  },\r\n  flexBox2: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"48%\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n});\r\n\r\nexport const examWindowStyles = makeStyles({\r\n  root: {\r\n    padding: \"20px\",\r\n    textAlign: \"left\",\r\n    backgroundColor: \"#1e3d59\",\r\n  },\r\n  questionGrid: {\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  questionBox: {\r\n    margin: \"10px\",\r\n    boxShadow: \"0 4px 4px 0 rgb(0 0 0 / 20%)\",\r\n  },\r\n  summary: {\r\n    backgroundColor: \"#f5f5f5 !important\",\r\n  },\r\n  typo1: {\r\n    padding: \"5px !important\",\r\n    fontWeight: \"bold !important\",\r\n    fontSize: \"18px !important\",\r\n  },\r\n\r\n  typo2: {\r\n    textAlign: \"right !important\",\r\n    padding: \"5px !important\",\r\n    fontWeight: \"bold !important\",\r\n  },\r\n  typo3: {\r\n    padding: \"10px !important\",\r\n  },\r\n  flexBox1: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  err: {\r\n    color: \"red !important\",\r\n  },\r\n  examDetailsBox: {\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"white\",\r\n    padding: \"20px\",\r\n    boxShadow: \"0 4px 8px 0 rgb(0 0 0 / 20%)\",\r\n  },\r\n  headBox: {\r\n    marginBottom: \"20px\",\r\n  },\r\n  examName: {\r\n    fontSize: \"24px !important\",\r\n    fontWeight: \"bold !important\",\r\n  },\r\n  typo4: {\r\n    fontSize: \"16px !important\",\r\n    fontWeight: \"bold !important\",\r\n    marginBottom: \"20px !important\",\r\n  },\r\n  err2: {\r\n    color: \"red !important\",\r\n    marginTop: \"20px !important\",\r\n  },\r\n  buttonGrid: {\r\n    marginTop: \"20px !important\",\r\n  },\r\n});\r\n\r\nexport const examListStyles = makeStyles({\r\n  root: {\r\n    padding: \"20px\",\r\n    textAlign: \"left\",\r\n    height: \"100vh\",\r\n    backgroundColor: \"#f5f0e1\",\r\n    overflow: \"auto\",\r\n  },\r\n  box: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"5px\",\r\n    boxShadow: \"0 4px 8px 0 rgb(0 0 0 / 20%)\",\r\n    padding: \"20px\",\r\n  },\r\n  heading1: {\r\n    fontSize: \"18px !important\",\r\n    marginBottom: \"20px !important\",\r\n    fontWeight: \"bold !important\",\r\n  },\r\n  typo: {\r\n    marginBottom: \"20px !important\",\r\n    \"& span\": {\r\n      fontWeight: \"bold !important\",\r\n    },\r\n  },\r\n  noexam: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    fontSize: \"24px\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    height: \"60vh\",\r\n  },\r\n  noexamTypo: {\r\n    fontSize: \"28px !important\",\r\n    fontWeight: \"bold !important\",\r\n    marginBottom: \"20px !important\",\r\n  },\r\n});\r\nexport const examWindowTeacherStyles = makeStyles({\r\n  root: {\r\n    padding: \"20px\",\r\n    textAlign: \"left\",\r\n    height: \"100vh\",\r\n    backgroundColor: \"#f5f0e1\",\r\n    overflow: \"auto\",\r\n  },\r\n  box: {\r\n    padding: \"10px\",\r\n    backgroundColor: \"white\",\r\n    boxShadow: \"0 4px 8px 0 rgb(0 0 0 / 20%)\",\r\n  },\r\n  heading1: {\r\n    fontSize: \"28px !important\",\r\n    padding: \"10px !important\",\r\n    fontWeight: \"bold !important\",\r\n    textAlign: \"center !important\",\r\n  },\r\n  heading2: {\r\n    fontSize: \"20px !important\",\r\n    fontWeight: \"bold !important\",\r\n    padding: \"10px !important\",\r\n  },\r\n  formElement: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    margin: \"10px !important\",\r\n    fontSize: \"16px !important\",\r\n    \"& span\": {\r\n      fontSize: \"16px !important\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  instructionsBox: {\r\n    marginTop: \"10px\",\r\n    padding: \"10px\",\r\n    height: \"400px\",\r\n    overflow: \"auto\",\r\n  },\r\n  typo: {\r\n    marginBottom: \"10px !important\",\r\n  },\r\n  chatBox: {\r\n    marginTop: \"10px !important\",\r\n  },\r\n  outerBox: {\r\n    backgroundColor: \"white\",\r\n    boxShadow: \"0 4px 8px 0 rgb(0 0 0 / 20%)\",\r\n    padding: \"10px\",\r\n  },\r\n  questionList: {\r\n    height: \"400px\",\r\n    overflow: \"auto\",\r\n    padding: \"10px\",\r\n  },\r\n});\r\n\r\nexport const questionStyles = makeStyles({\r\n  btn: {\r\n    marginTop: \"10px !important\",\r\n  },\r\n  buttonBox: {\r\n    display: \"flex\",\r\n    justifyContent: \"right\",\r\n  },\r\n  noQuestion: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    fontSize: \"28px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  accordion: {\r\n    margin: \"5px\",\r\n    boxShadow: \"0 4px 4px 0 rgb(0 0 0 / 20%) !important\",\r\n  },\r\n  summary: {\r\n    backgroundColor: \"#f5f0e1 !important\",\r\n  },\r\n  typo: {\r\n    padding: \"5px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  paragraph: {\r\n    padding: \"5px\",\r\n    \"& span\": {\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Divider,\r\n} from \"@mui/material\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport { questionStyles } from \"../styles/ExamStyle\";\r\n\r\nconst formatAnswer = (answerArray) => {\r\n  let ans = \" \";\r\n  answerArray.forEach((ele, ind) => {\r\n    if (ele) ans += String.fromCharCode(65 + ind) + \" \";\r\n  });\r\n  return ans;\r\n};\r\n\r\nconst formatMarkedAnswer = (responseString) => {\r\n  const responseArr = responseString.split(\",\").map((ele) => ele === \"true\");\r\n  return formatAnswer(responseArr);\r\n};\r\n\r\nfunction QuestionList(props) {\r\n  const classes = questionStyles();\r\n  return (\r\n    <Box>\r\n      {props.questions && props.questions.length ? (\r\n        props.questions.map((curQuestion, ind) => (\r\n          <Accordion className={classes.accordion}>\r\n            <AccordionSummary\r\n              className={classes.summary}\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1a-content\"\r\n              id=\"panel1a-header\"\r\n            >\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={12} md={8} lg={10} xl={10}>\r\n                  <Typography className={classes.typo}>\r\n                    {ind + 1 + \" \"}. {curQuestion.questionName}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={4} lg={2} xl={2}>\r\n                  <Typography className={classes.typo}>\r\n                    Marks: {curQuestion.marks}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <Box>\r\n                <Typography className={classes.paragraph}>\r\n                  {curQuestion.problemStatement}\r\n                </Typography>\r\n                <Divider light />\r\n                <Typography className={classes.paragraph}>\r\n                  <span>Option A:</span> {curQuestion.option_A}\r\n                </Typography>\r\n\r\n                <Typography className={classes.paragraph}>\r\n                  <span>Option B:</span> {curQuestion.option_B}\r\n                </Typography>\r\n                <Typography className={classes.paragraph}>\r\n                  <span>Option C:</span> {curQuestion.option_C}\r\n                </Typography>\r\n                <Typography className={classes.paragraph}>\r\n                  <span>Option D:</span> {curQuestion.option_D}\r\n                </Typography>\r\n                <Divider light />\r\n                <Typography className={classes.paragraph}>\r\n                  <span>Correct Anwers:</span>\r\n                  {formatAnswer(curQuestion.answer)}\r\n                </Typography>\r\n                {props.responses && (\r\n                  <>\r\n                    <Divider light />\r\n                    <Typography className={classes.paragraph}>\r\n                      <span>Marked Anwers:</span>\r\n                      {formatMarkedAnswer(props.responses.recordedAnswers[ind])}\r\n                    </Typography>\r\n                  </>\r\n                )}\r\n                <Divider light />\r\n                <Typography className={classes.paragraph}>\r\n                  <span>Explanation: </span> {curQuestion.explanation}\r\n                </Typography>\r\n                {props.role === \"Faculty\" && props.page === \"createExam\" && (\r\n                  <>\r\n                    <Divider light />\r\n                    <Box className={classes.buttonBox}>\r\n                      <Button\r\n                        className={classes.btn}\r\n                        variant=\"contained\"\r\n                        onClick={() => props.deleteQuestion(ind)}\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </Box>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        ))\r\n      ) : (\r\n        <Box className={classes.noQuestion}>No Questions</Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default QuestionList;\r\n","import { makeStyles } from \"@mui/styles\";\r\nexport const commonStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"#f5f0e1\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    height: \"100vh\",\r\n    padding: \"20px\",\r\n    overflow: \"auto\",\r\n  },\r\n  card: {\r\n    width: \"45%\",\r\n    padding: \"10px\",\r\n    alignContent: \"left\",\r\n    boxShadow: \"0 4px 8px 0 rgb(0 0 0 / 20%)\",\r\n  },\r\n  formElement: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\",\r\n    padding: \"10px\",\r\n  },\r\n  btn: {\r\n    marginleft: \"10px !important\",\r\n    marginTop: \"10px !important\",\r\n    marginRight: \"10px !important\",\r\n  },\r\n  paragraph: {\r\n    padding: \"5px !important\",\r\n    \"& span\": {\r\n      color: \"black !important\",\r\n      fontSize: \"18px !important\",\r\n      fontWeight: \"bold !important\",\r\n    },\r\n  },\r\n  headingLeft: {\r\n    fontSize: \"28px !important\",\r\n    fontWeight: \"bold !important\",\r\n    textAlign: \"left\",\r\n    marginLeft: \"5px !important\",\r\n    marginRight: \"5px !important\",\r\n    marginBottom: \"10px !important\",\r\n  },\r\n  subHeadingCenter: {\r\n    fontSize: \"24px !important\",\r\n    fontWeight: \"bold !important\",\r\n    textAlign: \"center\",\r\n    margin: \"5px !important\",\r\n  },\r\n  normalParaRight: {\r\n    fontSize: \"18px !important\",\r\n    textAlign: \"right !important\",\r\n    margin: \"5px !important\",\r\n  },\r\n  err: {\r\n    padding: \"2px !important\",\r\n    textAlign: \"center !important\",\r\n    color: \"red !important\",\r\n  },\r\n  loading: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    fontSize: \"24px\",\r\n    fontWeight: \"bold\",\r\n    height: \"60vh\",\r\n  },\r\n});\r\n\r\nexport const chatWindowStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"white\",\r\n    padding: \"20px\",\r\n    boxShadow: \"0 4px 8px 0 rgb(0 0 0 / 20%)\",\r\n  },\r\n  chatBox: {\r\n    height: \"270px\",\r\n    overflow: \"auto\",\r\n  },\r\n  msgBox: {\r\n    padding: \"10px\",\r\n    margin: \"5px\",\r\n    backgroundColor: \"#F5F5F5\",\r\n  },\r\n  typo1: {\r\n    fontSize: \"16px !important\",\r\n    fontWeight: \"bold !important\",\r\n  },\r\n  typo2: {\r\n    fontSize: \"16px !important\",\r\n  },\r\n});\r\n\r\nexport const homeStyle = makeStyles({\r\n  root: {\r\n    backgroundColor: \"#1e3d59\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"100vh\",\r\n  },\r\n  box: {\r\n    height: \"80%\",\r\n    overflow: \"auto\",\r\n    width: \"40%\",\r\n    backgroundColor: \"white\",\r\n    boxShadow: \"0 4px 8px 0 rgb(0 0 0 / 20%)\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-evenly\",\r\n    padding: \"25px\",\r\n  },\r\n  head: {\r\n    fontSize: \"32px\",\r\n    fontWeight: \"bold\",\r\n    marginBottom: \"20px\",\r\n    textAlign: \"center\",\r\n  },\r\n  para: {\r\n    fontSize: \"14px\",\r\n    marginBottom: \"10px\",\r\n    textAlign: \"center\",\r\n  },\r\n  btn: {\r\n    padding: \"5px\",\r\n    marginTop: \"10px\",\r\n    marginBottom: \"10px\",\r\n  },\r\n  typo: {\r\n    padding: \"20px\",\r\n    textAlign: \"center\",\r\n  },\r\n  link: {\r\n    cursor: \"pointer\",\r\n    textDecoration: \"underline\",\r\n    color: \"blue\",\r\n  },\r\n});\r\n\r\nexport const registerStyle = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    backgroundColor: \"#1e3d59\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    overflow: \"auto\",\r\n    height: \"100vh\",\r\n  },\r\n  card: {\r\n    width: \"60%\",\r\n    padding: \"10px\",\r\n    height: \"85%\",\r\n    overflow: \"auto\",\r\n    alignContent: \"left\",\r\n    boxShadow: \"0 4px 8px 0 rgb(0 0 0 / 20%)\",\r\n  },\r\n  formElement: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    padding: \"10px\",\r\n  },\r\n  btn: {\r\n    width: \"50%\",\r\n    marginTop: \"20px\",\r\n  },\r\n  head: {\r\n    fontSize: \"32px\",\r\n    fontWeight: \"bold\",\r\n    marginBottom: \"20px\",\r\n  },\r\n  err: {\r\n    color: \"red\",\r\n    textAlign: \"center\",\r\n    margin: \"5px\",\r\n  },\r\n  box: {\r\n    marginTop: \"40px\",\r\n  },\r\n});\r\nexport const navbarStyle = makeStyles({\r\n  root: {\r\n    padding: \"10px\",\r\n    backgroundColor: \"#1e3d59\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  },\r\n  navHead: {\r\n    fontSize: \"28px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  navItem: {\r\n    \"&:hover\": {\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  headBox: {\r\n    width: \"350px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  outerBox: {\r\n    width: \"70%\",\r\n    height: \"300px\",\r\n    overflow: \"auto\",\r\n  },\r\n  head: {\r\n    padding: \"10px !important\",\r\n    marginBottom: \"20px !important\",\r\n    fontWeight: \"bold !important\",\r\n  },\r\n  typo: {\r\n    padding: \"5px\",\r\n    \"& span\": {\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  btnGrp: {\r\n    width: \"80%\",\r\n    marginTop: \"10px\",\r\n  },\r\n});\r\n\r\nexport const editProfileStyle = makeStyles({\r\n  root: {\r\n    overflow: \"auto\",\r\n    padding: \"20px\",\r\n    height: \"100vh\",\r\n    backgroundColor: \"#f5f0e1\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  card: {\r\n    padding: \"20px\",\r\n    height: \"65%\",\r\n    overflow: \"auto\",\r\n    backgroundColor: \"white\",\r\n    boxShadow: \"0 4px 8px 0 rgb(0 0 0 / 20%)\",\r\n  },\r\n  formElement: {\r\n    padding: \"10px !important\",\r\n  },\r\n  head1: {\r\n    fontSize: \"32px !important\",\r\n    fontWeight: \"bold !important\",\r\n    marginBottom: \"20px !important\",\r\n  },\r\n  typo1: {\r\n    fontSize: \"18px !important\",\r\n    padding: \"5px !important\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport { commonStyles } from \"../styles/CommonStyle\";\r\nimport { createExamStyles } from \"../styles/ExamStyle\";\r\n\r\nfunction CreateQuestion(props) {\r\n  const classes = commonStyles();\r\n  const classes1 = createExamStyles();\r\n  return (\r\n    <Box>\r\n      <Box className={classes.formElement}>\r\n        <TextField\r\n          variant=\"standard\"\r\n          fullWidth\r\n          label=\"Question Name\"\r\n          name=\"questionName\"\r\n          value={props.question.questionName}\r\n          onChange={props.handleQuestionChange}\r\n          size=\"small\"\r\n        />\r\n      </Box>\r\n      <Box className={classes.formElement}>\r\n        <TextField\r\n          label=\"Problem Statement\"\r\n          multiline\r\n          minRows={3}\r\n          maxRows={3}\r\n          name=\"problemStatement\"\r\n          value={props.question.problemStatement}\r\n          onChange={props.handleQuestionChange}\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Box>\r\n      <Box className={classes.formElement}>\r\n        <TextField\r\n          label=\"Option A\"\r\n          variant=\"standard\"\r\n          fullWidth\r\n          name=\"option_A\"\r\n          value={props.question.option_A}\r\n          onChange={props.handleQuestionChange}\r\n          size=\"small\"\r\n        />\r\n      </Box>\r\n      <Box className={classes.formElement}>\r\n        <TextField\r\n          label=\"Option B\"\r\n          variant=\"standard\"\r\n          name=\"option_B\"\r\n          value={props.question.option_B}\r\n          onChange={props.handleQuestionChange}\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Box>\r\n      <Box className={classes.formElement}>\r\n        <TextField\r\n          label=\"Option C\"\r\n          variant=\"standard\"\r\n          name=\"option_C\"\r\n          value={props.question.option_C}\r\n          onChange={props.handleQuestionChange}\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Box>\r\n      <Box className={classes.formElement}>\r\n        <TextField\r\n          label=\"Option D\"\r\n          variant=\"standard\"\r\n          name=\"option_D\"\r\n          value={props.question.option_D}\r\n          onChange={props.handleQuestionChange}\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Box>\r\n      <Box className={classes.formElement}>\r\n        <Box className={classes1.flexBox1}>\r\n          <FormLabel className={classes.formElement}>Correct Options</FormLabel>\r\n\r\n          <FormControlLabel\r\n            label=\"Option A\"\r\n            control={\r\n              <Checkbox\r\n                checked={props.question.answer[0]}\r\n                onChange={(e) => props.handleOptionChecked(e, 0)}\r\n                name=\"opt_a\"\r\n              />\r\n            }\r\n          />\r\n          <FormControlLabel\r\n            label=\"Option B\"\r\n            control={\r\n              <Checkbox\r\n                checked={props.question.answer[1]}\r\n                onChange={(e) => props.handleOptionChecked(e, 1)}\r\n                name=\"opt_b\"\r\n              />\r\n            }\r\n          />\r\n          <FormControlLabel\r\n            label=\"Option C\"\r\n            control={\r\n              <Checkbox\r\n                checked={props.question.answer[2]}\r\n                onChange={(e) => props.handleOptionChecked(e, 2)}\r\n                name=\"opt_c\"\r\n              />\r\n            }\r\n          />\r\n          <FormControlLabel\r\n            label=\"Option D\"\r\n            control={\r\n              <Checkbox\r\n                checked={props.question.answer[3]}\r\n                onChange={(e) => props.handleOptionChecked(e, 3)}\r\n                name=\"opt_d\"\r\n              />\r\n            }\r\n          />\r\n        </Box>\r\n        <Box className={classes1.flexBox2}>\r\n          <TextField\r\n            id=\"outlined-select-currency\"\r\n            select\r\n            fullWidth\r\n            label=\"Select subject\"\r\n            size=\"small\"\r\n            name=\"subject\"\r\n            value={props.question.subject}\r\n            onChange={props.handleQuestionChange}\r\n          >\r\n            {props.userDetails.expertise.split(\" \").map((option) => (\r\n              <MenuItem key={option} value={option}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            id=\"outlined-select-currency\"\r\n            select\r\n            fullWidth\r\n            label=\"Difficulty\"\r\n            size=\"small\"\r\n            name=\"difficulty\"\r\n            value={props.question.difficulty}\r\n            onChange={props.handleQuestionChange}\r\n          >\r\n            {props.difficulty.map((option) => (\r\n              <MenuItem key={option} value={option}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            name=\"marks\"\r\n            value={props.question.marks}\r\n            onChange={props.handleQuestionChange}\r\n            fullWidth\r\n            type=\"number\"\r\n            label=\"Marks\"\r\n            size=\"small\"\r\n          />\r\n        </Box>\r\n      </Box>\r\n      <Box className={classes.formElement}>\r\n        <TextField\r\n          label=\"Explanation\"\r\n          multiline\r\n          name=\"explanation\"\r\n          value={props.question.explanation}\r\n          onChange={props.handleQuestionChange}\r\n          minRows={3}\r\n          maxRows={3}\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CreateQuestion;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  FormLabel,\r\n  Grid,\r\n  MenuItem,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogContentText,\r\n} from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport QuestionList from \"./QuestionList\";\r\nimport toast from \"react-simple-toasts\";\r\nimport { commonStyles } from \"../styles/CommonStyle\";\r\nimport { createExamStyles } from \"../styles/ExamStyle\";\r\nimport CreateQuestion from \"./CreateQuestion\";\r\n\r\nfunction CreateExam(props) {\r\n  const isEditing = props.editExamDetails ? true : false;\r\n  const prevExam = props.editExamDetails;\r\n  const initialExam = {\r\n    examName: isEditing ? prevExam.examName : \"\",\r\n    questions: [],\r\n    createdBy: props.userDetails._id,\r\n    startTime: \"\",\r\n    endTime: \"\",\r\n    subject: isEditing ? prevExam.subject : \"\",\r\n    passingMarks: isEditing ? prevExam.passingMarks : 0,\r\n    totalMarks: isEditing ? prevExam.totalMarks : 0,\r\n    activityThreshold: isEditing ? prevExam.activityThreshold : 3,\r\n  };\r\n  const initialQuestion = {\r\n    questionName: \"\",\r\n    problemStatement: \"\",\r\n    subject: \"\",\r\n    marks: 1,\r\n    difficulty: \"Easy\",\r\n    answer: [false, false, false, false],\r\n    explanation: \"Not available\",\r\n    option_A: \"\",\r\n    option_B: \"\",\r\n    option_C: \"\",\r\n    option_D: \"\",\r\n    createdBy: props.userDetails._id,\r\n  };\r\n\r\n  const classes = commonStyles();\r\n  const classes1 = createExamStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [exam, setExam] = useState(initialExam);\r\n  const [questionList, setQuestionList] = useState([]);\r\n  const [totalQuestionList, setTotalQuestionList] = useState([]);\r\n  const [pickedQuestion, setPickedQuestion] = useState(null);\r\n  const [selectedQuestions, setSelectedQuestions] = useState(\r\n    isEditing ? prevExam.questions : []\r\n  );\r\n  const [totalMarks, setTotalMarks] = useState(\r\n    isEditing ? prevExam.totalMarks : 0\r\n  );\r\n  const [duration, setDuration] = useState(0);\r\n  const [date, setDate] = useState(\"\");\r\n  const difficulty = [\"Easy\", \"Medium\", \"Hard\"];\r\n  const [question, setQuestion] = useState(initialQuestion);\r\n  const [err, setErr] = useState(\"\");\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setErr(\"\");\r\n    setQuestion(initialQuestion);\r\n  };\r\n\r\n  const fetchQuestions = () => {\r\n    axios\r\n      .get(\"/question/get\", {\r\n        headers: {\r\n          Authorization: \"Bearer \" + props.token,\r\n        },\r\n        params: {\r\n          subject: exam.subject,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.data.message === \"Success\") {\r\n          setQuestionList(res.data.result);\r\n          setTotalQuestionList(res.data.result);\r\n        } else {\r\n          toast(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast(err.message);\r\n        props.setLayout(\"home\");\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetchQuestions();\r\n  }, [exam.subject]);\r\n\r\n  useEffect(() => {\r\n    const filteredQuestion = totalQuestionList.filter(\r\n      (ele) => ele.subject === exam.subject\r\n    );\r\n    setQuestionList(filteredQuestion);\r\n  }, [exam.subject]);\r\n\r\n  const addQuestion = () => {\r\n    if (pickedQuestion)\r\n      setSelectedQuestions([...selectedQuestions, pickedQuestion]);\r\n    setTotalMarks(totalMarks + pickedQuestion.marks);\r\n  };\r\n\r\n  const deleteQuestion = (id) => {\r\n    let newtotal = 0;\r\n    selectedQuestions.map((ele, ind) => {\r\n      if (ind !== id) newtotal += ele.marks;\r\n      return;\r\n    });\r\n    let updatedQuestions = selectedQuestions.filter(\r\n      (item, index) => index !== id\r\n    );\r\n    if (updatedQuestions.length === 0) setPickedQuestion(null);\r\n    setTotalMarks(newtotal);\r\n    setSelectedQuestions(updatedQuestions);\r\n  };\r\n\r\n  const handleSelection = (e) => {\r\n    setPickedQuestion(e.target.value);\r\n  };\r\n  const handleChange = (e) => {\r\n    setExam({ ...exam, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleDuration = (e) => {\r\n    setDuration(e.target.value);\r\n  };\r\n  const handleDate = (e) => {\r\n    setDate(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const startTime = new Date(date);\r\n    const startDatetimeUTC = moment.utc(startTime).format();\r\n    const endTime = moment(startTime).add(duration, \"m\").toDate();\r\n    const endDatetimeUTC = moment.utc(endTime).format();\r\n    const questions = selectedQuestions.map((ele) => ele._id);\r\n\r\n    if (exam.examName === \"\") {\r\n      toast(\"Exam Name cannot be empty\");\r\n      return;\r\n    } else if (startTime == \"Invalid Date\" || endTime == \"Invalid Date\") {\r\n      toast(\"Select date properly\");\r\n      return;\r\n    } else if (exam.activityThreshold < 0) {\r\n      toast(\"User activity threshold has be to positive\");\r\n      return;\r\n    } else if (duration < 0) {\r\n      toast(\"Duration has be to positive\");\r\n      return;\r\n    } else if (exam.passingMarks > totalMarks || exam.passingMarks < 0) {\r\n      toast(\r\n        \"Passing marks should be positive and less than or equals to total\"\r\n      );\r\n      return;\r\n    } else if (exam.subject === \"\") {\r\n      toast(\"Select subject properly\");\r\n      return;\r\n    }\r\n\r\n    const reqBody = {\r\n      ...exam,\r\n      startTime: startDatetimeUTC,\r\n      endTime: endDatetimeUTC,\r\n      questions: questions,\r\n      totalMarks: totalMarks,\r\n    };\r\n\r\n    const url = isEditing\r\n      ? \"/exam/update/\" + prevExam._id + \"/\" + props.userDetails._id\r\n      : \"/exam/add\";\r\n    axios\r\n      .post(url, reqBody, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + props.token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setExam(initialExam);\r\n        setDate(\"\");\r\n        setDuration(0);\r\n        setTotalMarks(0);\r\n        setPickedQuestion(null);\r\n        setSelectedQuestions([]);\r\n        toast(res.data.message);\r\n        props.setEditExamDetails(null);\r\n        props.setCurrPage(\"examList\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast(err.message);\r\n      });\r\n  };\r\n\r\n  const handleQuestionChange = (e) => {\r\n    setQuestion({ ...question, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleOptionChecked = (e, id) => {\r\n    const newAnswer = question.answer.map((ele, key) => {\r\n      if (key === id) {\r\n        return e.target.checked;\r\n      }\r\n      return ele;\r\n    });\r\n\r\n    setQuestion({ ...question, answer: newAnswer });\r\n  };\r\n\r\n  const handleCreateQuestion = (e) => {\r\n    if (question.questionName === \"\") {\r\n      setErr(\"Question Name cannot be empty\");\r\n      return;\r\n    } else if (question.problemStatement === \"\") {\r\n      setErr(\"Problem Statement cannot be empty\");\r\n      return;\r\n    } else if (question.marks < 0) {\r\n      setErr(\"Marks has be to positive\");\r\n      return;\r\n    } else if (\r\n      question.answer.reduce((count, ele) => {\r\n        return ele ? count + 1 : count;\r\n      }, 0) < 1\r\n    ) {\r\n      setErr(\"Select atleast one option\");\r\n      return;\r\n    } else if (question.option_A === \"\") {\r\n      setErr(\"Option A cannot be empty\");\r\n      return;\r\n    } else if (question.option_B === \"\") {\r\n      setErr(\"Option B cannot be empty\");\r\n      return;\r\n    } else if (question.option_C === \"\") {\r\n      setErr(\"Option C cannot be empty\");\r\n      return;\r\n    } else if (question.option_D === \"\") {\r\n      setErr(\"Option D cannot be empty\");\r\n      return;\r\n    }\r\n    axios\r\n      .post(\"/question/add\", question, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + props.token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setOpen(false);\r\n        toast(res.data.message, 4000);\r\n        setQuestion(initialQuestion);\r\n        fetchQuestions();\r\n      })\r\n      .catch((err) => {\r\n        setOpen(false);\r\n        console.log(err);\r\n        toast(err.message, 4000);\r\n      })\r\n      .finally(() => {\r\n        setErr(\"\");\r\n      });\r\n  };\r\n  return (\r\n    <Box className={classes1.root}>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={12} md={4} lg={4} xl={4}>\r\n          <Box className={classes1.gridOuter}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Box className={classes.headingLeft}>Exam Details</Box>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Box className={classes.normalParaRight}>\r\n                  Total Marks: {totalMarks}\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n            <Box className={classes.formElement}>\r\n              <TextField\r\n                label=\"Exam Name\"\r\n                name=\"examName\"\r\n                value={exam.examName}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                size=\"small\"\r\n              />\r\n            </Box>\r\n            <Grid container spacing={2} className={classes.formElement}>\r\n              <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <TextField\r\n                  id=\"outlined-select-currency\"\r\n                  select\r\n                  fullWidth\r\n                  label=\"Select subject\"\r\n                  size=\"small\"\r\n                  name=\"subject\"\r\n                  value={exam.subject}\r\n                  onChange={handleChange}\r\n                >\r\n                  {props.userDetails.expertise.split(\" \").map((option) => (\r\n                    <MenuItem key={option} value={option}>\r\n                      {option}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <TextField\r\n                  label=\"User Activity Threshold\"\r\n                  size=\"small\"\r\n                  type=\"number\"\r\n                  name=\"activityThreshold\"\r\n                  fullWidth\r\n                  value={exam.activityThreshold}\r\n                  onChange={handleChange}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container spacing={2} className={classes.formElement}>\r\n              <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  type=\"number\"\r\n                  label=\"Passing Marks\"\r\n                  size=\"small\"\r\n                  name=\"passingMarks\"\r\n                  value={exam.passingMarks}\r\n                  onChange={handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <TextField\r\n                  name=\"duration\"\r\n                  fullWidth\r\n                  value={duration}\r\n                  onChange={handleDuration}\r\n                  type=\"number\"\r\n                  label=\"Duration (minutes)\"\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Box>\r\n              <FormLabel className={classes.formElement}>\r\n                Select Exam Date & Time\r\n              </FormLabel>\r\n              <Box className={classes.formElement}>\r\n                <TextField\r\n                  value={date}\r\n                  type=\"datetime-local\"\r\n                  onChange={handleDate}\r\n                  size=\"small\"\r\n                />\r\n              </Box>\r\n            </Box>\r\n            <Grid container spacing={2} className={classes.formElement}>\r\n              <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <Button variant=\"outlined\" fullWidth onClick={handleClickOpen}>\r\n                  Create Question\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  fullWidth\r\n                  color=\"primary\"\r\n                  onClick={handleSubmit}\r\n                >\r\n                  {isEditing ? \"Update Exam\" : \"Create Exam\"}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={8} lg={8} xl={8}>\r\n          <Box className={classes1.gridOuter}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={8} md={8} lg={9} xl={9}>\r\n                <Box>\r\n                  <TextField\r\n                    id=\"outlined-select-currency\"\r\n                    select\r\n                    fullWidth\r\n                    label=\"Select question\"\r\n                    size=\"small\"\r\n                    value={pickedQuestion}\r\n                    helperText=\"Select subject first to filter the questions\"\r\n                    onChange={handleSelection}\r\n                  >\r\n                    {questionList.length === 0 && (\r\n                      <Box style={{ textAlign: \"center\", padding: \"10px\" }}>\r\n                        No previous question found of the selected subject\r\n                      </Box>\r\n                    )}\r\n                    {questionList.map((option) => (\r\n                      <MenuItem key={option} value={option}>\r\n                        {option.questionName}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </TextField>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={12} sm={4} md={4} lg={3} xl={3}>\r\n                <Box>\r\n                  <Button\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    disabled={!pickedQuestion || pickedQuestion === \"\"}\r\n                    onClick={addQuestion}\r\n                  >\r\n                    Add existing question\r\n                  </Button>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Box className={classes1.questionList}>\r\n              {selectedQuestions.length === 0 ? (\r\n                <Box className={classes.subHeadingCenter}>\r\n                  No selected questions !!\r\n                </Box>\r\n              ) : (\r\n                <QuestionList\r\n                  role={props.userDetails.role}\r\n                  questions={selectedQuestions}\r\n                  deleteQuestion={deleteQuestion}\r\n                  page=\"createExam\"\r\n                ></QuestionList>\r\n              )}\r\n            </Box>\r\n            <Dialog fullWidth open={open} onClose={handleClose}>\r\n              <DialogTitle className={classes.subHeadingCenter}>\r\n                Create Question\r\n              </DialogTitle>\r\n              <DialogContentText className={classes.err}>\r\n                {err}\r\n              </DialogContentText>\r\n              <DialogContent>\r\n                <CreateQuestion\r\n                  difficulty={difficulty}\r\n                  question={question}\r\n                  handleQuestionChange={handleQuestionChange}\r\n                  handleOptionChecked={handleOptionChecked}\r\n                  userDetails={props.userDetails}\r\n                ></CreateQuestion>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button variant=\"outlined\" onClick={handleClose}>\r\n                  Cancel\r\n                </Button>\r\n                <Button variant=\"contained\" onClick={handleCreateQuestion}>\r\n                  Create\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CreateExam;\r\n","/* eslint-disable */\r\nexport const validateEmail = (email) => {\r\n  const re =\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(email);\r\n};\r\nexport const validateMobile = (phone) => {\r\n  const re = /^\\d{10}$/;\r\n  return re.test(phone);\r\n};\r\n\r\nexport const validateExpertise = (subjects) => {\r\n  const re = /^[a-zA-Z0-9\\x20]*$/;\r\n  return re.test(subjects);\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Box, Avatar, Button, TextField, Grid } from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport toast from \"react-simple-toasts\";\r\nimport { editProfileStyle } from \"../styles/CommonStyle\";\r\nimport {\r\n  validateEmail,\r\n  validateExpertise,\r\n  validateMobile,\r\n} from \"../helpers/validations\";\r\n\r\nfunction EditProfile(props) {\r\n  const classes = editProfileStyle();\r\n  const userDetails = props.userDetails;\r\n  const [errMsg, setErrMsg] = useState(\"\");\r\n  const intialState = {\r\n    ...userDetails,\r\n  };\r\n\r\n  const [user, setUser] = useState(intialState);\r\n  const handleChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleUpdate = (e) => {\r\n    if (!validateEmail(user.email)) setErrMsg(\"Email is not valid\");\r\n    else if (!validateMobile(user.contact))\r\n      setErrMsg(\"Contact number should have 10 digits\");\r\n    else if (!validateExpertise(user.expertise))\r\n      setErrMsg(\"Expertise Subjects should be separated by single space\");\r\n    else if (user.password === \"\" || user.name === \"\" || user.address === \"\")\r\n      setErrMsg(\"A required field cannot be empty\");\r\n    else {\r\n      axios\r\n        .post(\"/user/update\", user, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"OEC_token\"),\r\n          },\r\n        })\r\n        .then((res) => {\r\n          toast(res.data.message);\r\n          props.setUserDetails(user);\r\n          setErrMsg(\"\");\r\n          props.setCurrPage(\"examList\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          toast(err.message);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box className={classes.card}>\r\n        <Box>\r\n          <Box className={classes.head1}>Update Profile</Box>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={12} md={12} lg={6} xl={6}>\r\n              <Box>\r\n                <Avatar\r\n                  sx={{\r\n                    bgcolor: \"orange\",\r\n                    width: 150,\r\n                    fontSize: \"48px\",\r\n                    height: 150,\r\n                    margin: \"20px\",\r\n                  }}\r\n                >\r\n                  {user.name[0]}\r\n                </Avatar>\r\n                <Box className={classes.typo1}>Email : {userDetails.email}</Box>\r\n                <Box className={classes.typo1}>Role : {userDetails.role}</Box>\r\n                <Box style={{ color: \"red\" }}>{errMsg}</Box>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={6} xl={6}>\r\n              <Box>\r\n                <Box className={classes.formElement}>\r\n                  <TextField\r\n                    label=\"Name\"\r\n                    fullWidth\r\n                    required\r\n                    size=\"small\"\r\n                    name=\"name\"\r\n                    value={user.name}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Box>\r\n                <Box className={classes.formElement}>\r\n                  <TextField\r\n                    label=\"Contact\"\r\n                    fullWidth\r\n                    required\r\n                    size=\"small\"\r\n                    name=\"contact\"\r\n                    value={user.contact}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Box>\r\n                {userDetails.role === \"Student\" && (\r\n                  <Grid container spacing={2} className={classes.formElement}>\r\n                    <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                      <TextField\r\n                        label=\"Class\"\r\n                        fullWidth\r\n                        type=\"Name\"\r\n                        size=\"small\"\r\n                        name=\"class\"\r\n                        required\r\n                        value={user.class}\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                      <TextField\r\n                        label=\"Roll No\"\r\n                        fullWidth\r\n                        type=\"Name\"\r\n                        required\r\n                        size=\"small\"\r\n                        name=\"rollNo\"\r\n                        value={user.rollNo}\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                )}\r\n                {userDetails.role === \"Faculty\" && (\r\n                  <Box className={classes.formElement}>\r\n                    <TextField\r\n                      label=\"Expertise\"\r\n                      fullWidth\r\n                      required\r\n                      size=\"small\"\r\n                      name=\"expertise\"\r\n                      value={user.expertise}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n              <Box className={classes.formElement}>\r\n                <TextField\r\n                  label=\"Institute\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  required\r\n                  name=\"institute\"\r\n                  value={user.institute}\r\n                  onChange={handleChange}\r\n                />\r\n              </Box>\r\n              <Box className={classes.formElement}>\r\n                <TextField\r\n                  label=\"Address\"\r\n                  fullWidth\r\n                  required\r\n                  size=\"small\"\r\n                  name=\"address\"\r\n                  value={user.address}\r\n                  onChange={handleChange}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid container spacing={2} className={classes.formElement}>\r\n              <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <Button\r\n                  fullWidth\r\n                  onClick={() => props.setCurrPage(\"examList\")}\r\n                  variant=\"outlined\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <Button fullWidth onClick={handleUpdate} variant=\"contained\">\r\n                  Update\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default EditProfile;\r\n","import React, { useState } from \"react\";\r\nimport { Box, Button, Grid, Typography, Divider } from \"@mui/material\";\r\nimport { useTimer } from \"react-timer-hook\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport toast from \"react-simple-toasts\";\r\nimport { examDetailsStyles } from \"../styles/ExamStyle\";\r\n\r\nfunction ExamDetail(props) {\r\n  const expiryTimestamp = new Date(props.selectedExam.startTime);\r\n  const [isDisable, setIsDisable] = useState(true);\r\n  const { seconds, minutes, hours, days } = useTimer({\r\n    expiryTimestamp,\r\n    onExpire: () => setIsDisable(false),\r\n  });\r\n\r\n  const classes = examDetailsStyles();\r\n  const newResponses = {\r\n    examId: props.selectedExam._id,\r\n    examName: props.selectedExam.examName,\r\n    studentId: props.userDetails._id,\r\n    questions: props.selectedExam.questions,\r\n    totalMarks: props.selectedExam.totalMarks,\r\n    passingMarks: props.selectedExam.passingMarks,\r\n    recordedAnswers: [],\r\n  };\r\n  const instructions = [\r\n    \"It is an Online Examination system, fully computerized, user friendly having advanced security features making it fair, transparent and standardized.\",\r\n    \"The examination does not require using any paper, pen, pencil and calculator.\",\r\n    \"Every student will take the examination on a Laptop/Desktop/Smart Phone.\",\r\n    \"Student can enter the exam only after start time of exam is reached.\",\r\n    \"Student have to give exam in FULL SCREEN MODE and in any case if student exit from full screen, all the questions will be disabled and he/she needs to click on FULL SCREEN BUTTON to resume.\",\r\n    \"On computer screen every student will be given objective type Multiple Correct Questions and students needs to select appropriate set of answers by clicking the checkboxes.\",\r\n    \"Student can save their progress by clicking the 'SAVE' button.\",\r\n    \"Student can resume the exam before the end time is reached, if due to some reasons exit from the exam window.\",\r\n    \"There will be NO NEGATIVE MARKING for the wrong answers.\",\r\n    \"Students can use 'ASK DOUBT' section to ask any doubt in between the examination.\",\r\n    \"The system automatically shuts down when the time limit is over OR when unfair activities recorded AND if examinee finishes the exam before time he can quit by pressing the 'End Exam' button. The students don’t click the 'END EXAM' Button until the student want to quit from Examination.\",\r\n    \"Once the examination is over student can see the results by navigating to the 'MY GRADES' section.\",\r\n  ];\r\n\r\n  const getDuration = (startTime, endTime) => {\r\n    let m1 = moment(startTime);\r\n    let m2 = moment(endTime);\r\n    let m3 = m2.diff(m1, \"minutes\");\r\n    return m3 + \" min\";\r\n  };\r\n\r\n  const handleFullScreen = () => {\r\n    document.documentElement.requestFullscreen().catch((e) => console.log(e));\r\n  };\r\n  const handleStart = (e) => {\r\n    axios\r\n      .post(\"/responses/create\", newResponses, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + props.token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.data.result.completed) {\r\n          toast(\"Exam already attempted\");\r\n          toast(\"Redirecting to result page\", 4000);\r\n          props.setCurrPage(\"resultHistory\");\r\n        } else {\r\n          toast(res.data.message);\r\n          props.setResponsesId(res.data.result._id);\r\n          props.setLayout(\"examWindow\");\r\n          handleFullScreen();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast(err.message);\r\n        props.setLayout(\"home\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={12} md={4} lg={3} xl={3}>\r\n          <Box className={classes.box}>\r\n            <Typography className={classes.heading1}>Exam Details</Typography>\r\n            <Divider />\r\n            <Typography className={classes.formElement}>\r\n              <span>Exam Name </span> {props.selectedExam.examName}\r\n            </Typography>\r\n            <Typography className={classes.formElement}>\r\n              <span>Subject </span> {props.selectedExam.subject}\r\n            </Typography>\r\n\r\n            <Typography className={classes.formElement}>\r\n              <span>Date </span>\r\n              {moment(props.selectedExam.startTime).format(\"YYYY-MM-DD\")}\r\n            </Typography>\r\n\r\n            <Typography className={classes.formElement}>\r\n              <span>Time </span>\r\n              {moment(props.selectedExam.startTime).format(\"HH:mm\")}\r\n            </Typography>\r\n\r\n            <Typography className={classes.formElement}>\r\n              <span> Duration </span>\r\n              {getDuration(\r\n                props.selectedExam.startTime,\r\n                props.selectedExam.endTime\r\n              )}\r\n            </Typography>\r\n            <Typography className={classes.formElement}>\r\n              <span> Total Marks </span>\r\n              {props.selectedExam.totalMarks}\r\n            </Typography>\r\n            <Typography className={classes.formElement}>\r\n              <span> Passing Marks </span>\r\n              {props.selectedExam.passingMarks}\r\n            </Typography>\r\n\r\n            <Typography className={classes.formElement}>\r\n              <span>Starts in </span>\r\n              {days}:{hours}:{minutes}:{seconds}\r\n            </Typography>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              fullWidth\r\n              disabled={isDisable}\r\n              onClick={handleStart}\r\n            >\r\n              Enter Exam\r\n            </Button>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={8} lg={9} xl={9}>\r\n          <Box className={classes.box}>\r\n            <Typography className={classes.heading2}>Instructions</Typography>\r\n            <Divider />\r\n            <Box className={classes.instructionsBox}>\r\n              {instructions.map((ele, ind) => (\r\n                <Typography className={classes.typo}>\r\n                  <span>{ind + 1 + \". \"}</span>\r\n                  {ele}\r\n                </Typography>\r\n              ))}\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ExamDetail;\r\n","import { Box, Button, Grid, Typography } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport toast from \"react-simple-toasts\";\r\nimport { examListStyles } from \"../styles/ExamStyle\";\r\n\r\nfunction ExamList(props) {\r\n  const classes = examListStyles();\r\n  const [examList, setExamList] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/exam/get\", {\r\n        headers: {\r\n          Authorization: \"Bearer \" + props.token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.data.message === \"Success\") {\r\n          setExamList(res.data.result);\r\n        } else {\r\n          toast(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        props.setLayout(\"home\");\r\n      });\r\n  }, []);\r\n\r\n  const handleEnter = (curExam) => {\r\n    props.setSelectedExam(curExam);\r\n    props.setCurrPage(\"examDetails\");\r\n  };\r\n\r\n  const getDuration = (startTime, endTime) => {\r\n    let m1 = moment(startTime);\r\n    let m2 = moment(endTime);\r\n    let m3 = m2.diff(m1, \"minutes\");\r\n    return m3 + \" minutes\";\r\n  };\r\n  return (\r\n    <Box className={classes.root}>\r\n      {examList.length ? (\r\n        <Grid container spacing={2}>\r\n          {examList.map((ele) => (\r\n            <Grid item xs={12} sm={6} md={6} lg={4} xl={4}>\r\n              <Box>\r\n                <Box className={classes.box}>\r\n                  <Typography className={classes.heading1}>\r\n                    Exam Name: {ele.examName}\r\n                  </Typography>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={6}>\r\n                      <Typography className={classes.typo}>\r\n                        <span>Subject: </span> {ele.subject}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Typography className={classes.typo}>\r\n                        <span>Date: </span>\r\n                        {moment(ele.startTime).format(\"YYYY-MM-DD\")}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={6}>\r\n                      <Typography className={classes.typo}>\r\n                        <span>Time: </span>\r\n                        {moment(ele.startTime).format(\"HH:mm\")}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Typography className={classes.typo}>\r\n                        <span>Duration: </span>{\" \"}\r\n                        {getDuration(ele.startTime, ele.endTime)}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => handleEnter(ele)}\r\n                  >\r\n                    Enter\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      ) : (\r\n        <Box className={classes.noexam}>No Exams Found</Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ExamList;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Stack,\r\n  IconButton,\r\n  FormControlLabel,\r\n  Switch,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport toast from \"react-simple-toasts\";\r\nimport { examListStyles } from \"../styles/ExamStyle\";\r\n\r\nfunction ExamList(props) {\r\n  const classes = examListStyles();\r\n  const [loading, setLoading] = useState(true);\r\n  const [examList, setExamList] = useState(null);\r\n  const [displayExam, setDisplayExam] = useState([]);\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  const handleChange = () => {\r\n    setChecked((prev) => !prev);\r\n  };\r\n\r\n  const fetchExams = () => {\r\n    axios\r\n      .get(\"/exam/getByUser\", {\r\n        headers: {\r\n          Authorization: \"Bearer \" + props.token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.data.message === \"Success\") {\r\n          setExamList(res.data.result);\r\n          setDisplayExam(res.data.result.remainingExams);\r\n        } else {\r\n          toast(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        props.setLayout(\"home\");\r\n      })\r\n      .finally(() => setLoading(false));\r\n  };\r\n  useEffect(() => {\r\n    fetchExams();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      if (checked) {\r\n        setDisplayExam(examList.expiredExams);\r\n      } else {\r\n        setDisplayExam(examList.remainingExams);\r\n      }\r\n    }\r\n  }, [checked]);\r\n\r\n  const handleDelete = (examId) => {\r\n    axios\r\n      .delete(\"/exam/delete/\" + examId + \"/\" + props.userDetails._id, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + props.token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        toast(res.data.message);\r\n        fetchExams();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast(err.message);\r\n        props.setLayout(\"home\");\r\n      });\r\n  };\r\n  const handleEdit = (examId) => {\r\n    axios\r\n      .get(\"/exam/fullDetails/\" + examId + \"/\" + props.userDetails._id, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + props.token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        toast(res.data.message);\r\n        props.setEditExamDetails(res.data.result);\r\n        props.setCurrPage(\"createExam\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast(err.message);\r\n        props.setLayout(\"home\");\r\n      });\r\n  };\r\n  const handleEnter = (curExam) => {\r\n    props.setSelectedExam(curExam);\r\n    props.setCurrPage(\"examDetails\");\r\n  };\r\n\r\n  const getDuration = (startTime, endTime) => {\r\n    let m1 = moment(startTime);\r\n    let m2 = moment(endTime);\r\n    let m3 = m2.diff(m1, \"minutes\");\r\n    return m3 + \" minutes\";\r\n  };\r\n\r\n  const getResults = (examId) => {\r\n    axios\r\n      .get(\"/responses/getByExamId/\" + examId, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"OEC_token\"),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.data.message === \"Success\") {\r\n          props.setResponseHistory(res.data.result);\r\n          props.setCurrPage(\"resultHistory\");\r\n          window.scrollTo({ top: 0 });\r\n        } else {\r\n          toast(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        props.setLayout(\"home\");\r\n      });\r\n  };\r\n\r\n  const Loader = () => {\r\n    return (\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          height: \"60vh\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <CircularProgress size=\"100px\" />\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const noExam = () => {\r\n    return (\r\n      <Box className={classes.noexam}>\r\n        <Box>\r\n          <Box>No {checked ? \"expired \" : \"live \"}exam found</Box>\r\n          <Button\r\n            style={{ marginTop: \"20px\" }}\r\n            variant=\"outlined\"\r\n            onClick={() => props.setCurrPage(\"createExam\")}\r\n          >\r\n            Create Exam\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const content = () => {\r\n    if (loading) {\r\n      Loader();\r\n    } else {\r\n      return (\r\n        <>\r\n          <Box>\r\n            <FormControlLabel\r\n              control={<Switch checked={checked} onChange={handleChange} />}\r\n              label=\"Expired Exam\"\r\n            />\r\n          </Box>\r\n          {displayExam.length === 0 && noExam()}\r\n          <Grid container spacing={2}>\r\n            {displayExam.map((ele, ind) => (\r\n              <Grid item xs={12} sm={12} md={6} lg={4} xl={4}>\r\n                <Box className={classes.box}>\r\n                  <Grid container spacing={2} className={classes.typo}>\r\n                    <Grid item xs={9}>\r\n                      <Typography className={classes.heading1}>\r\n                        <span>Exam Name: </span> {ele.examName}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      <Stack direction=\"row\" spacing={1}>\r\n                        <IconButton\r\n                          size=\"small\"\r\n                          aria-label=\"edit\"\r\n                          onClick={() => handleEdit(ele._id)}\r\n                          disabled={checked}\r\n                        >\r\n                          <EditIcon />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          size=\"small\"\r\n                          aria-label=\"delete\"\r\n                          onClick={() => handleDelete(ele._id)}\r\n                          disabled={checked}\r\n                        >\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                      </Stack>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid container spacing={2} className={classes.typo}>\r\n                    <Grid item xs={6}>\r\n                      <Typography>\r\n                        <span>Subject: </span>\r\n                        {ele.subject}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Typography>\r\n                        <span>Duration: </span>\r\n                        {getDuration(ele.startTime, ele.endTime)}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid container spacing={2} className={classes.typo}>\r\n                    <Grid item xs={6}>\r\n                      <Typography>\r\n                        <span>Date: </span>\r\n                        {moment(ele.startTime).format(\"YYYY-MM-DD\")}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Typography>\r\n                        <span>Time: </span>\r\n                        {moment(ele.startTime).format(\"HH:mm\")}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  {checked ? (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={() => getResults(ele._id)}\r\n                    >\r\n                      Results\r\n                    </Button>\r\n                  ) : (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={() => handleEnter(ele)}\r\n                    >\r\n                      Enter\r\n                    </Button>\r\n                  )}\r\n                </Box>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n  return <Box className={classes.root}>{content()}</Box>;\r\n}\r\n\r\nexport default ExamList;\r\n","import { Drawer, Typography, Box, Avatar, Button, Grid } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport toast from \"react-simple-toasts\";\r\nimport { navbarStyle } from \"../styles/CommonStyle\";\r\nfunction Navbar(props) {\r\n  const classes = navbarStyle();\r\n  const [open, setOpen] = useState(false);\r\n  const userDetails = props.userDetails;\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"OEC_token\");\r\n    toast(\"Logged out successfully\");\r\n    props.setLayout(\"home\");\r\n  };\r\n  const toggleDrawer = (open) => (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n    setOpen(open);\r\n  };\r\n\r\n  const handleBox = () => {\r\n    if (userDetails.role === \"Student\") {\r\n      props.setCurrPage(\"resultHistory\");\r\n    } else {\r\n      props.setCurrPage(\"createExam\");\r\n    }\r\n  };\r\n\r\n  const gotoUpdate = () => {\r\n    setOpen(false);\r\n    props.setCurrPage(\"editProfile\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box className={classes.root}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={12} md={9} lg={9} xl={9}>\r\n            <Box className={classes.navHead}>Online Exam Conductor</Box>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={1} lg={1} xl={1}>\r\n            <Box\r\n              className={classes.navItem}\r\n              onClick={() => props.setCurrPage(\"examList\")}\r\n            >\r\n              Exam List\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={1} lg={1} xl={1}>\r\n            <Box className={classes.navItem} onClick={handleBox}>\r\n              {userDetails.role === \"Student\" ? \"My Grades\" : \"Create Exam\"}\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={1} lg={1} xl={1}>\r\n            <Box className={classes.navItem} onClick={toggleDrawer(true)}>\r\n              Profile\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      <Drawer anchor=\"right\" open={open} onClose={toggleDrawer(false)}>\r\n        <Box className={classes.headBox}>\r\n          <Typography variant=\"h4\" className={classes.head}>\r\n            My Profile\r\n          </Typography>\r\n          <Avatar\r\n            sx={{\r\n              bgcolor: \"orange\",\r\n              width: 150,\r\n              height: 150,\r\n              margin: \"20px\",\r\n              fontSize: \"42px\",\r\n            }}\r\n          >\r\n            {userDetails.name[0]}\r\n          </Avatar>\r\n          <Box className={classes.outerBox}>\r\n            <Box className={classes.typo}>\r\n              <span>Name: </span> {userDetails.name}\r\n            </Box>\r\n            <Box className={classes.typo}>\r\n              <span>Email: </span> {userDetails.email}\r\n            </Box>\r\n            <Box className={classes.typo}>\r\n              <span>Role: </span> {userDetails.role}\r\n            </Box>\r\n            <Box className={classes.typo}>\r\n              <span>Address: </span> {userDetails.address}\r\n            </Box>\r\n            <Box className={classes.typo}>\r\n              <span>Institute: </span> {userDetails.institute}\r\n            </Box>\r\n            <Box className={classes.typo}>\r\n              <span>Contact: </span> {userDetails.contact}\r\n            </Box>\r\n            {userDetails.role === \"Student\" ? (\r\n              <>\r\n                <Box className={classes.typo}>\r\n                  <span>Class: </span> {userDetails.class}\r\n                </Box>\r\n                <Box className={classes.typo}>\r\n                  <span>Rollno: </span> {userDetails.rollNo}\r\n                </Box>\r\n              </>\r\n            ) : (\r\n              <Box className={classes.typo}>\r\n                <span>Expertise: </span> {userDetails.expertise}\r\n              </Box>\r\n            )}\r\n          </Box>\r\n          <Box className={classes.btnGrp}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  onClick={gotoUpdate}\r\n                >\r\n                  Update\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  fullWidth\r\n                  color=\"primary\"\r\n                  onClick={handleLogout}\r\n                >\r\n                  Logout\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import { makeStyles } from \"@mui/styles\";\r\nexport const studentResultStyles = makeStyles({\r\n  root: {\r\n    overflow: \"auto\",\r\n    padding: \"20px\",\r\n    height: \"100vh\",\r\n    backgroundColor: \"#f5f0e1\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  box: {\r\n    backgroundColor: \"white\",\r\n    boxShadow: \"0 4px 8px 0 rgb(0 0 0 / 20%)\",\r\n    padding: \"10px\",\r\n  },\r\n  table: {\r\n    height: \"500px\",\r\n    overflow: \"auto\",\r\n  },\r\n  typo: {\r\n    padding: \"10px\",\r\n    textAlign: \"left\",\r\n    fontSize: \"18px\",\r\n    \"& span\": {\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n});\r\n\r\nexport const responseListStyles = makeStyles({\r\n  root: {\r\n    overflow: \"auto\",\r\n    padding: \"20px\",\r\n    height: \"100vh\",\r\n    backgroundColor: \"#f5f0e1\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  table: {\r\n    height: \"500px\",\r\n    width: \"950px\",\r\n    overflow: \"auto\",\r\n  },\r\n});\r\n\r\nexport const resultHistoryStyles = makeStyles({\r\n  root: {\r\n    padding: \"20px\",\r\n    backgroundColor: \"#f5f0e1\",\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  box: {\r\n    padding: \"20px\",\r\n    backgroundColor: \"white\",\r\n    boxShadow: \"0 4px 8px 0 rgb(0 0 0 / 20%)\",\r\n  },\r\n  head: {\r\n    fontSize: \"26px !important\",\r\n    fontWeight: \"bold !important\",\r\n    marginBottom: \"10px !important\",\r\n  },\r\n  flexBox: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  formElement: {\r\n    margin: \"2px !important\",\r\n    padding: \"5px !important\",\r\n\r\n    \"& span\": {\r\n      fontWeight: \"bold !important\",\r\n    },\r\n  },\r\n  flexBox2: {\r\n    height: \"400px\",\r\n    overflow: \"auto\",\r\n    padding: \"10px\",\r\n  },\r\n});\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  Button,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Box,\r\n} from \"@mui/material\";\r\n\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport toast from \"react-simple-toasts\";\r\nimport { responseListStyles } from \"../styles/ResponseStyle\";\r\n\r\nfunction ResponsesList(props) {\r\n  const classes = responseListStyles();\r\n  const [responsesList, setResponsesList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/responses/getByUser\", {\r\n        headers: {\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"OEC_token\"),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.data.message === \"Success\") {\r\n          setResponsesList(res.data.result);\r\n        } else {\r\n          toast(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        props.setLayout(\"home\");\r\n      });\r\n    return () => {\r\n      console.log(\"unmounts\");\r\n    };\r\n  }, []);\r\n\r\n  const handleView = (id) => {\r\n    axios\r\n      .get(\"/responses/details/\" + id, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"OEC_token\"),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.data.message === \"Success\") {\r\n          props.setCurResponses(res.data.result);\r\n        } else {\r\n          toast(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        props.setLayout(\"home\");\r\n      })\r\n      .finally(() => props.setCurrPage(\"singleResponses\"));\r\n  };\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box className={classes.table}>\r\n        {responsesList.length ? (\r\n          <TableContainer sx={{ maxHeight: 500 }} component={Paper}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell\r\n                    align=\"center\"\r\n                    width=\"10%\"\r\n                    sx={{ fontWeight: \"bold\" }}\r\n                  >\r\n                    S.No\r\n                  </TableCell>\r\n                  <TableCell width=\"30%\" sx={{ fontWeight: \"bold\" }}>\r\n                    Exam Name\r\n                  </TableCell>\r\n                  <TableCell\r\n                    align=\"center\"\r\n                    width=\"15%\"\r\n                    sx={{ fontWeight: \"bold\" }}\r\n                  >\r\n                    Date\r\n                  </TableCell>\r\n                  <TableCell\r\n                    align=\"center\"\r\n                    width=\"15%\"\r\n                    sx={{ fontWeight: \"bold\" }}\r\n                  >\r\n                    Finish Time\r\n                  </TableCell>\r\n                  <TableCell\r\n                    align=\"center\"\r\n                    width=\"15%\"\r\n                    sx={{ fontWeight: \"bold\" }}\r\n                  >\r\n                    Result\r\n                  </TableCell>\r\n                  <TableCell\r\n                    align=\"center\"\r\n                    width=\"15%\"\r\n                    sx={{ fontWeight: \"bold\" }}\r\n                  >\r\n                    More Details\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {responsesList.map((row, ind) => (\r\n                  <TableRow\r\n                    key={row.name}\r\n                    sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                  >\r\n                    <TableCell\r\n                      align=\"center\"\r\n                      width=\"10%\"\r\n                      component=\"th\"\r\n                      scope=\"row\"\r\n                    >\r\n                      {ind + 1}\r\n                    </TableCell>\r\n\r\n                    <TableCell width=\"30%\">{row.examName}</TableCell>\r\n                    <TableCell align=\"center\" width=\"15%\">\r\n                      {moment(row.finishTime).format(\"YYYY-MM-DD\")}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\" width=\"15%\">\r\n                      {moment(row.finishTime).format(\"HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\" width=\"15%\">\r\n                      {row.passed ? \"Passed\" : \"Failed\"}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\" width=\"15%\">\r\n                      <Button onClick={() => handleView(row._id)}>View</Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        ) : (\r\n          <Box>No Responses</Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ResponsesList;\r\n","import React from \"react\";\r\nimport { VictoryPie } from \"victory-pie\";\r\nimport moment from \"moment\";\r\nimport { Box, Button, Grid, Typography } from \"@mui/material\";\r\nimport QuestionList from \"./QuestionList\";\r\nimport { resultHistoryStyles } from \"../styles/ResponseStyle\";\r\n\r\nfunction ResultHistory(props) {\r\n  const classes = resultHistoryStyles();\r\n  const selectedResponses = props.curResponses;\r\n  const myData = [\r\n    {\r\n      x: \"Correct\",\r\n      y: selectedResponses.scoresObtained,\r\n    },\r\n    {\r\n      x: \"Wrong\",\r\n      y: selectedResponses.totalMarks - selectedResponses.scoresObtained,\r\n    },\r\n  ];\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={12} md={3} lg={3} xl={3}>\r\n          <Box className={classes.box}>\r\n            {selectedResponses ? (\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={6} sm={6} md={12} lg={12} xl={12}>\r\n                  <Box>\r\n                    <Typography className={classes.head}>Results</Typography>\r\n                    <Typography className={classes.formElement}>\r\n                      <span>Date: </span>\r\n                      {moment(selectedResponses.finishTime).format(\r\n                        \"YYYY-MM-DD\"\r\n                      )}\r\n                    </Typography>\r\n                    <Typography className={classes.formElement}>\r\n                      <span>Finish Time: </span>\r\n                      {moment(selectedResponses.finishTime).format(\"HH:mm:ss\")}\r\n                    </Typography>\r\n                    <Typography className={classes.formElement}>\r\n                      <span>Total Marks: </span> {selectedResponses.totalMarks}\r\n                    </Typography>\r\n                    <Typography className={classes.formElement}>\r\n                      <span>Passing Obtained: </span>{\" \"}\r\n                      {selectedResponses.passingMarks}\r\n                    </Typography>\r\n                    <Typography className={classes.formElement}>\r\n                      <span>Marks Obtained: </span>{\" \"}\r\n                      {selectedResponses.scoresObtained}\r\n                    </Typography>\r\n                    <Typography className={classes.formElement}>\r\n                      <span>Status: </span>{\" \"}\r\n                      {selectedResponses.passed ? \"Passed\" : \"Failed\"}\r\n                    </Typography>\r\n                  </Box>\r\n                </Grid>\r\n                <Grid item xs={6} sm={6} md={12} lg={12} xl={12}>\r\n                  <Box>\r\n                    <VictoryPie\r\n                      height={300}\r\n                      padAngle={({ datum }) => datum.y}\r\n                      colorScale={[\"green\", \"red\"]}\r\n                      data={myData}\r\n                    />\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            ) : (\r\n              <Box>Select Exam</Box>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={9} lg={9} xl={9}>\r\n          <Box className={classes.box}>\r\n            <Box className={classes.flexBox}>\r\n              <Typography className={classes.head}>\r\n                Exam Name: {selectedResponses.examName}\r\n              </Typography>\r\n              <Button onClick={() => props.setCurrPage(\"resultHistory\")}>\r\n                Back\r\n              </Button>\r\n            </Box>\r\n\r\n            <Box className={classes.flexBox2}>\r\n              {selectedResponses && selectedResponses.questions.length ? (\r\n                <QuestionList\r\n                  questions={selectedResponses.questions}\r\n                  responses={selectedResponses}\r\n                ></QuestionList>\r\n              ) : (\r\n                <Box>No questions found</Box>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ResultHistory;\r\n","import React from \"react\";\r\nimport {\r\n  Table,\r\n  Typography,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Box,\r\n  Grid,\r\n} from \"@mui/material\";\r\n\r\nimport moment from \"moment\";\r\nimport { studentResultStyles } from \"../styles/ResponseStyle\";\r\nimport { commonStyles } from \"../styles/CommonStyle\";\r\n\r\nfunction StudentsResultList(props) {\r\n  const classes = studentResultStyles();\r\n  const classes1 = commonStyles();\r\n  return (\r\n    <Box className={classes.root}>\r\n      {props.responseHistory ? (\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={3}>\r\n            <Box className={classes.box}>\r\n              <Typography className={classes.typo}>\r\n                <span>Exam Name:</span> {props.responseHistory[0].examName}\r\n              </Typography>\r\n\r\n              <Typography className={classes.typo}>\r\n                <span>Date:</span>{\" \"}\r\n                {moment(props.responseHistory[0].finishTime).format(\r\n                  \"YYYY-MM-DD\"\r\n                )}\r\n              </Typography>\r\n              <Typography className={classes.typo}>\r\n                <span>Passing Marks:</span>{\" \"}\r\n                {props.responseHistory[0].passingMarks}\r\n              </Typography>\r\n              <Typography className={classes.typo}>\r\n                <span>Total Marks:</span> {props.responseHistory[0].totalMarks}\r\n              </Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={9}>\r\n            <Box className={classes.table}>\r\n              <TableContainer sx={{ maxHeight: 500 }} component={Paper}>\r\n                <Table stickyHeader>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        width=\"10%\"\r\n                        sx={{ fontWeight: \"bold\" }}\r\n                      >\r\n                        Rank\r\n                      </TableCell>\r\n                      <TableCell width=\"30%\" sx={{ fontWeight: \"bold\" }}>\r\n                        Student Name\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        width=\"15%\"\r\n                        sx={{ fontWeight: \"bold\" }}\r\n                      >\r\n                        Scores Obtained\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        width=\"15%\"\r\n                        sx={{ fontWeight: \"bold\" }}\r\n                      >\r\n                        Finish Time\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        width=\"15%\"\r\n                        sx={{ fontWeight: \"bold\" }}\r\n                      >\r\n                        Result\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {props.responseHistory.length ? (\r\n                      props.responseHistory.map((row, ind) => (\r\n                        <TableRow\r\n                          key={row.name}\r\n                          sx={{\r\n                            \"&:last-child td, &:last-child th\": { border: 0 },\r\n                          }}\r\n                        >\r\n                          <TableCell\r\n                            align=\"center\"\r\n                            width=\"10%\"\r\n                            component=\"th\"\r\n                            scope=\"row\"\r\n                          >\r\n                            {ind + 1}\r\n                          </TableCell>\r\n\r\n                          <TableCell width=\"30%\">\r\n                            {row.studentId.name}\r\n                          </TableCell>\r\n                          <TableCell align=\"center\" width=\"15%\">\r\n                            {row.scoresObtained}\r\n                          </TableCell>\r\n                          <TableCell align=\"center\" width=\"15%\">\r\n                            {moment(row.finishTime).format(\"HH:mm:ss\")}\r\n                          </TableCell>\r\n                          <TableCell align=\"center\" width=\"15%\">\r\n                            {row.passed ? \"Passed\" : \"Failed\"}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))\r\n                    ) : (\r\n                      <Box>No responses</Box>\r\n                    )}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        <Box className={classes1.loading}>Loading</Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default StudentsResultList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Box, Button, Grid, Typography, TextField } from \"@mui/material\";\r\nimport io from \"socket.io-client\";\r\nimport { commonStyles, chatWindowStyles } from \"../styles/CommonStyle\";\r\n\r\nfunction ChatWindow(props) {\r\n  const classes1 = commonStyles();\r\n  const classes2 = chatWindowStyles();\r\n  const [input, setInput] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [socket, setSocket] = useState();\r\n  const [user, setUser] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let socket = io();\r\n    const user = props.userDetails;\r\n    setUser(user);\r\n    socket.emit(\"join-room\", props.examId, user);\r\n    socket.on(\"createMessage\", (userName, msg) => {\r\n      setMessages((oldMessages) => [...oldMessages, { userName, msg }]);\r\n    });\r\n\r\n    setSocket(socket);\r\n\r\n    return () => socket.close();\r\n  }, [props.userDetails, props.examId]);\r\n\r\n  const handleSend = () => {\r\n    socket.emit(\"message\", user, input);\r\n    setInput(\"\");\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setInput(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Box className={classes2.root}>\r\n      <Typography className={classes1.subHeadingCenter}>\r\n        Query Section\r\n      </Typography>\r\n      <Grid container spacing={2} className={classes1.formElement}>\r\n        <Grid item xs={9}>\r\n          <TextField\r\n            label=\"Ask Question\"\r\n            name=\"message\"\r\n            fullWidth\r\n            value={input}\r\n            onChange={handleChange}\r\n            size=\"small\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Button fullWidth variant=\"contained\" onClick={handleSend}>\r\n            Send\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Box className={classes2.chatBox}>\r\n        {messages.map((ele) => (\r\n          <Box className={classes2.msgBox}>\r\n            <Typography className={classes2.typo1}>{ele.userName}</Typography>\r\n            <Typography className={classes2.typo2}>{ele.msg}</Typography>\r\n          </Box>\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ChatWindow;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useTimer } from \"react-timer-hook\";\r\nimport axios from \"axios\";\r\nimport { examWindowTeacherStyles } from \"../styles/ExamStyle\";\r\nimport ChatWindow from \"./ChatWindow\";\r\nimport QuestionList from \"./QuestionList\";\r\nimport toast from \"react-simple-toasts\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n  Divider,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\n\r\nfunction ExamWindowTeacher(props) {\r\n  const classes = examWindowTeacherStyles();\r\n  const [loading, setLoading] = useState(true);\r\n  const [startExam, setStartExam] = useState(false);\r\n  const selectedExam = props.selectedExam;\r\n  const [examDetails, setExamDetails] = useState(null);\r\n  const expiryTimestamp1 = new Date(selectedExam.startTime);\r\n  const expiryTimestamp2 = new Date(selectedExam.endTime);\r\n  const { seconds, minutes, hours, days } = useTimer({\r\n    expiryTimestamp: expiryTimestamp1,\r\n    onExpire: () => setStartExam(true),\r\n  });\r\n\r\n  const endTimer = useTimer({\r\n    expiryTimestamp: expiryTimestamp2,\r\n    onExpire: () => handleExamEnd(),\r\n  });\r\n  const getDuration = (startTime, endTime) => {\r\n    let m1 = moment(startTime);\r\n    let m2 = moment(endTime);\r\n    let m3 = m2.diff(m1, \"minutes\");\r\n    return m3 + \" min\";\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        \"/exam/fullDetails/\" +\r\n          props.selectedExam._id +\r\n          \"/\" +\r\n          props.userDetails._id,\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + props.token,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        if (res.data.message === \"Success\") {\r\n          setExamDetails(res.data.result);\r\n        } else {\r\n          toast(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        props.setLayout(\"home\");\r\n      })\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  const getResults = (examId) => {\r\n    axios\r\n      .get(\"/responses/getByExamId/\" + examId, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"OEC_token\"),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.data.message === \"Success\") {\r\n          props.setResponseHistory(res.data.result);\r\n\r\n          props.setCurrPage(\"resultHistory\");\r\n          window.scrollTo({ top: 0 });\r\n        } else {\r\n          toast(res.data.message);\r\n          props.setCurrPage(\"examList\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        props.setLayout(\"home\");\r\n      });\r\n  };\r\n  const handleExamEnd = () => {\r\n    toast(\"Exam Ended\", 4000);\r\n    toast(\"Fetching result list\", 4000);\r\n    getResults(props.selectedExam._id);\r\n  };\r\n  const Loader = () => {\r\n    return (\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          height: \"60vh\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <CircularProgress size=\"100px\" />\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const content = () => {\r\n    if (loading) {\r\n      Loader();\r\n    } else {\r\n      return (\r\n        <Box className={classes.root}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={12} md={4} lg={4} xl={4}>\r\n              <Box className={classes.box}>\r\n                <Box>\r\n                  <Box>\r\n                    <Typography className={classes.heading2}>\r\n                      {\"Exam Name | \" + props.selectedExam.examName}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography className={classes.formElement}>\r\n                      {\"Total Marks  \" + props.selectedExam.totalMarks}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Divider />\r\n                  <Typography className={classes.formElement}>\r\n                    <span>Subject </span> {props.selectedExam.subject}\r\n                  </Typography>\r\n                  <Typography className={classes.formElement}>\r\n                    <span> Duration </span>\r\n                    {getDuration(\r\n                      props.selectedExam.startTime,\r\n                      props.selectedExam.endTime\r\n                    )}\r\n                  </Typography>\r\n                  {!startExam ? (\r\n                    <Typography className={classes.formElement}>\r\n                      <span>Starts in </span> {days}:{hours}:{minutes}:{seconds}\r\n                    </Typography>\r\n                  ) : (\r\n                    <Typography className={classes.formElement}>\r\n                      <span>Ends in </span>\r\n                      {endTimer.days}:{endTimer.hours}:{endTimer.minutes}:\r\n                      {endTimer.seconds}\r\n                    </Typography>\r\n                  )}\r\n                </Box>\r\n              </Box>\r\n              <Box className={classes.chatBox}>\r\n                {startExam ? (\r\n                  <ChatWindow\r\n                    userDetails={props.userDetails.name}\r\n                    examId={selectedExam._id}\r\n                  ></ChatWindow>\r\n                ) : (\r\n                  <Box className={classes.heading1}>Exam not started yet</Box>\r\n                )}\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={8} lg={8} xl={8}>\r\n              <Box className={classes.outerBox}>\r\n                <Box className={classes.questionList}>\r\n                  <QuestionList\r\n                    role={props.userDetails.role}\r\n                    questions={examDetails.questions}\r\n                    deleteQuestion={() => console.log(\"Deleted\")}\r\n                  ></QuestionList>\r\n                </Box>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      );\r\n    }\r\n  };\r\n  return <Box>{content()}</Box>;\r\n}\r\n\r\nexport default ExamWindowTeacher;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport CreateExam from \"./CreateExam\";\r\nimport CreateQuestion from \"./CreateQuestion\";\r\nimport EditProfile from \"./EditProfile\";\r\nimport ExamDetail from \"./ExamDetail\";\r\nimport ExamList from \"./ExamList\";\r\nimport ExamListTeacher from \"./ExamListTeacher\";\r\nimport Navbar from \"./Navbar\";\r\nimport ResponsesList from \"./ResponsesList\";\r\nimport ResultHistory from \"./ResultHistory\";\r\nimport toast from \"react-simple-toasts\";\r\nimport StudentsResultList from \"./StudentsResultList\";\r\nimport ExamWindowTeacher from \"./ExamWindowTeacher\";\r\nimport { commonStyles } from \"../styles/CommonStyle\";\r\n\r\nfunction ContentArea(props) {\r\n  const classes = commonStyles();\r\n  const [userDetails, setUserDetails] = useState(null);\r\n  const [currPage, setCurrPage] = useState(\"examList\");\r\n  const [curResponses, setCurResponses] = useState(null);\r\n  const [responseHistory, setResponseHistory] = useState(null);\r\n  const [editExamDetails, setEditExamDetails] = useState(null);\r\n  const token = localStorage.getItem(\"OEC_token\");\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/user/details\", {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.data.message === \"Success\") {\r\n          setUserDetails(res.data.result);\r\n          props.setUsername(res.data.result.name);\r\n        } else {\r\n          toast(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        toast(err.message);\r\n        console.log(err);\r\n        props.setLayout(\"home\");\r\n      });\r\n  }, []);\r\n  const renderPage = () => {\r\n    if (currPage === \"createQuestion\") {\r\n      return (\r\n        <CreateQuestion\r\n          setLayout={props.setLayout}\r\n          userDetails={userDetails}\r\n          token={token}\r\n        ></CreateQuestion>\r\n      );\r\n    } else if (currPage === \"createExam\") {\r\n      return (\r\n        <CreateExam\r\n          setLayout={props.setLayout}\r\n          userDetails={userDetails}\r\n          token={token}\r\n          editExamDetails={editExamDetails}\r\n          setCurrPage={setCurrPage}\r\n          setEditExamDetails={setEditExamDetails}\r\n        ></CreateExam>\r\n      );\r\n    } else if (currPage === \"editProfile\") {\r\n      return (\r\n        <EditProfile\r\n          setLayout={props.setLayout}\r\n          userDetails={userDetails}\r\n          setUserDetails={setUserDetails}\r\n          token={token}\r\n          currPage={currPage}\r\n          setCurrPage={setCurrPage}\r\n        ></EditProfile>\r\n      );\r\n    } else if (currPage === \"examList\") {\r\n      return userDetails.role === \"Student\" ? (\r\n        <ExamList\r\n          setLayout={props.setLayout}\r\n          userDetails={userDetails}\r\n          token={token}\r\n          selectedExam={props.selectedExam}\r\n          setSelectedExam={props.setSelectedExam}\r\n          setCurrPage={setCurrPage}\r\n        ></ExamList>\r\n      ) : (\r\n        <ExamListTeacher\r\n          setLayout={props.setLayout}\r\n          userDetails={userDetails}\r\n          token={token}\r\n          selectedExam={props.selectedExam}\r\n          setSelectedExam={props.setSelectedExam}\r\n          setCurrPage={setCurrPage}\r\n          responseHistory={responseHistory}\r\n          setResponseHistory={setResponseHistory}\r\n          editExamDetails={editExamDetails}\r\n          setEditExamDetails={setEditExamDetails}\r\n        ></ExamListTeacher>\r\n      );\r\n    } else if (currPage === \"examDetails\") {\r\n      return userDetails.role === \"Student\" ? (\r\n        <ExamDetail\r\n          setLayout={props.setLayout}\r\n          userDetails={userDetails}\r\n          token={token}\r\n          responsesId={props.responsesId}\r\n          setResponsesId={props.setResponsesId}\r\n          selectedExam={props.selectedExam}\r\n          setSelectedExam={props.setSelectedExam}\r\n          setCurrPage={setCurrPage}\r\n        ></ExamDetail>\r\n      ) : (\r\n        <ExamWindowTeacher\r\n          setLayout={props.setLayout}\r\n          userDetails={userDetails}\r\n          token={token}\r\n          responsesId={props.responsesId}\r\n          setResponsesId={props.setResponsesId}\r\n          selectedExam={props.selectedExam}\r\n          setSelectedExam={props.setSelectedExam}\r\n          setCurrPage={setCurrPage}\r\n          responseHistory={responseHistory}\r\n          setResponseHistory={setResponseHistory}\r\n        ></ExamWindowTeacher>\r\n      );\r\n    } else if (currPage === \"resultHistory\") {\r\n      return userDetails.role === \"Student\" ? (\r\n        <ResponsesList\r\n          setLayout={props.setLayout}\r\n          userDetails={userDetails}\r\n          token={token}\r\n          selectedExam={props.selectedExam}\r\n          setSelectedExam={props.setSelectedExam}\r\n          setCurrPage={setCurrPage}\r\n          curResponses={curResponses}\r\n          setCurResponses={setCurResponses}\r\n        ></ResponsesList>\r\n      ) : (\r\n        <StudentsResultList\r\n          setLayout={props.setLayout}\r\n          userDetails={userDetails}\r\n          token={token}\r\n          selectedExam={props.selectedExam}\r\n          setSelectedExam={props.setSelectedExam}\r\n          setCurrPage={setCurrPage}\r\n          responseHistory={responseHistory}\r\n          setResponseHistory={setResponseHistory}\r\n        ></StudentsResultList>\r\n      );\r\n    } else if (currPage === \"singleResponses\") {\r\n      return (\r\n        <ResultHistory\r\n          setLayout={props.setLayout}\r\n          userDetails={userDetails}\r\n          token={token}\r\n          selectedExam={props.selectedExam}\r\n          setSelectedExam={props.setSelectedExam}\r\n          setCurrPage={setCurrPage}\r\n          curResponses={curResponses}\r\n          setCurResponses={setCurResponses}\r\n        ></ResultHistory>\r\n      );\r\n    } else return <></>;\r\n  };\r\n\r\n  const content = () => {\r\n    if (userDetails) {\r\n      return (\r\n        <div>\r\n          <Navbar\r\n            userDetails={userDetails}\r\n            setLayout={props.setLayout}\r\n            layout={props.layout}\r\n            currPage={currPage}\r\n            setCurrPage={setCurrPage}\r\n          ></Navbar>\r\n          {renderPage()}\r\n        </div>\r\n      );\r\n    } else return <div className={classes.loading}>Loading</div>;\r\n  };\r\n  return <>{content()}</>;\r\n}\r\n\r\nexport default ContentArea;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Checkbox,\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n} from \"@mui/material\";\r\nimport { useTimer } from \"react-timer-hook\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport axios from \"axios\";\r\nimport ChatWindow from \"./ChatWindow\";\r\nimport toast from \"react-simple-toasts\";\r\nimport { examWindowStyles } from \"../styles/ExamStyle\";\r\n\r\nfunction ExamWindow(props) {\r\n  const classes2 = examWindowStyles();\r\n  const selectedExam = props.selectedExam;\r\n  const [selectedExamDetails, setSelectedExamDetails] = useState(null);\r\n  const [answers, setAnswers] = useState(\r\n    localStorage.getItem(\"Answers\")\r\n      ? JSON.parse(localStorage.getItem(\"Answers\"))\r\n      : []\r\n  );\r\n  const [errMsg, setErrMsg] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n  const expiryTimestamp = new Date(selectedExam.endTime);\r\n  const { seconds, minutes, hours, days } = useTimer({\r\n    expiryTimestamp,\r\n    onExpire: () => handleSubmit(),\r\n  });\r\n\r\n  window.onfocus = function (ev) {\r\n    console.log(\"gained focus\");\r\n  };\r\n\r\n  window.onblur = function (ev) {\r\n    setCount(count + 1);\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/exam/details/\" + selectedExam._id, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"OEC_token\"),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.data.message === \"Success\") {\r\n          setSelectedExamDetails(res.data.result);\r\n          if (localStorage.getItem(\"Answers\")) {\r\n            setAnswers(JSON.parse(localStorage.getItem(\"Answers\")));\r\n          } else {\r\n            setAnswers(\r\n              res.data.result.questions.map((ele) => [\r\n                false,\r\n                false,\r\n                false,\r\n                false,\r\n              ])\r\n            );\r\n          }\r\n          setErrMsg(res.data.result.questions.map((ele) => [\"\", \"\", \"\", \"\"]));\r\n        } else {\r\n          toast(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast(err.message);\r\n        props.setLayout(\"main\");\r\n      });\r\n  }, [selectedExam._id]);\r\n\r\n  useEffect(() => {\r\n    if (count > selectedExam.activityThreshold) {\r\n      toast(\"Exam is ended because of tab switches\", 4000);\r\n      handleSubmit();\r\n    }\r\n  }, [count]);\r\n\r\n  const onSave = (id) => {\r\n    localStorage.setItem(\"Answers\", JSON.stringify(answers));\r\n    if (answers[id].reduce((sum, ele) => (ele ? (sum += 1) : sum), 0) > 0) {\r\n      setErrMsg(\r\n        errMsg.map((ele, ind) => {\r\n          if (ind === id) return \"\";\r\n          else return ele;\r\n        })\r\n      );\r\n      toast(\"Saved\");\r\n    } else {\r\n      setErrMsg(\r\n        errMsg.map((ele, ind) => {\r\n          if (ind === id) return \"Please select atleast one option\";\r\n          else return ele;\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const onChangeAnswers = (e, questionNumber, checkedOption) => {\r\n    setAnswers(\r\n      answers.map((singleAns, ind) => {\r\n        if (ind === questionNumber) {\r\n          const newSingleAns = singleAns.map((option, optionNo) => {\r\n            if (optionNo === checkedOption) return e.target.checked;\r\n            return option;\r\n          });\r\n          return newSingleAns;\r\n        }\r\n        return singleAns;\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleFullScreen = () => {\r\n    document.documentElement.requestFullscreen().catch((e) => console.log(e));\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    let savedAnswers = answers;\r\n    if (localStorage.getItem(\"Answers\")) {\r\n      savedAnswers = JSON.parse(localStorage.getItem(\"Answers\"));\r\n      localStorage.removeItem(\"Answers\");\r\n    }\r\n\r\n    const boolAnswerString = savedAnswers.map((ele) => ele.toString());\r\n\r\n    axios\r\n      .post(\r\n        \"/responses/saveResult\",\r\n        {\r\n          responsesId: props.responsesId,\r\n          answers: boolAnswerString,\r\n          completed: true,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"OEC_token\"),\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        toast(res.data.message, 4000);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast(err.message, 4000);\r\n      })\r\n      .finally(() => props.setLayout(\"main\"));\r\n  };\r\n  return (\r\n    <Box className={classes2.root}>\r\n      {selectedExamDetails && answers.length ? (\r\n        <Grid container spacing={2}>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={12}\r\n            md={8}\r\n            lg={8}\r\n            xl={8}\r\n            className={classes2.questionGrid}\r\n          >\r\n            {selectedExamDetails.questions.map((ele, ind) => (\r\n              <Accordion\r\n                disabled={!document.fullscreenElement}\r\n                className={classes2.questionBox}\r\n              >\r\n                <AccordionSummary\r\n                  className={classes2.summary}\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                >\r\n                  <Grid container spacing={1}>\r\n                    <Grid item xs={10}>\r\n                      <Typography className={classes2.typo1}>\r\n                        {ind + 1 + \" \"}. {ele.questionName}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                      <Typography className={classes2.typo2}>\r\n                        Marks: {ele.marks}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  <Typography className={classes2.typo3}>\r\n                    {ele.problemStatement}\r\n                  </Typography>\r\n\r\n                  <Box>\r\n                    <Box>\r\n                      <Checkbox\r\n                        disabled={!document.fullscreenElement}\r\n                        checked={answers[ind][0]}\r\n                        onChange={(e) => onChangeAnswers(e, ind, 0)}\r\n                        name=\"opt_a\"\r\n                      />\r\n                      <Typography variant=\"p\">\r\n                        <span>A: </span> {ele.option_A}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                      <Checkbox\r\n                        disabled={!document.fullscreenElement}\r\n                        checked={answers[ind][1]}\r\n                        onChange={(e) => onChangeAnswers(e, ind, 1)}\r\n                        name=\"opt_b\"\r\n                      />\r\n                      <Typography variant=\"p\">\r\n                        <span>B:</span> {ele.option_B}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                      <Checkbox\r\n                        disabled={!document.fullscreenElement}\r\n                        checked={answers[ind][2]}\r\n                        onChange={(e) => onChangeAnswers(e, ind, 2)}\r\n                        name=\"opt_c\"\r\n                      />\r\n                      <Typography variant=\"p\">\r\n                        <span>C:</span> {ele.option_C}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                      <Checkbox\r\n                        disabled={!document.fullscreenElement}\r\n                        checked={answers[ind][3]}\r\n                        onChange={(e) => onChangeAnswers(e, ind, 3)}\r\n                        name=\"opt_d\"\r\n                      />\r\n                      <Typography variant=\"p\">\r\n                        <span>D:</span> {ele.option_D}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                  <Box className={classes2.flexBox1}>\r\n                    <Typography className={classes2.err}>\r\n                      {errMsg[ind]}\r\n                    </Typography>\r\n                    <Button\r\n                      disabled={!document.fullscreenElement}\r\n                      variant=\"contained\"\r\n                      onClick={() => onSave(ind)}\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  </Box>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            ))}\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={4} lg={4} xl={4}>\r\n            <Box>\r\n              <Box className={classes2.examDetailsBox}>\r\n                <Box className={classes2.headBox}>\r\n                  <Typography className={classes2.examName}>\r\n                    {\"Exam Name | \" + selectedExam.examName}\r\n                  </Typography>\r\n                </Box>\r\n                <Box className={classes2.flexBox1}>\r\n                  <Typography className={classes2.typo4}>\r\n                    Total Marks: {selectedExam.totalMarks}\r\n                  </Typography>\r\n                  <Typography className={classes2.typo4}>\r\n                    Passing Marks: {selectedExam.passingMarks}\r\n                  </Typography>\r\n                </Box>\r\n                <Box className={classes2.flexBox1}>\r\n                  <Typography className={classes2.typo4}>\r\n                    Ends in: <span>{days}</span>:<span>{hours}</span>:\r\n                    <span>{minutes}</span>:<span>{seconds}</span>\r\n                  </Typography>\r\n                  <Typography className={classes2.typo4}>\r\n                    Subject: {selectedExam.subject}\r\n                  </Typography>\r\n                </Box>\r\n                {!document.fullscreenElement && (\r\n                  <Typography className={classes2.err2}>\r\n                    Please enable full screen by pressing the button below\r\n                  </Typography>\r\n                )}\r\n                <Grid container spacing={2} className={classes2.buttonGrid}>\r\n                  <Grid item xs={6}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      fullWidth\r\n                      onClick={handleFullScreen}\r\n                    >\r\n                      Full Screen\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      fullWidth\r\n                      onClick={handleSubmit}\r\n                    >\r\n                      End Exam\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n              <ChatWindow\r\n                userDetails={props.username}\r\n                examId={selectedExam._id}\r\n              ></ChatWindow>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        <Box>Loading</Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ExamWindow;\r\n","import React, { useState } from \"react\";\r\nimport { Box, Grid, Button, TextField } from \"@mui/material\";\r\nimport toast from \"react-simple-toasts\";\r\nimport axios from \"axios\";\r\nimport { homeStyle } from \"../styles/CommonStyle\";\r\nimport { validateEmail } from \"../helpers/validations\";\r\nfunction Home(props) {\r\n  const classes = homeStyle();\r\n\r\n  const [user, setUser] = useState({ email: \"\", password: \"\" });\r\n\r\n  const goToRegister = () => {\r\n    props.setLayout(\"register\");\r\n  };\r\n  const handleChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateEmail(user.email)) toast(\"Enter the valid email\");\r\n    else if (user.password === \"\") toast(\"Password cannot be empty\");\r\n    else {\r\n      axios\r\n        .post(\"/user/login\", user)\r\n        .then((res) => {\r\n          toast(res.data.message);\r\n\r\n          if (res.data.message === \"success\") {\r\n            localStorage.setItem(\"OEC_token\", res.data.token);\r\n            props.setLayout(\"main\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          toast(err.message);\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box className={classes.box}>\r\n        <Box className={classes.head}>Online Exam Conductor</Box>\r\n        <Box className={classes.para}>\r\n          Welcome, please enter your login credentials!\r\n        </Box>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              value={user.email}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              size=\"small\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              value={user.password}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              size=\"small\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Box>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={handleSubmit}\r\n            fullWidth\r\n            className={classes.btn}\r\n            color=\"success\"\r\n          >\r\n            Login\r\n          </Button>\r\n\r\n          <Box className={classes.typo} onClick={goToRegister}>\r\n            Need an account? <span className={classes.link}>Register here</span>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  TextField,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport toast from \"react-simple-toasts\";\r\nimport { registerStyle } from \"../styles/CommonStyle\";\r\nimport {\r\n  validateEmail,\r\n  validateExpertise,\r\n  validateMobile,\r\n} from \"../helpers/validations\";\r\n\r\nconst intialState = {\r\n  email: \"\",\r\n  password: \"\",\r\n  name: \"\",\r\n  address: \"\",\r\n  contact: \"\",\r\n  role: \"Student\",\r\n  institute: \"\",\r\n  class: \"\",\r\n  rollNo: \"\",\r\n  expertise: \"\",\r\n};\r\n\r\nfunction Register(props) {\r\n  const classes = registerStyle();\r\n  const [user, setUser] = useState(intialState);\r\n  const [errMsg, setErrMsg] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const goToHome = () => {\r\n    props.setLayout(\"home\");\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateEmail(user.email)) setErrMsg(\"Email is not valid\");\r\n    else if (!validateMobile(user.contact))\r\n      setErrMsg(\"Contact number should have 10 digits\");\r\n    else if (!validateExpertise(user.expertise))\r\n      setErrMsg(\"Expertise Subjects should be separated by single space\");\r\n    else if (user.password === \"\" || user.name === \"\" || user.address === \"\")\r\n      setErrMsg(\"A required field cannot be empty\");\r\n    else {\r\n      axios\r\n        .post(\"/user/register\", user)\r\n        .then((res) => {\r\n          toast(res.data.message);\r\n          setUser(intialState);\r\n          setErrMsg(\"\");\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <Box className={classes.head}>Register</Box>\r\n\r\n          <Box className={classes.formElement}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"email\"\r\n                  label=\"Email\"\r\n                  value={user.email}\r\n                  onChange={handleChange}\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  required\r\n                  label=\"Password\"\r\n                  onChange={handleChange}\r\n                  value={user.password}\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          <Box className={classes.formElement}>\r\n            <TextField\r\n              label=\"Name\"\r\n              name=\"name\"\r\n              required\r\n              value={user.name}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              size=\"small\"\r\n            />\r\n          </Box>\r\n          <Box className={classes.formElement}>\r\n            <TextField\r\n              label=\"Address\"\r\n              name=\"address\"\r\n              required\r\n              value={user.address}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              size=\"small\"\r\n            />\r\n          </Box>\r\n          <Box className={classes.formElement}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  name=\"contact\"\r\n                  required\r\n                  value={user.contact}\r\n                  onChange={handleChange}\r\n                  label=\"Contact\"\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <TextField\r\n                  sx={{ textAlign: \"left\" }}\r\n                  fullWidth\r\n                  label=\"Role\"\r\n                  required\r\n                  select\r\n                  size=\"small\"\r\n                  name=\"role\"\r\n                  value={user.role}\r\n                  onChange={handleChange}\r\n                >\r\n                  {[\"Faculty\", \"Student\"].map((option) => (\r\n                    <MenuItem key={option} value={option}>\r\n                      {option}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          <Box className={classes.formElement}>\r\n            <TextField\r\n              label=\"Institute\"\r\n              name=\"institute\"\r\n              onChange={handleChange}\r\n              value={user.institute}\r\n              fullWidth\r\n              size=\"small\"\r\n            />\r\n          </Box>\r\n          {user.role === \"Student\" ? (\r\n            <Box className={classes.formElement}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Class\"\r\n                    type=\"Name\"\r\n                    size=\"small\"\r\n                    name=\"class\"\r\n                    onChange={handleChange}\r\n                    value={user.class}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Roll No\"\r\n                    type=\"Name\"\r\n                    size=\"small\"\r\n                    name=\"rollNo\"\r\n                    onChange={handleChange}\r\n                    value={user.rollNo}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          ) : (\r\n            <Box className={classes.formElement}>\r\n              <TextField\r\n                label=\"Assigned Subjects\"\r\n                fullWidth\r\n                name=\"expertise\"\r\n                size=\"small\"\r\n                helperText=\"Add space-separated assigned subjects\"\r\n                value={user.expertise}\r\n                onChange={handleChange}\r\n              />\r\n            </Box>\r\n          )}\r\n          <Box className={classes.err}>{errMsg}</Box>\r\n          <Grid container spacing={2} className={classes.formElement}>\r\n            <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n              <Box>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  fullWidth\r\n                  color=\"success\"\r\n                  onClick={handleSubmit}\r\n                >\r\n                  Register\r\n                </Button>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n              <Box>\r\n                <Button variant=\"outlined\" fullWidth onClick={goToHome}>\r\n                  Go to login\r\n                </Button>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React, { useState } from \"react\";\r\nimport ContentArea from \"./ContentArea\";\r\nimport ExamWindow from \"./ExamWindow\";\r\nimport Home from \"./Home\";\r\nimport Register from \"./Register\";\r\n\r\nfunction MainLayout(props) {\r\n  const initialPage = localStorage.getItem(\"OEC_token\") ? \"main\" : \"home\";\r\n\r\n  const [layout, setLayout] = useState(initialPage);\r\n  const [selectedExam, setSelectedExam] = useState(null);\r\n  const [responsesId, setResponsesId] = useState(null);\r\n\r\n  const [username, setUsername] = useState(null);\r\n\r\n  const renderLayout = () => {\r\n    if (layout === \"home\") {\r\n      return <Home setLayout={setLayout} layout={layout}></Home>;\r\n    } else if (layout === \"register\") {\r\n      return <Register setLayout={setLayout} layout={layout}></Register>;\r\n    } else if (layout === \"main\") {\r\n      return (\r\n        <ContentArea\r\n          selectedExam={selectedExam}\r\n          setSelectedExam={setSelectedExam}\r\n          setLayout={setLayout}\r\n          layout={layout}\r\n          username={username}\r\n          setUsername={setUsername}\r\n          responsesId={responsesId}\r\n          setResponsesId={setResponsesId}\r\n        ></ContentArea>\r\n      );\r\n    } else if (layout === \"examWindow\") {\r\n      return (\r\n        <ExamWindow\r\n          username={username}\r\n          setUsername={setUsername}\r\n          selectedExam={selectedExam}\r\n          setSelectedExam={setSelectedExam}\r\n          setLayout={setLayout}\r\n          responsesId={responsesId}\r\n          setResponsesId={setResponsesId}\r\n          layout={layout}\r\n        ></ExamWindow>\r\n      );\r\n    }\r\n  };\r\n  return <div>{renderLayout()}</div>;\r\n}\r\n\r\nexport default MainLayout;\r\n","import \"./App.css\";\r\nimport MainLayout from \"./components/MainLayout\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <MainLayout></MainLayout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}