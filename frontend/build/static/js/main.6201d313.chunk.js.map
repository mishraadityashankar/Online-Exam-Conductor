{"version":3,"sources":["styles/CommonStyle.js","components/ChatWindow.jsx","styles/ExamStyle.js","components/QuestionList.jsx","components/CreateQuestion.jsx","components/CreateExam.jsx","helpers/validations.js","components/EditProfile.jsx","components/ExamDetail.jsx","components/ExamList.jsx","components/ExamListTeacher.jsx","components/Navbar.jsx","styles/ResponseStyle.js","components/ResponsesList.jsx","components/ResultHistory.jsx","components/StudentsResultList.jsx","components/ExamWindowTeacher.jsx","components/ContentArea.jsx","components/ExamWindow.jsx","components/Home.jsx","components/Register.jsx","components/MainLayout.jsx","App.js","reportWebVitals.js","index.js"],"names":["commonStyles","makeStyles","root","backgroundColor","display","justifyContent","height","padding","overflow","card","width","alignContent","boxShadow","formElement","btn","marginleft","marginTop","marginRight","paragraph","color","fontSize","fontWeight","headingLeft","textAlign","marginLeft","marginBottom","subHeadingCenter","margin","normalParaRight","err","loading","alignItems","chatWindowStyles","chatBox","msgBox","typo1","typo2","homeStyle","box","flexDirection","head","para","typo","link","cursor","textDecoration","registerStyle","navbarStyle","navHead","navItem","headBox","outerBox","btnGrp","editProfileStyle","head1","ChatWindow","props","classes1","classes2","useState","input","setInput","messages","setMessages","socket","setSocket","user","setUser","useEffect","io","userDetails","emit","testId","on","userName","msg","console","log","oldMessages","close","Box","className","Typography","Grid","container","spacing","item","xs","TextField","label","name","fullWidth","value","onChange","event","target","size","Button","variant","onClick","map","ele","examDetailsStyles","heading1","heading2","paddingTop","paddingBottom","paddingLeft","paddingRight","instructionsBox","createExamStyles","gridOuter","gridOuter2","questionList","flexBox1","flexBox2","examWindowStyles","questionGrid","questionBox","summary","typo3","examDetailsBox","testName","typo4","err2","buttonGrid","examListStyles","borderRadius","notest","notestTypo","examWindowTeacherStyles","questionStyles","buttonBox","noQuestion","accordion","formatAnswer","answerArray","ans","ind","String","fromCharCode","formatMarkedAnswer","responseString","responseArr","split","QuestionList","classes","questions","length","curQuestion","Accordion","AccordionSummary","expandIcon","id","sm","md","lg","xl","questionName","marks","AccordionDetails","problemStatement","Divider","light","option_A","option_B","option_C","option_D","answer","responses","recordedAnswers","explanation","role","page","deleteQuestion","CreateQuestion","question","handleQuestionChange","multiline","minRows","maxRows","FormLabel","FormControlLabel","control","Checkbox","checked","e","handleOptionChecked","select","subject","expertise","option","MenuItem","difficulty","type","CreateExam","isEditing","editTestDetails","prevTest","initialExam","createdBy","_id","startTime","endTime","passingMarks","totalMarks","activityThreshold","initialQuestion","open","setOpen","exam","setExam","setQuestionList","totalQuestionList","setTotalQuestionList","pickedQuestion","setPickedQuestion","selectedQuestions","setSelectedQuestions","setTotalMarks","duration","setDuration","date","setDate","setQuestion","setErr","handleClose","fetchQuestions","axios","get","headers","Authorization","token","params","then","res","data","message","result","toast","catch","setLayout","filteredQuestion","filter","handleChange","Date","startDatetimeUTC","moment","utc","format","add","toDate","endDatetimeUTC","reqBody","url","post","setCurrPage","helperText","style","disabled","newtotal","updatedQuestions","index","Dialog","onClose","DialogTitle","DialogContentText","DialogContent","newAnswer","key","DialogActions","reduce","count","finally","validateEmail","email","test","validateMobile","phone","validateExpertise","subjects","EditProfile","errMsg","setErrMsg","intialState","Avatar","sx","bgcolor","required","contact","class","rollNo","institute","address","password","localStorage","getItem","setUserDetails","ExamDetail","expiryTimestamp","selectedTest","isDisable","setIsDisable","useTimer","onExpire","seconds","minutes","hours","days","newResponses","studentId","m1","diff","getDuration","completed","setResponsesId","document","documentElement","requestFullscreen","ExamList","testList","setTestList","curTest","setSelectedTest","setLoading","displayTest","setDisplayTest","setChecked","prev","fetchTests","remainingTests","expiredTests","Switch","Stack","direction","IconButton","setEditTestDetails","delete","setResponseHistory","window","scrollTo","top","CircularProgress","content","Navbar","toggleDrawer","Drawer","anchor","removeItem","studentResultStyles","table","responseListStyles","resultHistoryStyles","flexBox","ResponsesList","responsesList","setResponsesList","TableContainer","maxHeight","component","Paper","Table","stickyHeader","TableHead","TableRow","TableCell","align","TableBody","row","border","scope","finishTime","passed","setCurResponses","ResultHistory","selectedResponses","curResponses","myData","x","y","scoresObtained","padAngle","datum","colorScale","StudentsResultList","responseHistory","ExamWindowTeacher","startTest","setStartTest","testDetails","setTestDetails","expiryTimestamp1","expiryTimestamp2","endTimer","handleTestEnd","ContentArea","currPage","setUsername","username","layout","ExamListTeacher","responsesId","ExamWindow","selectedTestDetails","setSelectedTestDetails","JSON","parse","answers","setAnswers","setCount","handleSubmit","onfocus","ev","onblur","onChangeAnswers","questionNumber","checkedOption","singleAns","optionNo","savedAnswers","boolAnswerString","toString","fullscreenElement","setItem","stringify","sum","Home","preventDefault","Register","Card","CardContent","MainLayout","initialPage","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6201d313.chunk.js","sourcesContent":["import { makeStyles } from \"@mui/styles\";\r\nexport const commonStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"#f5f0e1\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    height: \"100vh\",\r\n    padding: \"20px\",\r\n    overflow: \"auto\",\r\n  },\r\n  card: {\r\n    width: \"45%\",\r\n    padding: \"10px\",\r\n    alignContent: \"left\",\r\n    boxShadow: \"0 4px 8px 0 rgb(0 0 0 / 20%)\",\r\n  },\r\n  formElement: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\",\r\n    padding: \"10px\",\r\n  },\r\n  btn: {\r\n    marginleft: \"10px !important\",\r\n    marginTop: \"10px !important\",\r\n    marginRight: \"10px !important\",\r\n  },\r\n  paragraph: {\r\n    padding: \"5px !important\",\r\n    \"& span\": {\r\n      color: \"black !important\",\r\n      fontSize: \"18px !important\",\r\n      fontWeight: \"bold !important\",\r\n    },\r\n  },\r\n  headingLeft: {\r\n    fontSize: \"28px !important\",\r\n    fontWeight: \"bold !important\",\r\n    textAlign: \"left\",\r\n    marginLeft: \"5px !important\",\r\n    marginRight: \"5px !important\",\r\n    marginBottom: \"10px !important\",\r\n  },\r\n  subHeadingCenter: {\r\n    fontSize: \"24px !important\",\r\n    fontWeight: \"bold !important\",\r\n    textAlign: \"center\",\r\n    margin: \"5px !important\",\r\n  },\r\n  normalParaRight: {\r\n    fontSize: \"18px !important\",\r\n    textAlign: \"right !important\",\r\n    margin: \"5px !important\",\r\n  },\r\n  err: {\r\n    padding: \"2px !important\",\r\n    textAlign: \"center !important\",\r\n    color: \"red !important\",\r\n  },\r\n  loading: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    fontSize: \"24px\",\r\n    fontWeight: \"bold\",\r\n    height: \"60vh\",\r\n  },\r\n});\r\n\r\nexport const chatWindowStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"white\",\r\n    padding: \"20px\",\r\n    boxShadow: \"0 4px 8px 0 rgb(0 0 0 / 20%)\",\r\n  },\r\n  chatBox: {\r\n    height: \"270px\",\r\n    overflow: \"auto\",\r\n  },\r\n  msgBox: {\r\n    padding: \"10px\",\r\n    margin: \"5px\",\r\n    backgroundColor: \"#F5F5F5\",\r\n  },\r\n  typo1: {\r\n    fontSize: \"16px !important\",\r\n    fontWeight: \"bold !important\",\r\n  },\r\n  typo2: {\r\n    fontSize: \"16px !important\",\r\n  },\r\n});\r\n\r\nexport const homeStyle = makeStyles({\r\n  root: {\r\n    backgroundColor: \"#1e3d59\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"100vh\",\r\n  },\r\n  box: {\r\n    height: \"80%\",\r\n    overflow: \"auto\",\r\n    width: \"40%\",\r\n    backgroundColor: \"white\",\r\n    boxShadow: \"0 4px 8px 0 rgb(0 0 0 / 20%)\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-evenly\",\r\n    padding: \"25px\",\r\n  },\r\n  head: {\r\n    fontSize: \"32px\",\r\n    fontWeight: \"bold\",\r\n    marginBottom: \"20px\",\r\n    textAlign: \"center\",\r\n  },\r\n  para: {\r\n    fontSize: \"14px\",\r\n    marginBottom: \"10px\",\r\n    textAlign: \"center\",\r\n  },\r\n  btn: {\r\n    padding: \"5px\",\r\n    marginTop: \"10px\",\r\n    marginBottom: \"10px\",\r\n  },\r\n  typo: {\r\n    padding: \"20px\",\r\n    textAlign: \"center\",\r\n  },\r\n  link: {\r\n    cursor: \"pointer\",\r\n    textDecoration: \"underline\",\r\n    color: \"blue\",\r\n  },\r\n});\r\n\r\nexport const registerStyle = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    backgroundColor: \"#1e3d59\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    overflow: \"auto\",\r\n    height: \"100vh\",\r\n  },\r\n  card: {\r\n    width: \"60%\",\r\n    padding: \"10px\",\r\n    height: \"85%\",\r\n    overflow: \"auto\",\r\n    alignContent: \"left\",\r\n    boxShadow: \"0 4px 8px 0 rgb(0 0 0 / 20%)\",\r\n  },\r\n  formElement: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    padding: \"10px\",\r\n  },\r\n  btn: {\r\n    width: \"50%\",\r\n    marginTop: \"20px\",\r\n  },\r\n  head: {\r\n    fontSize: \"32px\",\r\n    fontWeight: \"bold\",\r\n    marginBottom: \"20px\",\r\n  },\r\n  err: {\r\n    color: \"red\",\r\n    textAlign: \"center\",\r\n    margin: \"5px\",\r\n  },\r\n  box: {\r\n    marginTop: \"40px\",\r\n  },\r\n});\r\nexport const navbarStyle = makeStyles({\r\n  root: {\r\n    padding: \"10px\",\r\n    backgroundColor: \"#1e3d59\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  },\r\n  navHead: {\r\n    fontSize: \"28px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  navItem: {\r\n    \"&:hover\": {\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  headBox: {\r\n    width: \"350px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  outerBox: {\r\n    width: \"70%\",\r\n    height: \"300px\",\r\n    overflow: \"auto\",\r\n  },\r\n  head: {\r\n    padding: \"10px\",\r\n    marginBottom: \"20px\",\r\n  },\r\n  typo: {\r\n    padding: \"5px\",\r\n    \"& span\": {\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  btnGrp: {\r\n    width: \"80%\",\r\n    marginTop: \"10px\",\r\n  },\r\n});\r\n\r\nexport const editProfileStyle = makeStyles({\r\n  root: {\r\n    overflow: \"auto\",\r\n    padding: \"20px\",\r\n    height: \"100vh\",\r\n    backgroundColor: \"#f5f0e1\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  card: {\r\n    padding: \"20px\",\r\n    height: \"65%\",\r\n    overflow: \"auto\",\r\n    backgroundColor: \"white\",\r\n    boxShadow: \"0 4px 8px 0 rgb(0 0 0 / 20%)\",\r\n  },\r\n  formElement: {\r\n    padding: \"10px !important\",\r\n  },\r\n  head1: {\r\n    fontSize: \"32px !important\",\r\n    fontWeight: \"bold !important\",\r\n    marginBottom: \"20px !important\",\r\n  },\r\n  typo1: {\r\n    fontSize: \"18px !important\",\r\n    padding: \"5px !important\",\r\n  },\r\n});\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Box, Button, Grid, Typography, TextField } from \"@mui/material\";\r\nimport io from \"socket.io-client\";\r\nimport { commonStyles, chatWindowStyles } from \"../styles/CommonStyle\";\r\n\r\nfunction ChatWindow(props) {\r\n  const classes1 = commonStyles();\r\n  const classes2 = chatWindowStyles();\r\n  const [input, setInput] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [socket, setSocket] = useState();\r\n  const [user, setUser] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let socket = io();\r\n    const user = props.userDetails;\r\n    setUser(user);\r\n    socket.emit(\"join-room\", props.testId, user);\r\n    socket.on(\"createMessage\", (userName, msg) => {\r\n      console.log(userName, msg);\r\n      setMessages((oldMessages) => [...oldMessages, { userName, msg }]);\r\n    });\r\n\r\n    setSocket(socket);\r\n\r\n    return () => socket.close();\r\n  }, [props.userDetails, props.testId]);\r\n\r\n  const handleSend = () => {\r\n    console.log(input);\r\n    socket.emit(\"message\", user, input);\r\n    console.log(messages);\r\n    setInput(\"\");\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setInput(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Box className={classes2.root}>\r\n      <Typography className={classes1.subHeadingCenter}>\r\n        Query Section\r\n      </Typography>\r\n      <Grid container spacing={2} className={classes1.formElement}>\r\n        <Grid item xs={9}>\r\n          <TextField\r\n            label=\"Ask Question\"\r\n            name=\"testName\"\r\n            fullWidth\r\n            value={input}\r\n            onChange={handleChange}\r\n            size=\"small\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Button fullWidth variant=\"contained\" onClick={handleSend}>\r\n            Send\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Box className={classes2.chatBox}>\r\n        {messages.map((ele) => (\r\n          <Box className={classes2.msgBox}>\r\n            <Typography className={classes2.typo1}>{ele.userName}</Typography>\r\n            <Typography className={classes2.typo2}>{ele.msg}</Typography>\r\n          </Box>\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ChatWindow;\r\n","import { makeStyles } from \"@mui/styles\";\r\nexport const examDetailsStyles = makeStyles({\r\n  root: {\r\n    padding: \"20px\",\r\n    textAlign: \"left\",\r\n    height: \"100vh\",\r\n    backgroundColor: \"#f5f0e1\",\r\n    overflow: \"auto\",\r\n  },\r\n  box: {\r\n    padding: \"10px\",\r\n    backgroundColor: \"white\",\r\n    boxShadow: \"0 4px 8px 0 rgb(0 0 0 / 20%)\",\r\n  },\r\n  heading1: {\r\n    fontSize: \"28px !important\",\r\n    marginBottom: \"10px !important\",\r\n    padding: \"5px !important\",\r\n    fontWeight: \"bold !important\",\r\n    textAlign: \"center\",\r\n  },\r\n  heading2: {\r\n    fontSize: \"24px !important\",\r\n    paddingTop: \"10px !important\",\r\n    paddingBottom: \"10px !important\",\r\n    paddingLeft: \"20px !important\",\r\n    paddingRight: \"20px !important\",\r\n    fontWeight: \"bold !important\",\r\n  },\r\n  formElement: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    margin: \"10px !important\",\r\n    fontSize: \"16px !important\",\r\n    \"& span\": {\r\n      fontSize: \"16px !important\",\r\n      fontWeight: \"bold !important\",\r\n    },\r\n  },\r\n  instructionsBox: {\r\n    marginTop: \"10px\",\r\n    padding: \"10px\",\r\n    height: \"400px\",\r\n    overflow: \"auto\",\r\n  },\r\n  typo: {\r\n    marginBottom: \"10px !important\",\r\n  },\r\n});\r\n\r\nexport const createExamStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"#f5f0e1\",\r\n    height: \"100vh\",\r\n    padding: \"20px\",\r\n    overflow: \"auto\",\r\n  },\r\n  gridOuter: {\r\n    backgroundColor: \"white\",\r\n    padding: \"20px\",\r\n    boxShadow: \"0 4px 8px 0 rgb(0 0 0 / 20%)\",\r\n  },\r\n  gridOuter2: {\r\n    backgroundColor: \"#ffc13b\",\r\n    padding: \"20px\",\r\n    boxShadow: \"0 4px 8px 0 rgb(0 0 0 / 20%)\",\r\n  },\r\n  questionList: {\r\n    height: \"400px\",\r\n    overflow: \"auto\",\r\n    padding: \"10px\",\r\n  },\r\n\r\n  paragraph: {\r\n    padding: \"5px\",\r\n    \"& span\": {\r\n      color: \"black\",\r\n      fontSize: \"18px\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  flexBox1: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"40%\",\r\n  },\r\n  flexBox2: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"48%\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n});\r\n\r\nexport const examWindowStyles = makeStyles({\r\n  root: {\r\n    padding: \"20px\",\r\n    textAlign: \"left\",\r\n    backgroundColor: \"#1e3d59\",\r\n  },\r\n  questionGrid: {\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  questionBox: {\r\n    margin: \"10px\",\r\n    boxShadow: \"0 4px 4px 0 rgb(0 0 0 / 20%)\",\r\n  },\r\n  summary: {\r\n    backgroundColor: \"#f5f5f5 !important\",\r\n  },\r\n  typo1: {\r\n    padding: \"5px !important\",\r\n    fontWeight: \"bold !important\",\r\n    fontSize: \"18px !important\",\r\n  },\r\n\r\n  typo2: {\r\n    textAlign: \"right !important\",\r\n    padding: \"5px !important\",\r\n    fontWeight: \"bold !important\",\r\n  },\r\n  typo3: {\r\n    padding: \"10px !important\",\r\n  },\r\n  flexBox1: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  err: {\r\n    color: \"red !important\",\r\n  },\r\n  examDetailsBox: {\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"white\",\r\n    padding: \"20px\",\r\n    boxShadow: \"0 4px 8px 0 rgb(0 0 0 / 20%)\",\r\n  },\r\n  headBox: {\r\n    marginBottom: \"20px\",\r\n  },\r\n  testName: {\r\n    fontSize: \"24px !important\",\r\n    fontWeight: \"bold !important\",\r\n  },\r\n  typo4: {\r\n    fontSize: \"16px !important\",\r\n    fontWeight: \"bold !important\",\r\n    marginBottom: \"20px !important\",\r\n  },\r\n  err2: {\r\n    color: \"red !important\",\r\n    marginTop: \"20px !important\",\r\n  },\r\n  buttonGrid: {\r\n    marginTop: \"20px !important\",\r\n  },\r\n});\r\n\r\nexport const examListStyles = makeStyles({\r\n  root: {\r\n    padding: \"20px\",\r\n    textAlign: \"left\",\r\n    height: \"100vh\",\r\n    backgroundColor: \"#f5f0e1\",\r\n    overflow: \"auto\",\r\n  },\r\n  box: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"5px\",\r\n    boxShadow: \"0 4px 8px 0 rgb(0 0 0 / 20%)\",\r\n    padding: \"20px\",\r\n  },\r\n  heading1: {\r\n    fontSize: \"18px !important\",\r\n    marginBottom: \"20px !important\",\r\n    fontWeight: \"bold !important\",\r\n  },\r\n  typo: {\r\n    marginBottom: \"20px !important\",\r\n    \"& span\": {\r\n      fontWeight: \"bold !important\",\r\n    },\r\n  },\r\n  notest: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    fontSize: \"24px\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    height: \"60vh\",\r\n  },\r\n  notestTypo: {\r\n    fontSize: \"28px !important\",\r\n    fontWeight: \"bold !important\",\r\n    marginBottom: \"20px !important\",\r\n  },\r\n});\r\nexport const examWindowTeacherStyles = makeStyles({\r\n  root: {\r\n    padding: \"20px\",\r\n    textAlign: \"left\",\r\n    height: \"100vh\",\r\n    backgroundColor: \"#f5f0e1\",\r\n    overflow: \"auto\",\r\n  },\r\n  box: {\r\n    padding: \"10px\",\r\n    backgroundColor: \"white\",\r\n    boxShadow: \"0 4px 8px 0 rgb(0 0 0 / 20%)\",\r\n  },\r\n  heading1: {\r\n    fontSize: \"28px !important\",\r\n    padding: \"10px !important\",\r\n    fontWeight: \"bold !important\",\r\n    textAlign: \"center !important\",\r\n  },\r\n  heading2: {\r\n    fontSize: \"20px !important\",\r\n    fontWeight: \"bold !important\",\r\n    padding: \"10px !important\",\r\n  },\r\n  formElement: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    margin: \"10px !important\",\r\n    fontSize: \"16px !important\",\r\n    \"& span\": {\r\n      fontSize: \"16px !important\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  instructionsBox: {\r\n    marginTop: \"10px\",\r\n    padding: \"10px\",\r\n    height: \"400px\",\r\n    overflow: \"auto\",\r\n  },\r\n  typo: {\r\n    marginBottom: \"10px !important\",\r\n  },\r\n  chatBox: {\r\n    marginTop: \"10px !important\",\r\n  },\r\n  outerBox: {\r\n    backgroundColor: \"white\",\r\n    boxShadow: \"0 4px 8px 0 rgb(0 0 0 / 20%)\",\r\n    padding: \"10px\",\r\n  },\r\n  questionList: {\r\n    height: \"400px\",\r\n    overflow: \"auto\",\r\n    padding: \"10px\",\r\n  },\r\n});\r\n\r\nexport const questionStyles = makeStyles({\r\n  btn: {\r\n    marginTop: \"10px !important\",\r\n  },\r\n  buttonBox: {\r\n    display: \"flex\",\r\n    justifyContent: \"right\",\r\n  },\r\n  noQuestion: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    fontSize: \"28px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  accordion: {\r\n    margin: \"5px\",\r\n    boxShadow: \"0 4px 4px 0 rgb(0 0 0 / 20%) !important\",\r\n  },\r\n  summary: {\r\n    backgroundColor: \"#f5f0e1 !important\",\r\n  },\r\n  typo: {\r\n    padding: \"5px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  paragraph: {\r\n    padding: \"5px\",\r\n    \"& span\": {\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Divider,\r\n} from \"@mui/material\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport { questionStyles } from \"../styles/ExamStyle\";\r\n\r\nconst formatAnswer = (answerArray) => {\r\n  let ans = \" \";\r\n  answerArray.map((ele, ind) => {\r\n    if (ele) ans += String.fromCharCode(65 + ind) + \" \";\r\n  });\r\n  return ans;\r\n};\r\n\r\nconst formatMarkedAnswer = (responseString) => {\r\n  const responseArr = responseString.split(\",\").map((ele) => ele === \"true\");\r\n  return formatAnswer(responseArr);\r\n};\r\n\r\nfunction QuestionList(props) {\r\n  const classes = questionStyles();\r\n  return (\r\n    <Box>\r\n      {props.questions && props.questions.length ? (\r\n        props.questions.map((curQuestion, ind) => (\r\n          <Accordion className={classes.accordion}>\r\n            <AccordionSummary\r\n              className={classes.summary}\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1a-content\"\r\n              id=\"panel1a-header\"\r\n            >\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={12} md={8} lg={10} xl={10}>\r\n                  <Typography className={classes.typo}>\r\n                    {ind + 1 + \" \"}. {curQuestion.questionName}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={4} lg={2} xl={2}>\r\n                  <Typography className={classes.typo}>\r\n                    Marks: {curQuestion.marks}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <Box>\r\n                <Typography className={classes.paragraph}>\r\n                  {curQuestion.problemStatement}\r\n                </Typography>\r\n                <Divider light />\r\n                <Typography className={classes.paragraph}>\r\n                  <span>Option A:</span> {curQuestion.option_A}\r\n                </Typography>\r\n\r\n                <Typography className={classes.paragraph}>\r\n                  <span>Option B:</span> {curQuestion.option_B}\r\n                </Typography>\r\n                <Typography className={classes.paragraph}>\r\n                  <span>Option C:</span> {curQuestion.option_C}\r\n                </Typography>\r\n                <Typography className={classes.paragraph}>\r\n                  <span>Option D:</span> {curQuestion.option_D}\r\n                </Typography>\r\n                <Divider light />\r\n                <Typography className={classes.paragraph}>\r\n                  <span>Correct Anwers:</span>\r\n                  {formatAnswer(curQuestion.answer)}\r\n                </Typography>\r\n                {props.responses && (\r\n                  <>\r\n                    <Divider light />\r\n                    <Typography className={classes.paragraph}>\r\n                      <span>Marked Anwers:</span>\r\n                      {formatMarkedAnswer(props.responses.recordedAnswers[ind])}\r\n                    </Typography>\r\n                  </>\r\n                )}\r\n                <Divider light />\r\n                <Typography className={classes.paragraph}>\r\n                  <span>Explanation: </span> {curQuestion.explanation}\r\n                </Typography>\r\n                {props.role === \"Faculty\" && props.page === \"createExam\" && (\r\n                  <>\r\n                    <Divider light />\r\n                    <Box className={classes.buttonBox}>\r\n                      <Button\r\n                        className={classes.btn}\r\n                        variant=\"contained\"\r\n                        onClick={() => props.deleteQuestion(ind)}\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </Box>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        ))\r\n      ) : (\r\n        <Box className={classes.noQuestion}>No Questions</Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default QuestionList;\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport { commonStyles } from \"../styles/CommonStyle\";\r\nimport { createExamStyles } from \"../styles/ExamStyle\";\r\n\r\nfunction CreateQuestion(props) {\r\n  const classes = commonStyles();\r\n  const classes1 = createExamStyles();\r\n  return (\r\n    <Box>\r\n      <Box className={classes.formElement}>\r\n        <TextField\r\n          variant=\"standard\"\r\n          fullWidth\r\n          label=\"Question Name\"\r\n          name=\"questionName\"\r\n          value={props.question.questionName}\r\n          onChange={props.handleQuestionChange}\r\n          size=\"small\"\r\n        />\r\n      </Box>\r\n      <Box className={classes.formElement}>\r\n        <TextField\r\n          label=\"Problem Statement\"\r\n          multiline\r\n          minRows={3}\r\n          maxRows={3}\r\n          name=\"problemStatement\"\r\n          value={props.question.problemStatement}\r\n          onChange={props.handleQuestionChange}\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Box>\r\n      <Box className={classes.formElement}>\r\n        <TextField\r\n          label=\"Option A\"\r\n          variant=\"standard\"\r\n          fullWidth\r\n          name=\"option_A\"\r\n          value={props.question.option_A}\r\n          onChange={props.handleQuestionChange}\r\n          size=\"small\"\r\n        />\r\n      </Box>\r\n      <Box className={classes.formElement}>\r\n        <TextField\r\n          label=\"Option B\"\r\n          variant=\"standard\"\r\n          name=\"option_B\"\r\n          value={props.question.option_B}\r\n          onChange={props.handleQuestionChange}\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Box>\r\n      <Box className={classes.formElement}>\r\n        <TextField\r\n          label=\"Option C\"\r\n          variant=\"standard\"\r\n          name=\"option_C\"\r\n          value={props.question.option_C}\r\n          onChange={props.handleQuestionChange}\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Box>\r\n      <Box className={classes.formElement}>\r\n        <TextField\r\n          label=\"Option D\"\r\n          variant=\"standard\"\r\n          name=\"option_D\"\r\n          value={props.question.option_D}\r\n          onChange={props.handleQuestionChange}\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Box>\r\n      <Box className={classes.formElement}>\r\n        <Box className={classes1.flexBox1}>\r\n          <FormLabel className={classes.formElement}>Correct Options</FormLabel>\r\n\r\n          <FormControlLabel\r\n            label=\"Option A\"\r\n            control={\r\n              <Checkbox\r\n                checked={props.question.answer[0]}\r\n                onChange={(e) => props.handleOptionChecked(e, 0)}\r\n                name=\"opt_a\"\r\n              />\r\n            }\r\n          />\r\n          <FormControlLabel\r\n            label=\"Option B\"\r\n            control={\r\n              <Checkbox\r\n                checked={props.question.answer[1]}\r\n                onChange={(e) => props.handleOptionChecked(e, 1)}\r\n                name=\"opt_b\"\r\n              />\r\n            }\r\n          />\r\n          <FormControlLabel\r\n            label=\"Option C\"\r\n            control={\r\n              <Checkbox\r\n                checked={props.question.answer[2]}\r\n                onChange={(e) => props.handleOptionChecked(e, 2)}\r\n                name=\"opt_c\"\r\n              />\r\n            }\r\n          />\r\n          <FormControlLabel\r\n            label=\"Option D\"\r\n            control={\r\n              <Checkbox\r\n                checked={props.question.answer[3]}\r\n                onChange={(e) => props.handleOptionChecked(e, 3)}\r\n                name=\"opt_d\"\r\n              />\r\n            }\r\n          />\r\n        </Box>\r\n        <Box className={classes1.flexBox2}>\r\n          <TextField\r\n            id=\"outlined-select-currency\"\r\n            select\r\n            fullWidth\r\n            label=\"Select subject\"\r\n            size=\"small\"\r\n            name=\"subject\"\r\n            value={props.question.subject}\r\n            onChange={props.handleQuestionChange}\r\n          >\r\n            {props.userDetails.expertise.split(\" \").map((option) => (\r\n              <MenuItem key={option} value={option}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            id=\"outlined-select-currency\"\r\n            select\r\n            fullWidth\r\n            label=\"Difficulty\"\r\n            size=\"small\"\r\n            name=\"difficulty\"\r\n            value={props.question.difficulty}\r\n            onChange={props.handleQuestionChange}\r\n          >\r\n            {props.difficulty.map((option) => (\r\n              <MenuItem key={option} value={option}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            name=\"marks\"\r\n            value={props.question.marks}\r\n            onChange={props.handleQuestionChange}\r\n            fullWidth\r\n            type=\"number\"\r\n            label=\"Marks\"\r\n            size=\"small\"\r\n          />\r\n        </Box>\r\n      </Box>\r\n      <Box className={classes.formElement}>\r\n        <TextField\r\n          label=\"Explanation\"\r\n          multiline\r\n          name=\"explanation\"\r\n          value={props.question.explanation}\r\n          onChange={props.handleQuestionChange}\r\n          minRows={3}\r\n          maxRows={3}\r\n          fullWidth\r\n          size=\"small\"\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CreateQuestion;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  FormLabel,\r\n  Grid,\r\n  MenuItem,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogContentText,\r\n} from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport QuestionList from \"./QuestionList\";\r\nimport toast from \"react-simple-toasts\";\r\nimport { commonStyles } from \"../styles/CommonStyle\";\r\nimport { createExamStyles } from \"../styles/ExamStyle\";\r\nimport CreateQuestion from \"./CreateQuestion\";\r\n\r\nfunction CreateExam(props) {\r\n  const isEditing = props.editTestDetails ? true : false;\r\n  const prevTest = props.editTestDetails;\r\n  const initialExam = {\r\n    testName: isEditing ? prevTest.testName : \"\",\r\n    questions: [],\r\n    createdBy: props.userDetails._id,\r\n    startTime: \"\",\r\n    endTime: \"\",\r\n    subject: isEditing ? prevTest.subject : \"\",\r\n    passingMarks: isEditing ? prevTest.passingMarks : 0,\r\n    totalMarks: isEditing ? prevTest.totalMarks : 0,\r\n    activityThreshold: isEditing ? prevTest.activityThreshold : 3,\r\n  };\r\n  const initialQuestion = {\r\n    questionName: \"\",\r\n    problemStatement: \"\",\r\n    subject: \"\",\r\n    marks: 1,\r\n    difficulty: \"Easy\",\r\n    answer: [false, false, false, false],\r\n    explanation: \"Not available\",\r\n    option_A: \"\",\r\n    option_B: \"\",\r\n    option_C: \"\",\r\n    option_D: \"\",\r\n    createdBy: props.userDetails._id,\r\n  };\r\n\r\n  const classes = commonStyles();\r\n  const classes1 = createExamStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [exam, setExam] = useState(initialExam);\r\n  const [questionList, setQuestionList] = useState([]);\r\n  const [totalQuestionList, setTotalQuestionList] = useState([]);\r\n  const [pickedQuestion, setPickedQuestion] = useState(null);\r\n  const [selectedQuestions, setSelectedQuestions] = useState(\r\n    isEditing ? prevTest.questions : []\r\n  );\r\n  const [totalMarks, setTotalMarks] = useState(\r\n    isEditing ? prevTest.totalMarks : 0\r\n  );\r\n  const [duration, setDuration] = useState(0);\r\n  const [date, setDate] = useState(\"\");\r\n  const difficulty = [\"Easy\", \"Medium\", \"Hard\"];\r\n  const [question, setQuestion] = useState(initialQuestion);\r\n  const [err, setErr] = useState(\"\");\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setErr(\"\");\r\n    setQuestion(initialQuestion);\r\n  };\r\n\r\n  const fetchQuestions = () => {\r\n    axios\r\n      .get(\"/question/get\", {\r\n        headers: {\r\n          Authorization: \"Bearer \" + props.token,\r\n        },\r\n        params: {\r\n          subject: exam.subject,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.data.message === \"Success\") {\r\n          setQuestionList(res.data.result);\r\n          setTotalQuestionList(res.data.result);\r\n          console.log(res.data);\r\n        } else {\r\n          toast(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast(err.message);\r\n        props.setLayout(\"home\");\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetchQuestions();\r\n  }, [exam.subject]);\r\n\r\n  useEffect(() => {\r\n    const filteredQuestion = totalQuestionList.filter(\r\n      (ele) => ele.subject === exam.subject\r\n    );\r\n    setQuestionList(filteredQuestion);\r\n  }, [exam.subject]);\r\n\r\n  const addQuestion = () => {\r\n    if (pickedQuestion)\r\n      setSelectedQuestions([...selectedQuestions, pickedQuestion]);\r\n    setTotalMarks(totalMarks + pickedQuestion.marks);\r\n  };\r\n\r\n  const deleteQuestion = (id) => {\r\n    let newtotal = 0;\r\n    selectedQuestions.map((ele, ind) => {\r\n      if (ind !== id) newtotal += ele.marks;\r\n      return;\r\n    });\r\n    let updatedQuestions = selectedQuestions.filter(\r\n      (item, index) => index !== id\r\n    );\r\n    if (updatedQuestions.length === 0) setPickedQuestion(null);\r\n    setTotalMarks(newtotal);\r\n    setSelectedQuestions(updatedQuestions);\r\n  };\r\n\r\n  const handleSelection = (e) => {\r\n    setPickedQuestion(e.target.value);\r\n  };\r\n  const handleChange = (e) => {\r\n    setExam({ ...exam, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleDuration = (e) => {\r\n    setDuration(e.target.value);\r\n  };\r\n  const handleDate = (e) => {\r\n    setDate(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const startTime = new Date(date);\r\n    const startDatetimeUTC = moment.utc(startTime).format();\r\n    const endTime = moment(startTime).add(duration, \"m\").toDate();\r\n    const endDatetimeUTC = moment.utc(endTime).format();\r\n    const questions = selectedQuestions.map((ele) => ele._id);\r\n\r\n    if (exam.testName === \"\") {\r\n      toast(\"Test Name cannot be empty\");\r\n      return;\r\n    } else if (startTime == \"Invalid Date\" || endTime == \"Invalid Date\") {\r\n      toast(\"Select date properly\");\r\n      return;\r\n    } else if (exam.activityThreshold < 0) {\r\n      toast(\"User activity threshold has be to positive\");\r\n      return;\r\n    } else if (duration < 0) {\r\n      toast(\"Duration has be to positive\");\r\n      return;\r\n    } else if (exam.passingMarks > totalMarks || exam.passingMarks < 0) {\r\n      toast(\r\n        \"Passing marks should be positive and less than or equals to total\"\r\n      );\r\n      return;\r\n    } else if (exam.subject === \"\") {\r\n      toast(\"Select subject properly\");\r\n      return;\r\n    }\r\n\r\n    const reqBody = {\r\n      ...exam,\r\n      startTime: startDatetimeUTC,\r\n      endTime: endDatetimeUTC,\r\n      questions: questions,\r\n      totalMarks: totalMarks,\r\n    };\r\n    const url = isEditing\r\n      ? \"/test/update/\" + prevTest._id + \"/\" + props.userDetails._id\r\n      : \"/test/add\";\r\n    axios\r\n      .post(url, reqBody, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + props.token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setExam(initialExam);\r\n        setDate(\"\");\r\n        setDuration(0);\r\n        setTotalMarks(0);\r\n        setPickedQuestion(null);\r\n        setSelectedQuestions([]);\r\n        toast(res.data.message);\r\n        if (isEditing) {\r\n          props.setCurrPage(\"examList\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast(err.message);\r\n      });\r\n  };\r\n\r\n  const handleQuestionChange = (e) => {\r\n    setQuestion({ ...question, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleOptionChecked = (e, id) => {\r\n    console.log(id);\r\n    const newAnswer = question.answer.map((ele, key) => {\r\n      if (key === id) {\r\n        return e.target.checked;\r\n      }\r\n      return ele;\r\n    });\r\n\r\n    setQuestion({ ...question, answer: newAnswer });\r\n  };\r\n\r\n  const handleCreateQuestion = (e) => {\r\n    if (question.questionName === \"\") {\r\n      setErr(\"Question Name cannot be empty\");\r\n      return;\r\n    } else if (question.problemStatement === \"\") {\r\n      setErr(\"Problem Statement cannot be empty\");\r\n      return;\r\n    } else if (question.marks < 0) {\r\n      setErr(\"Marks has be to positive\");\r\n      return;\r\n    } else if (\r\n      question.answer.reduce((count, ele) => {\r\n        return ele ? count + 1 : count;\r\n      }, 0) < 1\r\n    ) {\r\n      setErr(\"Select atleast one option\");\r\n      return;\r\n    } else if (question.option_A === \"\") {\r\n      setErr(\"Option A cannot be empty\");\r\n      return;\r\n    } else if (question.option_B === \"\") {\r\n      setErr(\"Option B cannot be empty\");\r\n      return;\r\n    } else if (question.option_C === \"\") {\r\n      setErr(\"Option C cannot be empty\");\r\n      return;\r\n    } else if (question.option_D === \"\") {\r\n      setErr(\"Option D cannot be empty\");\r\n      return;\r\n    }\r\n    axios\r\n      .post(\"/question/add\", question, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + props.token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setOpen(false);\r\n        toast(res.data.message, 4000);\r\n        setQuestion(initialQuestion);\r\n        fetchQuestions();\r\n      })\r\n      .catch((err) => {\r\n        setOpen(false);\r\n        console.log(err);\r\n        toast(err.message, 4000);\r\n      })\r\n      .finally(() => {\r\n        setErr(\"\");\r\n      });\r\n  };\r\n  return (\r\n    <Box className={classes1.root}>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={12} md={4} lg={4} xl={4}>\r\n          <Box className={classes1.gridOuter}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Box className={classes.headingLeft}>Test Details</Box>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Box className={classes.normalParaRight}>\r\n                  Total Marks: {totalMarks}\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n            <Box className={classes.formElement}>\r\n              <TextField\r\n                label=\"Test Name\"\r\n                name=\"testName\"\r\n                value={exam.testName}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                size=\"small\"\r\n              />\r\n            </Box>\r\n            <Grid container spacing={2} className={classes.formElement}>\r\n              <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <TextField\r\n                  id=\"outlined-select-currency\"\r\n                  select\r\n                  fullWidth\r\n                  label=\"Select subject\"\r\n                  size=\"small\"\r\n                  name=\"subject\"\r\n                  value={exam.subject}\r\n                  onChange={handleChange}\r\n                >\r\n                  {props.userDetails.expertise.split(\" \").map((option) => (\r\n                    <MenuItem key={option} value={option}>\r\n                      {option}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <TextField\r\n                  label=\"User Activity Threshold\"\r\n                  size=\"small\"\r\n                  type=\"number\"\r\n                  name=\"activityThreshold\"\r\n                  fullWidth\r\n                  value={exam.activityThreshold}\r\n                  onChange={handleChange}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container spacing={2} className={classes.formElement}>\r\n              <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  type=\"number\"\r\n                  label=\"Passing Marks\"\r\n                  size=\"small\"\r\n                  name=\"passingMarks\"\r\n                  value={exam.passingMarks}\r\n                  onChange={handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <TextField\r\n                  name=\"duration\"\r\n                  fullWidth\r\n                  value={duration}\r\n                  onChange={handleDuration}\r\n                  type=\"number\"\r\n                  label=\"Duration (minutes)\"\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Box>\r\n              <FormLabel className={classes.formElement}>\r\n                Select Exam Date & Time\r\n              </FormLabel>\r\n              <Box className={classes.formElement}>\r\n                <TextField\r\n                  value={date}\r\n                  type=\"datetime-local\"\r\n                  onChange={handleDate}\r\n                  size=\"small\"\r\n                />\r\n              </Box>\r\n            </Box>\r\n            <Grid container spacing={2} className={classes.formElement}>\r\n              <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <Button variant=\"outlined\" fullWidth onClick={handleClickOpen}>\r\n                  Create Question\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  fullWidth\r\n                  color=\"primary\"\r\n                  onClick={handleSubmit}\r\n                >\r\n                  {isEditing ? \"Update Test\" : \"Create Test\"}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={8} lg={8} xl={8}>\r\n          <Box className={classes1.gridOuter}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={8} md={8} lg={9} xl={9}>\r\n                <Box>\r\n                  <TextField\r\n                    id=\"outlined-select-currency\"\r\n                    select\r\n                    fullWidth\r\n                    label=\"Select question\"\r\n                    size=\"small\"\r\n                    value={pickedQuestion}\r\n                    helperText=\"Select subject first to filter the questions\"\r\n                    onChange={handleSelection}\r\n                  >\r\n                    {questionList.length === 0 && (\r\n                      <Box style={{ textAlign: \"center\", padding: \"10px\" }}>\r\n                        No previous question found of the selected subject\r\n                      </Box>\r\n                    )}\r\n                    {questionList.map((option) => (\r\n                      <MenuItem key={option} value={option}>\r\n                        {option.questionName}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </TextField>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={12} sm={4} md={4} lg={3} xl={3}>\r\n                <Box>\r\n                  <Button\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    disabled={!pickedQuestion || pickedQuestion === \"\"}\r\n                    onClick={addQuestion}\r\n                  >\r\n                    Add existing question\r\n                  </Button>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Box className={classes1.questionList}>\r\n              {selectedQuestions.length === 0 ? (\r\n                <Box className={classes.subHeadingCenter}>\r\n                  No selected questions !!\r\n                </Box>\r\n              ) : (\r\n                <QuestionList\r\n                  role={props.userDetails.role}\r\n                  questions={selectedQuestions}\r\n                  deleteQuestion={deleteQuestion}\r\n                  page=\"createExam\"\r\n                ></QuestionList>\r\n              )}\r\n            </Box>\r\n            <Dialog fullWidth open={open} onClose={handleClose}>\r\n              <DialogTitle className={classes.subHeadingCenter}>\r\n                Create Question\r\n              </DialogTitle>\r\n              <DialogContentText className={classes.err}>\r\n                {err}\r\n              </DialogContentText>\r\n              <DialogContent>\r\n                <CreateQuestion\r\n                  difficulty={difficulty}\r\n                  question={question}\r\n                  handleQuestionChange={handleQuestionChange}\r\n                  handleOptionChecked={handleOptionChecked}\r\n                  userDetails={props.userDetails}\r\n                ></CreateQuestion>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button variant=\"outlined\" onClick={handleClose}>\r\n                  Cancel\r\n                </Button>\r\n                <Button variant=\"contained\" onClick={handleCreateQuestion}>\r\n                  Create\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CreateExam;\r\n","/* eslint-disable */\r\nexport const validateEmail = (email) => {\r\n  const re =\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(email);\r\n};\r\nexport const validateMobile = (phone) => {\r\n  const re = /^\\d{10}$/;\r\n  return re.test(phone);\r\n};\r\n\r\nexport const validateExpertise = (subjects) => {\r\n  const re = /^[a-zA-Z0-9\\x20]*$/;\r\n  return re.test(subjects);\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Box, Avatar, Button, TextField, Grid } from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport toast from \"react-simple-toasts\";\r\nimport { editProfileStyle } from \"../styles/CommonStyle\";\r\nimport {\r\n  validateEmail,\r\n  validateExpertise,\r\n  validateMobile,\r\n} from \"../helpers/validations\";\r\n\r\nfunction EditProfile(props) {\r\n  const classes = editProfileStyle();\r\n  const userDetails = props.userDetails;\r\n  const [errMsg, setErrMsg] = useState(\"\");\r\n  const intialState = {\r\n    ...userDetails,\r\n  };\r\n\r\n  const [user, setUser] = useState(intialState);\r\n  const handleChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleUpdate = (e) => {\r\n    if (!validateEmail(user.email)) setErrMsg(\"Email is not valid\");\r\n    else if (!validateMobile(user.contact))\r\n      setErrMsg(\"Contact number should have 10 digits\");\r\n    else if (!validateExpertise(user.expertise))\r\n      setErrMsg(\"Expertise Subjects should be separated by single space\");\r\n    else if (user.password === \"\" || user.name === \"\" || user.address === \"\")\r\n      setErrMsg(\"A required field cannot be empty\");\r\n    else {\r\n      axios\r\n        .post(\"/user/update\", user, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"OEC_token\"),\r\n          },\r\n        })\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          toast(res.data.message);\r\n          props.setUserDetails(user);\r\n          setErrMsg(\"\");\r\n          props.setCurrPage(\"examList\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          toast(err.message);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box className={classes.card}>\r\n        <Box>\r\n          <Box className={classes.head1}>Update Profile</Box>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={12} md={12} lg={6} xl={6}>\r\n              <Box>\r\n                <Avatar\r\n                  sx={{\r\n                    bgcolor: \"orange\",\r\n                    width: 150,\r\n                    fontSize: \"48px\",\r\n                    height: 150,\r\n                    margin: \"20px\",\r\n                  }}\r\n                >\r\n                  {user.name[0]}\r\n                </Avatar>\r\n                <Box className={classes.typo1}>Email : {userDetails.email}</Box>\r\n                <Box className={classes.typo1}>Role : {userDetails.role}</Box>\r\n                <Box style={{ color: \"red\" }}>{errMsg}</Box>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={6} xl={6}>\r\n              <Box>\r\n                <Box className={classes.formElement}>\r\n                  <TextField\r\n                    label=\"Name\"\r\n                    fullWidth\r\n                    required\r\n                    size=\"small\"\r\n                    name=\"name\"\r\n                    value={user.name}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Box>\r\n                <Box className={classes.formElement}>\r\n                  <TextField\r\n                    label=\"Contact\"\r\n                    fullWidth\r\n                    required\r\n                    size=\"small\"\r\n                    name=\"contact\"\r\n                    value={user.contact}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Box>\r\n                {userDetails.role === \"Student\" && (\r\n                  <Grid container spacing={2} className={classes.formElement}>\r\n                    <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                      <TextField\r\n                        label=\"Class\"\r\n                        fullWidth\r\n                        type=\"Name\"\r\n                        size=\"small\"\r\n                        name=\"class\"\r\n                        required\r\n                        value={user.class}\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                      <TextField\r\n                        label=\"Roll No\"\r\n                        fullWidth\r\n                        type=\"Name\"\r\n                        required\r\n                        size=\"small\"\r\n                        name=\"rollNo\"\r\n                        value={user.rollNo}\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                )}\r\n                {userDetails.role === \"Faculty\" && (\r\n                  <Box className={classes.formElement}>\r\n                    <TextField\r\n                      label=\"Expertise\"\r\n                      fullWidth\r\n                      required\r\n                      size=\"small\"\r\n                      name=\"expertise\"\r\n                      value={user.expertise}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n              <Box className={classes.formElement}>\r\n                <TextField\r\n                  label=\"Institute\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  required\r\n                  name=\"institute\"\r\n                  value={user.institute}\r\n                  onChange={handleChange}\r\n                />\r\n              </Box>\r\n              <Box className={classes.formElement}>\r\n                <TextField\r\n                  label=\"Address\"\r\n                  fullWidth\r\n                  required\r\n                  size=\"small\"\r\n                  name=\"address\"\r\n                  value={user.address}\r\n                  onChange={handleChange}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid container spacing={2} className={classes.formElement}>\r\n              <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <Button\r\n                  fullWidth\r\n                  onClick={() => props.setCurrPage(\"examList\")}\r\n                  variant=\"outlined\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <Button fullWidth onClick={handleUpdate} variant=\"contained\">\r\n                  Update\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default EditProfile;\r\n","import React, { useState } from \"react\";\r\nimport { Box, Button, Grid, Typography, Divider } from \"@mui/material\";\r\nimport { useTimer } from \"react-timer-hook\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport toast from \"react-simple-toasts\";\r\nimport { examDetailsStyles } from \"../styles/ExamStyle\";\r\n\r\nfunction ExamDetail(props) {\r\n  const expiryTimestamp = new Date(props.selectedTest.startTime);\r\n  const [isDisable, setIsDisable] = useState(true);\r\n  const { seconds, minutes, hours, days } = useTimer({\r\n    expiryTimestamp,\r\n    onExpire: () => setIsDisable(false),\r\n  });\r\n\r\n  const classes = examDetailsStyles();\r\n  const newResponses = {\r\n    testId: props.selectedTest._id,\r\n    testName: props.selectedTest.testName,\r\n    studentId: props.userDetails._id,\r\n    questions: props.selectedTest.questions,\r\n    totalMarks: props.selectedTest.totalMarks,\r\n    passingMarks: props.selectedTest.passingMarks,\r\n    recordedAnswers: [],\r\n  };\r\n  const instructions = [\r\n    \"It is an Online Examination system, fully computerized, user friendly having advanced security features making it fair, transparent and standardized\",\r\n    \"The examination does not require using any paper, pen, pencil and calculator.\",\r\n    \"Every student will take the examination on a Laptop/Desktop/Smart Phone\",\r\n    \"Student can enter the exam only after start time of exam is reached\",\r\n    \"Student have to give exam in FULL SCREEN MODE and in any case if student exit from full screen, all the questions will be disabled and he/she needs to click on FULL SCREEN BUTTON to resume\",\r\n    \"On computer screen every student will be given objective type Multiple Correct Questions and students needs to select appropriate set of answers by clicking the checkboxes\",\r\n    \"Student can save there progress by clicking the 'SAVE' button\",\r\n    \"Student can resume the test before the end time is reached, if due to some reasons exit from the test window\",\r\n    \"There will be NO NEGATIVE MARKING for the wrong answers.\",\r\n    \"Students can use 'ASK DOUBT' section to ask any doubt in between the examination\",\r\n    \"The system automatically shuts down when the time limit is over OR when unfair activities recorded AND if examinee finishes the exam before time he can quit by pressing the 'End Test' button. The students don’t click the 'END TEST' Button until the student want to quit from Examination\",\r\n    \"Once the examination is over student can see the results by navigating to the 'MY GRADES' section\",\r\n  ];\r\n\r\n  const getDuration = (startTime, endTime) => {\r\n    let m1 = moment(startTime);\r\n    let m2 = moment(endTime);\r\n    let m3 = m2.diff(m1, \"minutes\");\r\n    return m3 + \" min\";\r\n  };\r\n\r\n  const handleFullScreen = () => {\r\n    document.documentElement.requestFullscreen().catch((e) => console.log(e));\r\n  };\r\n  const handleStart = (e) => {\r\n    axios\r\n      .post(\"/responses/create\", newResponses, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + props.token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.data.result.completed) {\r\n          toast(\"Test already attempted\");\r\n          toast(\"Redirecting to result page\", 4000);\r\n          props.setCurrPage(\"resultHistory\");\r\n        } else {\r\n          console.log(res.data);\r\n          toast(res.data.message);\r\n          props.setResponsesId(res.data.result._id);\r\n          props.setLayout(\"examWindow\");\r\n          handleFullScreen();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast(err.message);\r\n        props.setLayout(\"home\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={12} md={4} lg={3} xl={3}>\r\n          <Box className={classes.box}>\r\n            <Typography className={classes.heading1}>Exam Details</Typography>\r\n            <Divider />\r\n            <Typography className={classes.formElement}>\r\n              <span>Test Name </span> {props.selectedTest.testName}\r\n            </Typography>\r\n            <Typography className={classes.formElement}>\r\n              <span>Subject </span> {props.selectedTest.subject}\r\n            </Typography>\r\n\r\n            <Typography className={classes.formElement}>\r\n              <span>Date </span>\r\n              {moment(props.selectedTest.startTime).format(\"YYYY-MM-DD\")}\r\n            </Typography>\r\n\r\n            <Typography className={classes.formElement}>\r\n              <span>Time </span>\r\n              {moment(props.selectedTest.startTime).format(\"HH:mm\")}\r\n            </Typography>\r\n\r\n            <Typography className={classes.formElement}>\r\n              <span> Duration </span>\r\n              {getDuration(\r\n                props.selectedTest.startTime,\r\n                props.selectedTest.endTime\r\n              )}\r\n            </Typography>\r\n            <Typography className={classes.formElement}>\r\n              <span> Total Marks </span>\r\n              {props.selectedTest.totalMarks}\r\n            </Typography>\r\n            <Typography className={classes.formElement}>\r\n              <span> Passing Marks </span>\r\n              {props.selectedTest.passingMarks}\r\n            </Typography>\r\n\r\n            <Typography className={classes.formElement}>\r\n              <span>Starts in </span>\r\n              {days}:{hours}:{minutes}:{seconds}\r\n            </Typography>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              fullWidth\r\n              disabled={isDisable}\r\n              onClick={handleStart}\r\n            >\r\n              Enter Exam\r\n            </Button>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={8} lg={9} xl={9}>\r\n          <Box className={classes.box}>\r\n            <Typography className={classes.heading2}>Instructions</Typography>\r\n            <Divider />\r\n            <Box className={classes.instructionsBox}>\r\n              {instructions.map((ele, ind) => (\r\n                <Typography className={classes.typo}>\r\n                  <span>{ind + 1 + \". \"}</span>\r\n                  {ele}\r\n                </Typography>\r\n              ))}\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ExamDetail;\r\n","import { Box, Button, Grid, Typography } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport toast from \"react-simple-toasts\";\r\nimport { examListStyles } from \"../styles/ExamStyle\";\r\n\r\nfunction ExamList(props) {\r\n  const classes = examListStyles();\r\n  const [testList, setTestList] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/test/get\", {\r\n        headers: {\r\n          Authorization: \"Bearer \" + props.token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.data.message === \"Success\") {\r\n          setTestList(res.data.result);\r\n          console.log(res.data);\r\n        } else {\r\n          toast(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        props.setLayout(\"home\");\r\n      });\r\n  }, []);\r\n\r\n  const handleEnter = (curTest) => {\r\n    props.setSelectedTest(curTest);\r\n    props.setCurrPage(\"examDetails\");\r\n  };\r\n\r\n  const getDuration = (startTime, endTime) => {\r\n    let m1 = moment(startTime);\r\n    let m2 = moment(endTime);\r\n    let m3 = m2.diff(m1, \"minutes\");\r\n    return m3 + \" minutes\";\r\n  };\r\n  return (\r\n    <Box className={classes.root}>\r\n      {testList.length ? (\r\n        <Grid container spacing={2}>\r\n          {testList.map((ele) => (\r\n            <Grid item xs={12} sm={6} md={6} lg={4} xl={4}>\r\n              <Box>\r\n                <Box className={classes.box}>\r\n                  <Typography className={classes.heading1}>\r\n                    Test Name : {ele.testName}\r\n                  </Typography>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={6}>\r\n                      <Typography className={classes.typo}>\r\n                        <span>Subject: </span> {ele.subject}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Typography className={classes.typo}>\r\n                        <span>Date: </span>\r\n                        {moment(ele.startTime).format(\"YYYY-MM-DD\")}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={6}>\r\n                      <Typography className={classes.typo}>\r\n                        <span>Time: </span>\r\n                        {moment(ele.startTime).format(\"HH:mm\")}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Typography className={classes.typo}>\r\n                        <span>Duration: </span>{\" \"}\r\n                        {getDuration(ele.startTime, ele.endTime)}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => handleEnter(ele)}\r\n                  >\r\n                    Enter\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      ) : (\r\n        <Box className={classes.notest}>No Tests Found</Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ExamList;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Stack,\r\n  IconButton,\r\n  FormControlLabel,\r\n  Switch,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport toast from \"react-simple-toasts\";\r\nimport { examListStyles } from \"../styles/ExamStyle\";\r\n\r\nfunction ExamList(props) {\r\n  const classes = examListStyles();\r\n  const [loading, setLoading] = useState(true);\r\n  const [testList, setTestList] = useState(null);\r\n  const [displayTest, setDisplayTest] = useState([]);\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  const handleChange = () => {\r\n    setChecked((prev) => !prev);\r\n  };\r\n\r\n  const fetchTests = () => {\r\n    axios\r\n      .get(\"/test/getByUser\", {\r\n        headers: {\r\n          Authorization: \"Bearer \" + props.token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.data.message === \"Success\") {\r\n          setTestList(res.data.result);\r\n          setDisplayTest(res.data.result.remainingTests);\r\n          console.log(res.data);\r\n        } else {\r\n          toast(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        props.setLayout(\"home\");\r\n      })\r\n      .finally(() => setLoading(false));\r\n  };\r\n  useEffect(() => {\r\n    fetchTests();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      if (checked) {\r\n        setDisplayTest(testList.expiredTests);\r\n      } else {\r\n        setDisplayTest(testList.remainingTests);\r\n      }\r\n    }\r\n  }, [checked]);\r\n\r\n  const handleDelete = (testId) => {\r\n    axios\r\n      .delete(\"/test/delete/\" + testId + \"/\" + props.userDetails._id, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + props.token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        toast(res.data.message);\r\n        fetchTests();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast(err.message);\r\n        props.setLayout(\"home\");\r\n      });\r\n  };\r\n  const handleEdit = (testId) => {\r\n    axios\r\n      .get(\"/test/fullDetails/\" + testId + \"/\" + props.userDetails._id, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + props.token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        toast(res.data.message);\r\n        console.log(res.data.result);\r\n        props.setEditTestDetails(res.data.result);\r\n        props.setCurrPage(\"createExam\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast(err.message);\r\n        props.setLayout(\"home\");\r\n      });\r\n  };\r\n  const handleEnter = (curTest) => {\r\n    props.setSelectedTest(curTest);\r\n    props.setCurrPage(\"examDetails\");\r\n  };\r\n\r\n  const getDuration = (startTime, endTime) => {\r\n    let m1 = moment(startTime);\r\n    let m2 = moment(endTime);\r\n    let m3 = m2.diff(m1, \"minutes\");\r\n    return m3 + \" minutes\";\r\n  };\r\n\r\n  const getResults = (testId) => {\r\n    axios\r\n      .get(\"/responses/getByTestId/\" + testId, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"OEC_token\"),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.data.message === \"Success\") {\r\n          props.setResponseHistory(res.data.result);\r\n          console.log(res.data.result);\r\n          props.setCurrPage(\"resultHistory\");\r\n          window.scrollTo({ top: 0 });\r\n        } else {\r\n          toast(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        props.setLayout(\"home\");\r\n      });\r\n  };\r\n\r\n  const Loader = () => {\r\n    return (\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          height: \"60vh\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <CircularProgress size=\"100px\" />\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const noTest = () => {\r\n    return (\r\n      <Box className={classes.notest}>\r\n        <Box>\r\n          <Box>No {checked ? \"expired \" : \"remaining \"}test found</Box>\r\n          <Button\r\n            style={{ marginTop: \"20px\" }}\r\n            variant=\"outlined\"\r\n            onClick={() => props.setCurrPage(\"createExam\")}\r\n          >\r\n            Create Test\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const content = () => {\r\n    if (loading) {\r\n      Loader();\r\n    } else {\r\n      return (\r\n        <>\r\n          <Box>\r\n            <FormControlLabel\r\n              control={<Switch checked={checked} onChange={handleChange} />}\r\n              label=\"Expired Test\"\r\n            />\r\n          </Box>\r\n          {displayTest.length === 0 && noTest()}\r\n          <Grid container spacing={2}>\r\n            {displayTest.map((ele, ind) => (\r\n              <Grid item xs={12} sm={12} md={6} lg={4} xl={4}>\r\n                <Box className={classes.box}>\r\n                  <Grid container spacing={2} className={classes.typo}>\r\n                    <Grid item xs={9}>\r\n                      <Typography className={classes.heading1}>\r\n                        <span>Test Name: </span> {ele.testName}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      <Stack direction=\"row\" spacing={1}>\r\n                        <IconButton\r\n                          size=\"small\"\r\n                          aria-label=\"edit\"\r\n                          onClick={() => handleEdit(ele._id)}\r\n                          disabled={checked}\r\n                        >\r\n                          <EditIcon />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          size=\"small\"\r\n                          aria-label=\"delete\"\r\n                          onClick={() => handleDelete(ele._id)}\r\n                          disabled={checked}\r\n                        >\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                      </Stack>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid container spacing={2} className={classes.typo}>\r\n                    <Grid item xs={6}>\r\n                      <Typography>\r\n                        <span>Subject: </span>\r\n                        {ele.subject}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Typography>\r\n                        <span>Duration: </span>\r\n                        {getDuration(ele.startTime, ele.endTime)}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid container spacing={2} className={classes.typo}>\r\n                    <Grid item xs={6}>\r\n                      <Typography>\r\n                        <span>Date: </span>\r\n                        {moment(ele.startTime).format(\"YYYY-MM-DD\")}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Typography>\r\n                        <span>Time: </span>\r\n                        {moment(ele.startTime).format(\"HH:mm\")}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  {checked ? (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={() => getResults(ele._id)}\r\n                    >\r\n                      Results\r\n                    </Button>\r\n                  ) : (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={() => handleEnter(ele)}\r\n                    >\r\n                      Enter\r\n                    </Button>\r\n                  )}\r\n                </Box>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n  return <Box className={classes.root}>{content()}</Box>;\r\n}\r\n\r\nexport default ExamList;\r\n","import { Drawer, Typography, Box, Avatar, Button, Grid } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport toast from \"react-simple-toasts\";\r\nimport { navbarStyle } from \"../styles/CommonStyle\";\r\nfunction Navbar(props) {\r\n  const classes = navbarStyle();\r\n  const [open, setOpen] = useState(false);\r\n  const userDetails = props.userDetails;\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"OEC_token\");\r\n    toast(\"Logged out successfully\");\r\n    props.setLayout(\"home\");\r\n  };\r\n  const toggleDrawer = (open) => (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n    setOpen(open);\r\n  };\r\n\r\n  const handleBox = () => {\r\n    if (userDetails.role === \"Student\") {\r\n      props.setCurrPage(\"resultHistory\");\r\n    } else {\r\n      props.setCurrPage(\"createExam\");\r\n    }\r\n  };\r\n\r\n  const gotoUpdate = () => {\r\n    setOpen(false);\r\n    props.setCurrPage(\"editProfile\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box className={classes.root}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={12} md={8} lg={8} xl={8}>\r\n            <Box className={classes.navHead}>Online Exam Conductor</Box>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={1} lg={1} xl={1}>\r\n            <Box\r\n              className={classes.navItem}\r\n              onClick={() => props.setLayout(\"register\")}\r\n            >\r\n              Register\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={1} lg={1} xl={1}>\r\n            <Box\r\n              className={classes.navItem}\r\n              onClick={() => props.setCurrPage(\"examList\")}\r\n            >\r\n              Exam List\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={1} lg={1} xl={1}>\r\n            <Box className={classes.navItem} onClick={handleBox}>\r\n              {userDetails.role === \"Student\" ? \"My Grades\" : \"Create Exam\"}\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={1} lg={1} xl={1}>\r\n            <Box className={classes.navItem} onClick={toggleDrawer(true)}>\r\n              Profile\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      <Drawer anchor=\"right\" open={open} onClose={toggleDrawer(false)}>\r\n        <Box className={classes.headBox}>\r\n          <Typography variant=\"h4\" className={classes.head}>\r\n            My Profile\r\n          </Typography>\r\n          <Avatar\r\n            sx={{\r\n              bgcolor: \"orange\",\r\n              width: 150,\r\n              height: 150,\r\n              margin: \"20px\",\r\n              fontSize: \"42px\",\r\n            }}\r\n          >\r\n            {userDetails.name[0]}\r\n          </Avatar>\r\n          <Box className={classes.outerBox}>\r\n            <Box className={classes.typo}>\r\n              <span>Name: </span> {userDetails.name}\r\n            </Box>\r\n            <Box className={classes.typo}>\r\n              <span>Email: </span> {userDetails.email}\r\n            </Box>\r\n            <Box className={classes.typo}>\r\n              <span>Role: </span> {userDetails.role}\r\n            </Box>\r\n            <Box className={classes.typo}>\r\n              <span>Address: </span> {userDetails.address}\r\n            </Box>\r\n            <Box className={classes.typo}>\r\n              <span>Institute: </span> {userDetails.institute}\r\n            </Box>\r\n            <Box className={classes.typo}>\r\n              <span>Contact: </span> {userDetails.contact}\r\n            </Box>\r\n            {userDetails.role === \"Student\" ? (\r\n              <>\r\n                <Box className={classes.typo}>\r\n                  <span>Class: </span> {userDetails.class}\r\n                </Box>\r\n                <Box className={classes.typo}>\r\n                  <span>Rollno: </span> {userDetails.rollNo}\r\n                </Box>\r\n              </>\r\n            ) : (\r\n              <Box className={classes.typo}>\r\n                <span>Expertise: </span> {userDetails.expertise}\r\n              </Box>\r\n            )}\r\n          </Box>\r\n          <Box className={classes.btnGrp}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  onClick={gotoUpdate}\r\n                >\r\n                  Update\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  fullWidth\r\n                  color=\"primary\"\r\n                  onClick={handleLogout}\r\n                >\r\n                  Logout\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import { makeStyles } from \"@mui/styles\";\r\nexport const studentResultStyles = makeStyles({\r\n  root: {\r\n    overflow: \"auto\",\r\n    padding: \"20px\",\r\n    height: \"100vh\",\r\n    backgroundColor: \"#f5f0e1\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  box: {\r\n    backgroundColor: \"white\",\r\n    boxShadow: \"0 4px 8px 0 rgb(0 0 0 / 20%)\",\r\n    padding: \"10px\",\r\n  },\r\n  table: {\r\n    height: \"500px\",\r\n    overflow: \"auto\",\r\n  },\r\n  typo: {\r\n    padding: \"10px\",\r\n    textAlign: \"left\",\r\n    fontSize: \"18px\",\r\n    \"& span\": {\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n});\r\n\r\nexport const responseListStyles = makeStyles({\r\n  root: {\r\n    overflow: \"auto\",\r\n    padding: \"20px\",\r\n    height: \"100vh\",\r\n    backgroundColor: \"#f5f0e1\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  table: {\r\n    height: \"500px\",\r\n    width: \"950px\",\r\n    overflow: \"auto\",\r\n  },\r\n});\r\n\r\nexport const resultHistoryStyles = makeStyles({\r\n  root: {\r\n    padding: \"20px\",\r\n    backgroundColor: \"#f5f0e1\",\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  box: {\r\n    padding: \"20px\",\r\n    backgroundColor: \"white\",\r\n    boxShadow: \"0 4px 8px 0 rgb(0 0 0 / 20%)\",\r\n  },\r\n  head: {\r\n    fontSize: \"26px !important\",\r\n    fontWeight: \"bold !important\",\r\n    marginBottom: \"10px !important\",\r\n  },\r\n  flexBox: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  formElement: {\r\n    margin: \"2px !important\",\r\n    padding: \"5px !important\",\r\n\r\n    \"& span\": {\r\n      fontWeight: \"bold !important\",\r\n    },\r\n  },\r\n  flexBox2: {\r\n    height: \"400px\",\r\n    overflow: \"auto\",\r\n    padding: \"10px\",\r\n  },\r\n});\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  Button,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Box,\r\n} from \"@mui/material\";\r\n\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport toast from \"react-simple-toasts\";\r\nimport { responseListStyles } from \"../styles/ResponseStyle\";\r\n\r\nfunction ResponsesList(props) {\r\n  const classes = responseListStyles();\r\n  const [responsesList, setResponsesList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/responses/getByUser\", {\r\n        headers: {\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"OEC_token\"),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.data.message === \"Success\") {\r\n          setResponsesList(res.data.result);\r\n          console.log(res.data.result);\r\n        } else {\r\n          toast(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        props.setLayout(\"home\");\r\n      });\r\n    return () => {\r\n      console.log(\"unmounts\");\r\n    };\r\n  }, []);\r\n\r\n  const handleView = (id) => {\r\n    console.log(id);\r\n    axios\r\n      .get(\"/responses/details/\" + id, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"OEC_token\"),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.data.message === \"Success\") {\r\n          console.log(res.data);\r\n          props.setCurResponses(res.data.result);\r\n        } else {\r\n          toast(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        props.setLayout(\"home\");\r\n      })\r\n      .finally(() => props.setCurrPage(\"singleResponses\"));\r\n  };\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box className={classes.table}>\r\n        {responsesList.length ? (\r\n          <TableContainer sx={{ maxHeight: 500 }} component={Paper}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell\r\n                    align=\"center\"\r\n                    width=\"10%\"\r\n                    sx={{ fontWeight: \"bold\" }}\r\n                  >\r\n                    S.No\r\n                  </TableCell>\r\n                  <TableCell width=\"30%\" sx={{ fontWeight: \"bold\" }}>\r\n                    Test Name\r\n                  </TableCell>\r\n                  <TableCell\r\n                    align=\"center\"\r\n                    width=\"15%\"\r\n                    sx={{ fontWeight: \"bold\" }}\r\n                  >\r\n                    Date\r\n                  </TableCell>\r\n                  <TableCell\r\n                    align=\"center\"\r\n                    width=\"15%\"\r\n                    sx={{ fontWeight: \"bold\" }}\r\n                  >\r\n                    Finish Time\r\n                  </TableCell>\r\n                  <TableCell\r\n                    align=\"center\"\r\n                    width=\"15%\"\r\n                    sx={{ fontWeight: \"bold\" }}\r\n                  >\r\n                    Result\r\n                  </TableCell>\r\n                  <TableCell\r\n                    align=\"center\"\r\n                    width=\"15%\"\r\n                    sx={{ fontWeight: \"bold\" }}\r\n                  >\r\n                    More Details\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {responsesList.map((row, ind) => (\r\n                  <TableRow\r\n                    key={row.name}\r\n                    sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                  >\r\n                    <TableCell\r\n                      align=\"center\"\r\n                      width=\"10%\"\r\n                      component=\"th\"\r\n                      scope=\"row\"\r\n                    >\r\n                      {ind + 1}\r\n                    </TableCell>\r\n\r\n                    <TableCell width=\"30%\">{row.testName}</TableCell>\r\n                    <TableCell align=\"center\" width=\"15%\">\r\n                      {moment(row.finishTime).format(\"YYYY-MM-DD\")}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\" width=\"15%\">\r\n                      {moment(row.finishTime).format(\"HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\" width=\"15%\">\r\n                      {row.passed ? \"Passed\" : \"Failed\"}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\" width=\"15%\">\r\n                      <Button onClick={() => handleView(row._id)}>View</Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        ) : (\r\n          <Box>No Responses</Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ResponsesList;\r\n","import React from \"react\";\r\nimport { VictoryPie } from \"victory-pie\";\r\nimport moment from \"moment\";\r\nimport { Box, Button, Grid, Typography } from \"@mui/material\";\r\nimport QuestionList from \"./QuestionList\";\r\nimport { resultHistoryStyles } from \"../styles/ResponseStyle\";\r\n\r\nfunction ResultHistory(props) {\r\n  const classes = resultHistoryStyles();\r\n  const selectedResponses = props.curResponses;\r\n  const myData = [\r\n    {\r\n      x: \"Correct\",\r\n      y: selectedResponses.scoresObtained,\r\n    },\r\n    {\r\n      x: \"Wrong\",\r\n      y: selectedResponses.totalMarks - selectedResponses.scoresObtained,\r\n    },\r\n  ];\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={12} md={3} lg={3} xl={3}>\r\n          <Box className={classes.box}>\r\n            {selectedResponses ? (\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={6} sm={6} md={12} lg={12} xl={12}>\r\n                  <Box>\r\n                    <Typography className={classes.head}>Results</Typography>\r\n                    <Typography className={classes.formElement}>\r\n                      <span>Date: </span>\r\n                      {moment(selectedResponses.finishTime).format(\r\n                        \"YYYY-MM-DD\"\r\n                      )}\r\n                    </Typography>\r\n                    <Typography className={classes.formElement}>\r\n                      <span>Finish Time: </span>\r\n                      {moment(selectedResponses.finishTime).format(\"HH:mm:ss\")}\r\n                    </Typography>\r\n                    <Typography className={classes.formElement}>\r\n                      <span>Total Marks: </span> {selectedResponses.totalMarks}\r\n                    </Typography>\r\n                    <Typography className={classes.formElement}>\r\n                      <span>Passing Obtained: </span>{\" \"}\r\n                      {selectedResponses.passingMarks}\r\n                    </Typography>\r\n                    <Typography className={classes.formElement}>\r\n                      <span>Marks Obtained: </span>{\" \"}\r\n                      {selectedResponses.scoresObtained}\r\n                    </Typography>\r\n                    <Typography className={classes.formElement}>\r\n                      <span>Status: </span>{\" \"}\r\n                      {selectedResponses.passed ? \"Passed\" : \"Failed\"}\r\n                    </Typography>\r\n                  </Box>\r\n                </Grid>\r\n                <Grid item xs={6} sm={6} md={12} lg={12} xl={12}>\r\n                  <Box>\r\n                    <VictoryPie\r\n                      height={300}\r\n                      padAngle={({ datum }) => datum.y}\r\n                      colorScale={[\"green\", \"red\"]}\r\n                      data={myData}\r\n                    />\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            ) : (\r\n              <Box>Select Exam</Box>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={9} lg={9} xl={9}>\r\n          <Box className={classes.box}>\r\n            <Box className={classes.flexBox}>\r\n              <Typography className={classes.head}>\r\n                TestName: {selectedResponses.testName}\r\n              </Typography>\r\n              <Button onClick={() => props.setCurrPage(\"resultHistory\")}>\r\n                Back\r\n              </Button>\r\n            </Box>\r\n\r\n            <Box className={classes.flexBox2}>\r\n              {selectedResponses && selectedResponses.questions.length ? (\r\n                <QuestionList\r\n                  questions={selectedResponses.questions}\r\n                  responses={selectedResponses}\r\n                ></QuestionList>\r\n              ) : (\r\n                <Box>No questions found</Box>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ResultHistory;\r\n","import React from \"react\";\r\nimport {\r\n  Table,\r\n  Typography,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Box,\r\n  Grid,\r\n} from \"@mui/material\";\r\n\r\nimport moment from \"moment\";\r\nimport { studentResultStyles } from \"../styles/ResponseStyle\";\r\n\r\nfunction StudentsResultList(props) {\r\n  const classes = studentResultStyles();\r\n  return (\r\n    <Box className={classes.root}>\r\n      {props.responseHistory ? (\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={3}>\r\n            <Box className={classes.box}>\r\n              <Typography className={classes.typo}>\r\n                <span>Test Name:</span> {props.responseHistory[0].testName}\r\n              </Typography>\r\n\r\n              <Typography className={classes.typo}>\r\n                <span>Date:</span>{\" \"}\r\n                {moment(props.responseHistory[0].finishTime).format(\r\n                  \"YYYY-MM-DD\"\r\n                )}\r\n              </Typography>\r\n              <Typography className={classes.typo}>\r\n                <span>Passing Marks:</span>{\" \"}\r\n                {props.responseHistory[0].passingMarks}\r\n              </Typography>\r\n              <Typography className={classes.typo}>\r\n                <span>Total Marks:</span> {props.responseHistory[0].totalMarks}\r\n              </Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={9}>\r\n            <Box className={classes.table}>\r\n              <TableContainer sx={{ maxHeight: 500 }} component={Paper}>\r\n                <Table stickyHeader>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        width=\"10%\"\r\n                        sx={{ fontWeight: \"bold\" }}\r\n                      >\r\n                        Rank\r\n                      </TableCell>\r\n                      <TableCell width=\"30%\" sx={{ fontWeight: \"bold\" }}>\r\n                        Student Name\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        width=\"15%\"\r\n                        sx={{ fontWeight: \"bold\" }}\r\n                      >\r\n                        Scores Obtained\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        width=\"15%\"\r\n                        sx={{ fontWeight: \"bold\" }}\r\n                      >\r\n                        Finish Time\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        width=\"15%\"\r\n                        sx={{ fontWeight: \"bold\" }}\r\n                      >\r\n                        Result\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {props.responseHistory.length ? (\r\n                      props.responseHistory.map((row, ind) => (\r\n                        <TableRow\r\n                          key={row.name}\r\n                          sx={{\r\n                            \"&:last-child td, &:last-child th\": { border: 0 },\r\n                          }}\r\n                        >\r\n                          <TableCell\r\n                            align=\"center\"\r\n                            width=\"10%\"\r\n                            component=\"th\"\r\n                            scope=\"row\"\r\n                          >\r\n                            {ind + 1}\r\n                          </TableCell>\r\n\r\n                          <TableCell width=\"30%\">\r\n                            {row.studentId.name}\r\n                          </TableCell>\r\n                          <TableCell align=\"center\" width=\"15%\">\r\n                            {row.scoresObtained}\r\n                          </TableCell>\r\n                          <TableCell align=\"center\" width=\"15%\">\r\n                            {moment(row.finishTime).format(\"HH:mm:ss\")}\r\n                          </TableCell>\r\n                          <TableCell align=\"center\" width=\"15%\">\r\n                            {row.passed ? \"Passed\" : \"Failed\"}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))\r\n                    ) : (\r\n                      <Box>No responses</Box>\r\n                    )}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        <Box>Loading</Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default StudentsResultList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useTimer } from \"react-timer-hook\";\r\nimport axios from \"axios\";\r\nimport { examWindowTeacherStyles } from \"../styles/ExamStyle\";\r\nimport ChatWindow from \"./ChatWindow\";\r\nimport QuestionList from \"./QuestionList\";\r\nimport toast from \"react-simple-toasts\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n  Divider,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\n\r\nfunction ExamWindowTeacher(props) {\r\n  const classes = examWindowTeacherStyles();\r\n  const [loading, setLoading] = useState(true);\r\n  const [startTest, setStartTest] = useState(false);\r\n  const selectedTest = props.selectedTest;\r\n  const [testDetails, setTestDetails] = useState(null);\r\n  const expiryTimestamp1 = new Date(selectedTest.startTime);\r\n  const expiryTimestamp2 = new Date(selectedTest.endTime);\r\n  const { seconds, minutes, hours, days } = useTimer({\r\n    expiryTimestamp: expiryTimestamp1,\r\n    onExpire: () => setStartTest(true),\r\n  });\r\n\r\n  const endTimer = useTimer({\r\n    expiryTimestamp: expiryTimestamp2,\r\n    onExpire: () => handleTestEnd(),\r\n  });\r\n  const getDuration = (startTime, endTime) => {\r\n    let m1 = moment(startTime);\r\n    let m2 = moment(endTime);\r\n    let m3 = m2.diff(m1, \"minutes\");\r\n    return m3 + \" min\";\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        \"/test/fullDetails/\" +\r\n          props.selectedTest._id +\r\n          \"/\" +\r\n          props.userDetails._id,\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + props.token,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        if (res.data.message === \"Success\") {\r\n          setTestDetails(res.data.result);\r\n          console.log(res.data);\r\n        } else {\r\n          toast(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        props.setLayout(\"home\");\r\n      })\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  const getResults = (testId) => {\r\n    axios\r\n      .get(\"/responses/getByTestId/\" + testId, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"OEC_token\"),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.data.message === \"Success\") {\r\n          props.setResponseHistory(res.data.result);\r\n          console.log(res.data.result);\r\n          props.setCurrPage(\"resultHistory\");\r\n          window.scrollTo({ top: 0 });\r\n        } else {\r\n          toast(res.data.message);\r\n          props.setCurrPage(\"examList\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        props.setLayout(\"home\");\r\n      });\r\n  };\r\n  const handleTestEnd = () => {\r\n    toast(\"Test Ended\", 4000);\r\n    toast(\"Fetching result list\", 4000);\r\n    getResults(props.selectedTest._id);\r\n  };\r\n  const Loader = () => {\r\n    return (\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          height: \"60vh\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <CircularProgress size=\"100px\" />\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const content = () => {\r\n    if (loading) {\r\n      Loader();\r\n    } else {\r\n      return (\r\n        <Box className={classes.root}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={12} md={4} lg={4} xl={4}>\r\n              <Box className={classes.box}>\r\n                <Box>\r\n                  <Box>\r\n                    <Typography className={classes.heading2}>\r\n                      {\"Test Name | \" + props.selectedTest.testName}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography className={classes.formElement}>\r\n                      {\"Total Marks  \" + props.selectedTest.totalMarks}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Divider />\r\n                  <Typography className={classes.formElement}>\r\n                    <span>Subject </span> {props.selectedTest.subject}\r\n                  </Typography>\r\n                  <Typography className={classes.formElement}>\r\n                    <span> Duration </span>\r\n                    {getDuration(\r\n                      props.selectedTest.startTime,\r\n                      props.selectedTest.endTime\r\n                    )}\r\n                  </Typography>\r\n                  {!startTest ? (\r\n                    <Typography className={classes.formElement}>\r\n                      <span>Starts in </span> {days}:{hours}:{minutes}:{seconds}\r\n                    </Typography>\r\n                  ) : (\r\n                    <Typography className={classes.formElement}>\r\n                      <span>Ends in </span>\r\n                      {endTimer.days}:{endTimer.hours}:{endTimer.minutes}:\r\n                      {endTimer.seconds}\r\n                    </Typography>\r\n                  )}\r\n                </Box>\r\n              </Box>\r\n              <Box className={classes.chatBox}>\r\n                {startTest ? (\r\n                  <ChatWindow\r\n                    userDetails={props.userDetails.name}\r\n                    testId={selectedTest._id}\r\n                  ></ChatWindow>\r\n                ) : (\r\n                  <Box className={classes.heading1}>Test not started yet</Box>\r\n                )}\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={8} lg={8} xl={8}>\r\n              <Box className={classes.outerBox}>\r\n                <Box className={classes.questionList}>\r\n                  <QuestionList\r\n                    role={props.userDetails.role}\r\n                    questions={testDetails.questions}\r\n                    deleteQuestion={() => console.log(\"Deleted\")}\r\n                  ></QuestionList>\r\n                </Box>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      );\r\n    }\r\n  };\r\n  return <Box>{content()}</Box>;\r\n}\r\n\r\nexport default ExamWindowTeacher;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport CreateExam from \"./CreateExam\";\r\nimport CreateQuestion from \"./CreateQuestion\";\r\nimport EditProfile from \"./EditProfile\";\r\nimport ExamDetail from \"./ExamDetail\";\r\nimport ExamList from \"./ExamList\";\r\nimport ExamListTeacher from \"./ExamListTeacher\";\r\nimport Navbar from \"./Navbar\";\r\nimport ResponsesList from \"./ResponsesList\";\r\nimport ResultHistory from \"./ResultHistory\";\r\nimport toast from \"react-simple-toasts\";\r\nimport StudentsResultList from \"./StudentsResultList\";\r\nimport ExamWindowTeacher from \"./ExamWindowTeacher\";\r\nimport { commonStyles } from \"../styles/CommonStyle\";\r\n\r\nfunction ContentArea(props) {\r\n  const classes = commonStyles();\r\n  const [userDetails, setUserDetails] = useState(null);\r\n  const [currPage, setCurrPage] = useState(\"examList\");\r\n  const [curResponses, setCurResponses] = useState(null);\r\n  const [responseHistory, setResponseHistory] = useState(null);\r\n  const [editTestDetails, setEditTestDetails] = useState(null);\r\n  const token = localStorage.getItem(\"OEC_token\");\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/user/details\", {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.data.message === \"Success\") {\r\n          setUserDetails(res.data.result);\r\n          props.setUsername(res.data.result.name);\r\n        } else {\r\n          toast(res.data.message);\r\n        }\r\n      })\r\n      .then(() => console.log(props.username))\r\n      .catch((err) => {\r\n        toast(err.message);\r\n        console.log(err);\r\n        props.setLayout(\"home\");\r\n      });\r\n  }, []);\r\n  const renderPage = () => {\r\n    if (currPage === \"createQuestion\") {\r\n      return (\r\n        <CreateQuestion\r\n          setLayout={props.setLayout}\r\n          userDetails={userDetails}\r\n          token={token}\r\n        ></CreateQuestion>\r\n      );\r\n    } else if (currPage === \"createExam\") {\r\n      return (\r\n        <CreateExam\r\n          setLayout={props.setLayout}\r\n          userDetails={userDetails}\r\n          token={token}\r\n          editTestDetails={editTestDetails}\r\n          setCurrPage={setCurrPage}\r\n          setEditTestDetails={setEditTestDetails}\r\n        ></CreateExam>\r\n      );\r\n    } else if (currPage === \"editProfile\") {\r\n      return (\r\n        <EditProfile\r\n          setLayout={props.setLayout}\r\n          userDetails={userDetails}\r\n          setUserDetails={setUserDetails}\r\n          token={token}\r\n          currPage={currPage}\r\n          setCurrPage={setCurrPage}\r\n        ></EditProfile>\r\n      );\r\n    } else if (currPage === \"examList\") {\r\n      return userDetails.role === \"Student\" ? (\r\n        <ExamList\r\n          setLayout={props.setLayout}\r\n          userDetails={userDetails}\r\n          token={token}\r\n          selectedTest={props.selectedTest}\r\n          setSelectedTest={props.setSelectedTest}\r\n          setCurrPage={setCurrPage}\r\n        ></ExamList>\r\n      ) : (\r\n        <ExamListTeacher\r\n          setLayout={props.setLayout}\r\n          userDetails={userDetails}\r\n          token={token}\r\n          selectedTest={props.selectedTest}\r\n          setSelectedTest={props.setSelectedTest}\r\n          setCurrPage={setCurrPage}\r\n          responseHistory={responseHistory}\r\n          setResponseHistory={setResponseHistory}\r\n          editTestDetails={editTestDetails}\r\n          setEditTestDetails={setEditTestDetails}\r\n        ></ExamListTeacher>\r\n      );\r\n    } else if (currPage === \"examDetails\") {\r\n      return userDetails.role === \"Student\" ? (\r\n        <ExamDetail\r\n          setLayout={props.setLayout}\r\n          userDetails={userDetails}\r\n          token={token}\r\n          responsesId={props.responsesId}\r\n          setResponsesId={props.setResponsesId}\r\n          selectedTest={props.selectedTest}\r\n          setSelectedTest={props.setSelectedTest}\r\n          setCurrPage={setCurrPage}\r\n        ></ExamDetail>\r\n      ) : (\r\n        <ExamWindowTeacher\r\n          setLayout={props.setLayout}\r\n          userDetails={userDetails}\r\n          token={token}\r\n          responsesId={props.responsesId}\r\n          setResponsesId={props.setResponsesId}\r\n          selectedTest={props.selectedTest}\r\n          setSelectedTest={props.setSelectedTest}\r\n          setCurrPage={setCurrPage}\r\n          responseHistory={responseHistory}\r\n          setResponseHistory={setResponseHistory}\r\n        ></ExamWindowTeacher>\r\n      );\r\n    } else if (currPage === \"resultHistory\") {\r\n      return userDetails.role === \"Student\" ? (\r\n        <ResponsesList\r\n          setLayout={props.setLayout}\r\n          userDetails={userDetails}\r\n          token={token}\r\n          selectedTest={props.selectedTest}\r\n          setSelectedTest={props.setSelectedTest}\r\n          setCurrPage={setCurrPage}\r\n          curResponses={curResponses}\r\n          setCurResponses={setCurResponses}\r\n        ></ResponsesList>\r\n      ) : (\r\n        <StudentsResultList\r\n          setLayout={props.setLayout}\r\n          userDetails={userDetails}\r\n          token={token}\r\n          selectedTest={props.selectedTest}\r\n          setSelectedTest={props.setSelectedTest}\r\n          setCurrPage={setCurrPage}\r\n          responseHistory={responseHistory}\r\n          setResponseHistory={setResponseHistory}\r\n        ></StudentsResultList>\r\n      );\r\n    } else if (currPage === \"singleResponses\") {\r\n      return (\r\n        <ResultHistory\r\n          setLayout={props.setLayout}\r\n          userDetails={userDetails}\r\n          token={token}\r\n          selectedTest={props.selectedTest}\r\n          setSelectedTest={props.setSelectedTest}\r\n          setCurrPage={setCurrPage}\r\n          curResponses={curResponses}\r\n          setCurResponses={setCurResponses}\r\n        ></ResultHistory>\r\n      );\r\n    } else return <></>;\r\n  };\r\n  console.log(currPage);\r\n  const content = () => {\r\n    if (userDetails) {\r\n      return (\r\n        <div>\r\n          <Navbar\r\n            userDetails={userDetails}\r\n            setLayout={props.setLayout}\r\n            layout={props.layout}\r\n            currPage={currPage}\r\n            setCurrPage={setCurrPage}\r\n          ></Navbar>\r\n          {renderPage()}\r\n        </div>\r\n      );\r\n    } else return <div className={classes.loading}>Loading</div>;\r\n  };\r\n  return <>{content()}</>;\r\n}\r\n\r\nexport default ContentArea;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Checkbox,\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n} from \"@mui/material\";\r\nimport { useTimer } from \"react-timer-hook\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport axios from \"axios\";\r\nimport ChatWindow from \"./ChatWindow\";\r\nimport toast from \"react-simple-toasts\";\r\nimport { examWindowStyles } from \"../styles/ExamStyle\";\r\n\r\nfunction ExamWindow(props) {\r\n  const classes2 = examWindowStyles();\r\n  const selectedTest = props.selectedTest;\r\n  const [selectedTestDetails, setSelectedTestDetails] = useState(null);\r\n  const [answers, setAnswers] = useState(\r\n    localStorage.getItem(\"Answers\")\r\n      ? JSON.parse(localStorage.getItem(\"Answers\"))\r\n      : []\r\n  );\r\n  const [errMsg, setErrMsg] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n  const expiryTimestamp = new Date(selectedTest.endTime);\r\n  const { seconds, minutes, hours, days } = useTimer({\r\n    expiryTimestamp,\r\n    onExpire: () => handleSubmit(),\r\n  });\r\n\r\n  window.onfocus = function (ev) {\r\n    console.log(\"gained focus\");\r\n  };\r\n\r\n  window.onblur = function (ev) {\r\n    setCount(count + 1);\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/test/details/\" + selectedTest._id, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"OEC_token\"),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.data.message === \"Success\") {\r\n          setSelectedTestDetails(res.data.result);\r\n          if (localStorage.getItem(\"Answers\")) {\r\n            setAnswers(JSON.parse(localStorage.getItem(\"Answers\")));\r\n          } else {\r\n            setAnswers(\r\n              res.data.result.questions.map((ele) => [\r\n                false,\r\n                false,\r\n                false,\r\n                false,\r\n              ])\r\n            );\r\n          }\r\n          setErrMsg(res.data.result.questions.map((ele) => [\"\", \"\", \"\", \"\"]));\r\n          console.log(res.data);\r\n        } else {\r\n          toast(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast(err.message);\r\n        props.setLayout(\"main\");\r\n      });\r\n  }, [selectedTest._id]);\r\n\r\n  useEffect(() => {\r\n    if (count > selectedTest.activityThreshold) {\r\n      toast(\"Test is ended because of Tab switches\", 4000);\r\n      handleSubmit();\r\n    }\r\n  }, [count]);\r\n\r\n  const onSave = (id) => {\r\n    localStorage.setItem(\"Answers\", JSON.stringify(answers));\r\n    if (answers[id].reduce((sum, ele) => (ele ? (sum += 1) : sum), 0) > 0) {\r\n      setErrMsg(\r\n        errMsg.map((ele, ind) => {\r\n          if (ind === id) return \"\";\r\n          else return ele;\r\n        })\r\n      );\r\n      toast(\"Saved\");\r\n    } else {\r\n      setErrMsg(\r\n        errMsg.map((ele, ind) => {\r\n          if (ind === id) return \"Please select atleast one option\";\r\n          else return ele;\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const onChangeAnswers = (e, questionNumber, checkedOption) => {\r\n    setAnswers(\r\n      answers.map((singleAns, ind) => {\r\n        if (ind === questionNumber) {\r\n          const newSingleAns = singleAns.map((option, optionNo) => {\r\n            if (optionNo === checkedOption) return e.target.checked;\r\n            return option;\r\n          });\r\n          return newSingleAns;\r\n        }\r\n        return singleAns;\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleFullScreen = () => {\r\n    document.documentElement.requestFullscreen().catch((e) => console.log(e));\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    let savedAnswers = answers;\r\n    if (localStorage.getItem(\"Answers\")) {\r\n      savedAnswers = JSON.parse(localStorage.getItem(\"Answers\"));\r\n      localStorage.removeItem(\"Answers\");\r\n    }\r\n\r\n    const boolAnswerString = savedAnswers.map((ele) => ele.toString());\r\n    console.log(boolAnswerString);\r\n    axios\r\n      .post(\r\n        \"/responses/saveResult\",\r\n        {\r\n          responsesId: props.responsesId,\r\n          answers: boolAnswerString,\r\n          completed: true,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"OEC_token\"),\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        toast(res.data.message, 4000);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast(err.message, 4000);\r\n      })\r\n      .finally(() => props.setLayout(\"main\"));\r\n  };\r\n  return (\r\n    <Box className={classes2.root}>\r\n      {selectedTestDetails && answers.length ? (\r\n        <Grid container spacing={2}>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={12}\r\n            md={8}\r\n            lg={8}\r\n            xl={8}\r\n            className={classes2.questionGrid}\r\n          >\r\n            {selectedTestDetails.questions.map((ele, ind) => (\r\n              <Accordion\r\n                disabled={!document.fullscreenElement}\r\n                className={classes2.questionBox}\r\n              >\r\n                <AccordionSummary\r\n                  className={classes2.summary}\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                >\r\n                  <Grid container spacing={1}>\r\n                    <Grid item xs={10}>\r\n                      <Typography className={classes2.typo1}>\r\n                        {ind + 1 + \" \"}. {ele.questionName}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                      <Typography className={classes2.typo2}>\r\n                        Marks: {ele.marks}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  <Typography className={classes2.typo3}>\r\n                    {ele.problemStatement}\r\n                  </Typography>\r\n\r\n                  <Box>\r\n                    <Box>\r\n                      <Checkbox\r\n                        disabled={!document.fullscreenElement}\r\n                        checked={answers[ind][0]}\r\n                        onChange={(e) => onChangeAnswers(e, ind, 0)}\r\n                        name=\"opt_a\"\r\n                      />\r\n                      <Typography variant=\"p\">\r\n                        <span>A: </span> {ele.option_A}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                      <Checkbox\r\n                        disabled={!document.fullscreenElement}\r\n                        checked={answers[ind][1]}\r\n                        onChange={(e) => onChangeAnswers(e, ind, 1)}\r\n                        name=\"opt_b\"\r\n                      />\r\n                      <Typography variant=\"p\">\r\n                        <span>B:</span> {ele.option_B}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                      <Checkbox\r\n                        disabled={!document.fullscreenElement}\r\n                        checked={answers[ind][2]}\r\n                        onChange={(e) => onChangeAnswers(e, ind, 2)}\r\n                        name=\"opt_c\"\r\n                      />\r\n                      <Typography variant=\"p\">\r\n                        <span>C:</span> {ele.option_C}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                      <Checkbox\r\n                        disabled={!document.fullscreenElement}\r\n                        checked={answers[ind][3]}\r\n                        onChange={(e) => onChangeAnswers(e, ind, 3)}\r\n                        name=\"opt_d\"\r\n                      />\r\n                      <Typography variant=\"p\">\r\n                        <span>D:</span> {ele.option_D}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                  <Box className={classes2.flexBox1}>\r\n                    <Typography className={classes2.err}>\r\n                      {errMsg[ind]}\r\n                    </Typography>\r\n                    <Button\r\n                      disabled={!document.fullscreenElement}\r\n                      variant=\"contained\"\r\n                      onClick={() => onSave(ind)}\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  </Box>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            ))}\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={4} lg={4} xl={4}>\r\n            <Box>\r\n              <Box className={classes2.examDetailsBox}>\r\n                <Box className={classes2.headBox}>\r\n                  <Typography className={classes2.testName}>\r\n                    {\"Test Name | \" + selectedTest.testName}\r\n                  </Typography>\r\n                </Box>\r\n                <Box className={classes2.flexBox1}>\r\n                  <Typography className={classes2.typo4}>\r\n                    Total Marks: {selectedTest.totalMarks}\r\n                  </Typography>\r\n                  <Typography className={classes2.typo4}>\r\n                    Passing Marks: {selectedTest.passingMarks}\r\n                  </Typography>\r\n                </Box>\r\n                <Box className={classes2.flexBox1}>\r\n                  <Typography className={classes2.typo4}>\r\n                    Ends in: <span>{days}</span>:<span>{hours}</span>:\r\n                    <span>{minutes}</span>:<span>{seconds}</span>\r\n                  </Typography>\r\n                  <Typography className={classes2.typo4}>\r\n                    Subject: {selectedTest.subject}\r\n                  </Typography>\r\n                </Box>\r\n                {!document.fullscreenElement && (\r\n                  <Typography className={classes2.err2}>\r\n                    Please enable full screen by pressing the button below\r\n                  </Typography>\r\n                )}\r\n                <Grid container spacing={2} className={classes2.buttonGrid}>\r\n                  <Grid item xs={6}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      fullWidth\r\n                      onClick={handleFullScreen}\r\n                    >\r\n                      Full Screen\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      fullWidth\r\n                      onClick={handleSubmit}\r\n                    >\r\n                      End Test\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n              <ChatWindow\r\n                userDetails={props.username}\r\n                testId={selectedTest._id}\r\n              ></ChatWindow>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        <Box>Loading</Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ExamWindow;\r\n","import React, { useState } from \"react\";\r\nimport { Box, Grid, Button, TextField } from \"@mui/material\";\r\nimport toast from \"react-simple-toasts\";\r\nimport axios from \"axios\";\r\nimport { homeStyle } from \"../styles/CommonStyle\";\r\nimport { validateEmail } from \"../helpers/validations\";\r\nfunction Home(props) {\r\n  const classes = homeStyle();\r\n\r\n  const [user, setUser] = useState({ email: \"\", password: \"\" });\r\n\r\n  const goToRegister = () => {\r\n    props.setLayout(\"register\");\r\n  };\r\n  const handleChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateEmail(user.email)) toast(\"Enter the valid email\");\r\n    else if (user.password === \"\") toast(\"Password cannot be empty\");\r\n    else {\r\n      axios\r\n        .post(\"/user/login\", user)\r\n        .then((res) => {\r\n          toast(res.data.message);\r\n\r\n          if (res.data.message === \"success\") {\r\n            localStorage.setItem(\"OEC_token\", res.data.token);\r\n            props.setLayout(\"main\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          toast(err.message);\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box className={classes.box}>\r\n        <Box className={classes.head}>Online Exam Conductor</Box>\r\n        <Box className={classes.para}>\r\n          Welcome, please enter your login credentials!\r\n        </Box>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              value={user.email}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              size=\"small\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              value={user.password}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              size=\"small\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Box>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={handleSubmit}\r\n            fullWidth\r\n            className={classes.btn}\r\n            color=\"success\"\r\n          >\r\n            Login\r\n          </Button>\r\n\r\n          <Box className={classes.typo} onClick={goToRegister}>\r\n            Need an account? <span className={classes.link}>Register here</span>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  TextField,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport toast from \"react-simple-toasts\";\r\nimport { registerStyle } from \"../styles/CommonStyle\";\r\nimport {\r\n  validateEmail,\r\n  validateExpertise,\r\n  validateMobile,\r\n} from \"../helpers/validations\";\r\n\r\nconst intialState = {\r\n  email: \"\",\r\n  password: \"\",\r\n  name: \"\",\r\n  address: \"\",\r\n  contact: \"\",\r\n  role: \"Student\",\r\n  institute: \"\",\r\n  class: \"\",\r\n  rollNo: \"\",\r\n  expertise: \"\",\r\n};\r\n\r\nfunction Register(props) {\r\n  const classes = registerStyle();\r\n  const [user, setUser] = useState(intialState);\r\n  const [errMsg, setErrMsg] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const goToHome = () => {\r\n    props.setLayout(\"home\");\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateEmail(user.email)) setErrMsg(\"Email is not valid\");\r\n    else if (!validateMobile(user.contact))\r\n      setErrMsg(\"Contact number should have 10 digits\");\r\n    else if (!validateExpertise(user.expertise))\r\n      setErrMsg(\"Expertise Subjects should be separated by single space\");\r\n    else if (user.password === \"\" || user.name === \"\" || user.address === \"\")\r\n      setErrMsg(\"A required field cannot be empty\");\r\n    else {\r\n      axios\r\n        .post(\"/user/register\", user)\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          toast(res.data.message);\r\n          setUser(intialState);\r\n          setErrMsg(\"\");\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <Box className={classes.head}>Register</Box>\r\n\r\n          <Box className={classes.formElement}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"email\"\r\n                  label=\"Email\"\r\n                  value={user.email}\r\n                  onChange={handleChange}\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  required\r\n                  label=\"Password\"\r\n                  onChange={handleChange}\r\n                  value={user.password}\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          <Box className={classes.formElement}>\r\n            <TextField\r\n              label=\"Name\"\r\n              name=\"name\"\r\n              required\r\n              value={user.name}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              size=\"small\"\r\n            />\r\n          </Box>\r\n          <Box className={classes.formElement}>\r\n            <TextField\r\n              label=\"Address\"\r\n              name=\"address\"\r\n              required\r\n              value={user.address}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              size=\"small\"\r\n            />\r\n          </Box>\r\n          <Box className={classes.formElement}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  name=\"contact\"\r\n                  required\r\n                  value={user.contact}\r\n                  onChange={handleChange}\r\n                  label=\"Contact\"\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <TextField\r\n                  sx={{ textAlign: \"left\" }}\r\n                  fullWidth\r\n                  label=\"Role\"\r\n                  required\r\n                  select\r\n                  size=\"small\"\r\n                  name=\"role\"\r\n                  value={user.role}\r\n                  onChange={handleChange}\r\n                >\r\n                  {[\"Faculty\", \"Student\"].map((option) => (\r\n                    <MenuItem key={option} value={option}>\r\n                      {option}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          <Box className={classes.formElement}>\r\n            <TextField\r\n              label=\"Institute\"\r\n              name=\"institute\"\r\n              onChange={handleChange}\r\n              value={user.institute}\r\n              fullWidth\r\n              size=\"small\"\r\n            />\r\n          </Box>\r\n          {user.role === \"Student\" ? (\r\n            <Box className={classes.formElement}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Class\"\r\n                    type=\"Name\"\r\n                    size=\"small\"\r\n                    name=\"class\"\r\n                    onChange={handleChange}\r\n                    value={user.class}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Roll No\"\r\n                    type=\"Name\"\r\n                    size=\"small\"\r\n                    name=\"rollNo\"\r\n                    onChange={handleChange}\r\n                    value={user.rollNo}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          ) : (\r\n            <Box className={classes.formElement}>\r\n              <TextField\r\n                label=\"Assigned Subjects\"\r\n                fullWidth\r\n                name=\"expertise\"\r\n                size=\"small\"\r\n                helperText=\"Add space-separated assigned subjects\"\r\n                value={user.expertise}\r\n                onChange={handleChange}\r\n              />\r\n            </Box>\r\n          )}\r\n          <Box className={classes.err}>{errMsg}</Box>\r\n          <Grid container spacing={2} className={classes.formElement}>\r\n            <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n              <Box>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  fullWidth\r\n                  color=\"success\"\r\n                  onClick={handleSubmit}\r\n                >\r\n                  Register\r\n                </Button>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n              <Box>\r\n                <Button variant=\"outlined\" fullWidth onClick={goToHome}>\r\n                  Go to login\r\n                </Button>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React, { useState } from \"react\";\r\nimport ChatWindow from \"./ChatWindow\";\r\nimport ContentArea from \"./ContentArea\";\r\nimport ExamWindow from \"./ExamWindow\";\r\nimport Home from \"./Home\";\r\nimport Navbar from \"./Navbar\";\r\nimport Register from \"./Register\";\r\n\r\nfunction MainLayout(props) {\r\n  const initialPage = localStorage.getItem(\"OEC_token\") ? \"main\" : \"home\";\r\n\r\n  const [layout, setLayout] = useState(initialPage);\r\n  const [selectedTest, setSelectedTest] = useState(null);\r\n  const [responsesId, setResponsesId] = useState(null);\r\n\r\n  const [username, setUsername] = useState(null);\r\n\r\n  const renderLayout = () => {\r\n    if (layout === \"home\") {\r\n      return <Home setLayout={setLayout} layout={layout}></Home>;\r\n    } else if (layout === \"register\") {\r\n      return <Register setLayout={setLayout} layout={layout}></Register>;\r\n    } else if (layout === \"main\") {\r\n      return (\r\n        <ContentArea\r\n          selectedTest={selectedTest}\r\n          setSelectedTest={setSelectedTest}\r\n          setLayout={setLayout}\r\n          layout={layout}\r\n          username={username}\r\n          setUsername={setUsername}\r\n          responsesId={responsesId}\r\n          setResponsesId={setResponsesId}\r\n        ></ContentArea>\r\n      );\r\n    } else if (layout === \"examWindow\") {\r\n      return (\r\n        <ExamWindow\r\n          username={username}\r\n          setUsername={setUsername}\r\n          selectedTest={selectedTest}\r\n          setSelectedTest={setSelectedTest}\r\n          setLayout={setLayout}\r\n          responsesId={responsesId}\r\n          setResponsesId={setResponsesId}\r\n          layout={layout}\r\n        ></ExamWindow>\r\n      );\r\n    }\r\n  };\r\n  return <div>{renderLayout()}</div>;\r\n}\r\n\r\nexport default MainLayout;\r\n","import \"./App.css\";\r\nimport MainLayout from \"./components/MainLayout\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <MainLayout></MainLayout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}